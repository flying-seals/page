{"componentChunkName":"component---src-views-blog-single-index-tsx","path":"/blog/2018/8/10/kyma-knative-progress-report","webpackCompilationHash":"aefb7e842b40c338951f","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/2018/8/10/kyma-knative-progress-report","post":{"id":"1b2f5287-6c75-5d3b-8a55-dd619ede7731","rawMarkdownBody":"\nWhen Kyma was introduced to the public a few weeks ago at [Google Cloud Next ’18](https://cloud.withgoogle.com/next18/sf/), we talked about the strong partnership that we have with the Knative community. Kyma and Knative provide two complementary sets of building blocks, which together offer a powerful framework and a toolset to build cloud-native solutions on top of Kubernetes.\n\n<!-- overview -->\n\n![Kyma and Knative](./1-kyma-knative.png)\n\nIf you look at the Kyma source code right now, you might wonder why you are not finding many references to Knative. The answer is quite simple. In the last month and a half, the entire Kyma team has been working on restructuring the repositories, making them ready to go open source and removing all internal references and tool dependencies. We've done all of that from a stable branch.  \n\nIn parallel to those major changes, we have a fork with Kyma and Knative integrated. It was used to build some first proof-of-concept cloud-native solutions using Knative and Kyma deployed together. The fork is also the basis for our stage demo shown during [the project launch](https://www.youtube.com/watch?v=NaaGPGKyXEc&amp;t=42m50s). This was our first approach at combining the projects. As both Kyma and Knative are really young and going through a number of changes, some of our design decisions have not been optimal in retrospect. \n \nDuring the coming weeks, our plan is to refactor the current Kyma codebase and modularize it. Several functional components can then be installed optionally, which will certainly improve the experience when developing locally using for example [Minikube](https://kubernetes.io/docs/tasks/tools/install-minikube/). \n \nAs shared technologies such as [Istio](https://istio.io/) are concerned, we're going to provide needed configuration options so that Istio deployed with Knative will also support all Kyma's requirements. \n \nAnd finally, we are going to extract some components. For example, we'll extract Kyma eventing and fully integrate it with Knative eventing. We'll evaluate the possibility of contributing the Kyma eventing based on [NATS](https://nats.io/) streaming as a Knative compatible eventing implementation to the Knative project. Users of Knative and Kyma will than have the additional option of deciding which eventing implementation to use (e.g. as an alternative to the Knative provided Kafka based implementation). \n \nStay tuned for more updates! Remember! Your ideas and proposals are highly welcome. Don't be shy!  ","excerpt":"When Kyma was introduced to the public a few weeks ago at Google Cloud Next ’18, we talked about the strong partnership that we have with the Knative community. Kyma and Knative provide two complementary sets of building blocks, which together offer a powerful framework and a toolset to build cloud-native solutions on top of Kubernetes.","fields":{"slug":"/blog/2018/8/10/kyma-knative-progress-report","assetsPath":"/assets/blog-posts/2018-08-10-kyma-knative-progress-report/","date":"August 10, 2018","postInfo":{"fileName":"kyma-knative-progress-report","year":2018,"month":8,"day":10}},"frontmatter":{"title":"Kyma and Knative Integration - Progress Update","author":{"name":"Ralf Hofmann, Kyma Cloud Software Architecture"},"tags":["kyma","cloud","native","GoogleNext2018","knative","istio","kubernetes"],"type":null,"releaseTag":null,"redirectFrom":["/blog/kyma-knative-progress-report"]}},"assetsPath":"/assets/blog-posts/2018-08-10-kyma-knative-progress-report/","previous":{"id":"780e2f5c-3438-5815-b6b1-085e46822a25","rawMarkdownBody":"\nAt SAP we typically deal with lots of enterprise software coming from a variety of different vendors. We've helped many of our customers and partners in all industries to model software to their needs and unique business processes. To meet the desire for flexibility, we see a growing demand for openness and modern architecture in this space. That's why we decided to spin the development of our new extension framework, Kyma, out in open source. We’d like to encourage all of you to take a look, get involved and lend a hand to expand Kyma to cover even more exciting extension scenarios.\n\n<!-- overview -->\n\nThe ideas and concepts in Kyma result out of long years of experience in customizing different SAP and SAP Hybris solutions. It lets you create serverless applications, mashups and micro services – all running on the underlying Kubernetes+Istio – both serving as the foundation of Kyma. On top we enable developers to quickly code small customization modules and extension apps, interweaved with the business logic of the extended enterprise application. \n\nAnd then [Knative](https://cloud.google.com/knative/) came into the picture. Build from the ground up to support, container-based and cloud-native applications – it provides building blocks for developers to build and deploy container-based serverless applications anywhere on Kubernetes. Sounds familiar, right? All of us at SAP were super excited to see that the Knative dev team has taken very similar technology decisions. It felt like a validation of our Kyma scenarios from one side as well as the technology vision we had in the broader SAP Hybris team from another. From that point on – it was clear that Kyma and Knative are bound to grow together. On our end – we’ve refactored Kyma to leverage Knative configuration, build and serving components already from the on-start. We dropped some of the overlapping components, making Kyma leaner and more streamlined. We got as well all-in involved in Knative, having the opportunity to work with the incredible Google Cloud team.\n\nA quote coming from the discussions, that stuck and made the whole Kyma team at SAP incredibly proud was:\n\n> \"SAP's extensive enterprise expertise and far-reaching commercial experience made for an ideal partnership as we developed Knative. SAP brought informed customer-driven use-cases to the table, helping us collectively shape the capabilities of Knative to meet the needs of real-world businesses. Knative and SAP Kyma make a perfect fit, and we look forward to the ongoing technical collaboration.” -DeWitt Clinton, Google Cloud\n\nThis collaboration gives us the chance to focus Kyma on the higher-level enterprise application connectivity and service consumption scenarios, relying on Knative for all the low-level infrastructure and development scenarios. \n\nWe strongly believe in open technologies and open collaboration. Our goal is to join forces with interested parties out there and to build the most flexible extension framework for any SaaS applications to be customized and extended.  \n\nGot you interested? Want to get involved? Get in touch with us via [Twitter](https://twitter.com/kymaproject), [GitHub](https://github.com/kyma-project) or our [Slack](http://slack.kyma-project.io) channel. We would also be very happy if you simply let us know your take on this!\n\nStay tuned for more updates... and have a great #GoogleNext2018!\n","excerpt":"At SAP we typically deal with lots of enterprise software coming from a variety of different vendors. We've helped many of our customers and partners in all industries to model software to their needs and unique business processes. To meet the desire for flexibility, we see a growing demand for openness and modern architecture in this space. That's why we decided to spin the development of our new extension framework, Kyma, out in open source. We’d like to encourage all of you to take a look, get involved and lend a hand to expand Kyma to cover even more exciting extension scenarios.","fields":{"slug":"/blog/2018/7/24/introduction-project-kyma","assetsPath":"/assets/blog-posts/2018-07-24-introduction-project-kyma/","date":"July 24, 2018","postInfo":{"fileName":"introduction-project-kyma","year":2018,"month":7,"day":24}},"frontmatter":{"title":"Introducing project Kyma","author":{"name":"Krasimir Semerdzhiev, Kyma Open Source Strategist"},"tags":["kyma","cloud","native","GoogleNext2018","knative","istio","kubernetes"],"type":null,"releaseTag":null,"redirectFrom":["/blog/introducing-project-kyma"]}},"next":{"id":"572eaa32-24de-588f-a46e-cb8000a43ad9","rawMarkdownBody":"\nNow that Kyma is out there available to the world you are most probably keen on testing and implementing your own scenarios leveraging Kyma. Well, we are happy to introduce you to a getting started guide for developers which is [a sample application based on Spring Boot](https://github.com/kyma-incubator/examples/tree/master/personservice) showing the features on Kyma.\n\n<!-- overview -->\n\nThis hands-on guide provides an end-to-end example application implementation in Java and Spring Boot running on Kyma. In the end state, you as a developer will understand all the features Kyma delivers. To summarize, this guide teaches you how to:\n\n- Deploy the application locally to Kyma (based on minikube) or to an actual Kyma cluster \n- Connect your service to Kyma as an extension platform and run a scenario\n- Extend business applications with Kyma through event-driven, Lambda (serverless) functions\n- Bind your application to a brokered backing service\n- Add authentication and authorization\n- Leverage Kubernetes Self-Healing\n- Use tracing and logging support\n\nWe would like to hear your feedback. If you face any issues or have any comments while testing Kyma, feel free to report them on [GitHub](https://github.com/kyma-incubator/examples).  \n\nWe also invite you to join the Kyma community on [Twitter](https://twitter.com/kymaproject) and [LinkedIn](https://www.linkedin.com/company/kyma-project/). \n\nHave fun with Kyma! \n","excerpt":"Now that Kyma is out there available to the world you are most probably keen on testing and implementing your own scenarios leveraging Kyma. Well, we are happy to introduce you to a getting started guide for developers which is a sample application based on Spring Boot showing the features on Kyma.","fields":{"slug":"/blog/2018/9/24/start-with-person-service","assetsPath":"/assets/blog-posts/2018-09-24-start-with-person-service/","date":"September 24, 2018","postInfo":{"fileName":"start-with-person-service","year":2018,"month":9,"day":24}},"frontmatter":{"title":"Get started guide for developers on Kyma","author":{"name":"Andreas Krause, Kyma Cloud Software Enablement"},"tags":["kyma","cloud","native","application","extension","example","integration"],"type":null,"releaseTag":null,"redirectFrom":["/blog/start-with-person-service"]}},"slidesBanner":{"bannerDuration":5000,"slides":[{"text":"Don't miss the session by Piotr Kopczynski at Helm Summit on September 11 at 15:47.","url":"https://helmsummit2019.sched.com/event/S8sS","startDate":"09/09/2019","endDate":"12/09/2019"}]},"locale":"en"}}}