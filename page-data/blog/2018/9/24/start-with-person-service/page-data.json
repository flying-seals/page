{"componentChunkName":"component---src-views-blog-single-index-tsx","path":"/blog/2018/9/24/start-with-person-service","webpackCompilationHash":"aefb7e842b40c338951f","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/2018/9/24/start-with-person-service","post":{"id":"572eaa32-24de-588f-a46e-cb8000a43ad9","rawMarkdownBody":"\nNow that Kyma is out there available to the world you are most probably keen on testing and implementing your own scenarios leveraging Kyma. Well, we are happy to introduce you to a getting started guide for developers which is [a sample application based on Spring Boot](https://github.com/kyma-incubator/examples/tree/master/personservice) showing the features on Kyma.\n\n<!-- overview -->\n\nThis hands-on guide provides an end-to-end example application implementation in Java and Spring Boot running on Kyma. In the end state, you as a developer will understand all the features Kyma delivers. To summarize, this guide teaches you how to:\n\n- Deploy the application locally to Kyma (based on minikube) or to an actual Kyma cluster \n- Connect your service to Kyma as an extension platform and run a scenario\n- Extend business applications with Kyma through event-driven, Lambda (serverless) functions\n- Bind your application to a brokered backing service\n- Add authentication and authorization\n- Leverage Kubernetes Self-Healing\n- Use tracing and logging support\n\nWe would like to hear your feedback. If you face any issues or have any comments while testing Kyma, feel free to report them on [GitHub](https://github.com/kyma-incubator/examples).  \n\nWe also invite you to join the Kyma community on [Twitter](https://twitter.com/kymaproject) and [LinkedIn](https://www.linkedin.com/company/kyma-project/). \n\nHave fun with Kyma! \n","excerpt":"Now that Kyma is out there available to the world you are most probably keen on testing and implementing your own scenarios leveraging Kyma. Well, we are happy to introduce you to a getting started guide for developers which is a sample application based on Spring Boot showing the features on Kyma.","fields":{"slug":"/blog/2018/9/24/start-with-person-service","assetsPath":"/assets/blog-posts/2018-09-24-start-with-person-service/","date":"September 24, 2018","postInfo":{"fileName":"start-with-person-service","year":2018,"month":9,"day":24}},"frontmatter":{"title":"Get started guide for developers on Kyma","author":{"name":"Andreas Krause, Kyma Cloud Software Enablement"},"tags":["kyma","cloud","native","application","extension","example","integration"],"type":null,"releaseTag":null,"redirectFrom":["/blog/start-with-person-service"]}},"assetsPath":"/assets/blog-posts/2018-09-24-start-with-person-service/","previous":{"id":"1b2f5287-6c75-5d3b-8a55-dd619ede7731","rawMarkdownBody":"\nWhen Kyma was introduced to the public a few weeks ago at [Google Cloud Next ’18](https://cloud.withgoogle.com/next18/sf/), we talked about the strong partnership that we have with the Knative community. Kyma and Knative provide two complementary sets of building blocks, which together offer a powerful framework and a toolset to build cloud-native solutions on top of Kubernetes.\n\n<!-- overview -->\n\n![Kyma and Knative](./1-kyma-knative.png)\n\nIf you look at the Kyma source code right now, you might wonder why you are not finding many references to Knative. The answer is quite simple. In the last month and a half, the entire Kyma team has been working on restructuring the repositories, making them ready to go open source and removing all internal references and tool dependencies. We've done all of that from a stable branch.  \n\nIn parallel to those major changes, we have a fork with Kyma and Knative integrated. It was used to build some first proof-of-concept cloud-native solutions using Knative and Kyma deployed together. The fork is also the basis for our stage demo shown during [the project launch](https://www.youtube.com/watch?v=NaaGPGKyXEc&amp;t=42m50s). This was our first approach at combining the projects. As both Kyma and Knative are really young and going through a number of changes, some of our design decisions have not been optimal in retrospect. \n \nDuring the coming weeks, our plan is to refactor the current Kyma codebase and modularize it. Several functional components can then be installed optionally, which will certainly improve the experience when developing locally using for example [Minikube](https://kubernetes.io/docs/tasks/tools/install-minikube/). \n \nAs shared technologies such as [Istio](https://istio.io/) are concerned, we're going to provide needed configuration options so that Istio deployed with Knative will also support all Kyma's requirements. \n \nAnd finally, we are going to extract some components. For example, we'll extract Kyma eventing and fully integrate it with Knative eventing. We'll evaluate the possibility of contributing the Kyma eventing based on [NATS](https://nats.io/) streaming as a Knative compatible eventing implementation to the Knative project. Users of Knative and Kyma will than have the additional option of deciding which eventing implementation to use (e.g. as an alternative to the Knative provided Kafka based implementation). \n \nStay tuned for more updates! Remember! Your ideas and proposals are highly welcome. Don't be shy!  ","excerpt":"When Kyma was introduced to the public a few weeks ago at Google Cloud Next ’18, we talked about the strong partnership that we have with the Knative community. Kyma and Knative provide two complementary sets of building blocks, which together offer a powerful framework and a toolset to build cloud-native solutions on top of Kubernetes.","fields":{"slug":"/blog/2018/8/10/kyma-knative-progress-report","assetsPath":"/assets/blog-posts/2018-08-10-kyma-knative-progress-report/","date":"August 10, 2018","postInfo":{"fileName":"kyma-knative-progress-report","year":2018,"month":8,"day":10}},"frontmatter":{"title":"Kyma and Knative Integration - Progress Update","author":{"name":"Ralf Hofmann, Kyma Cloud Software Architecture"},"tags":["kyma","cloud","native","GoogleNext2018","knative","istio","kubernetes"],"type":null,"releaseTag":null,"redirectFrom":["/blog/kyma-knative-progress-report"]}},"next":{"id":"0e0850e5-2d25-5079-b0e4-81be043d391d","rawMarkdownBody":"\n[Knative](https://github.com/Knative/) is an important new project in the cloud-native world that was announced as a \"Kubernetes-based platform to build, deploy, and manage modern serverless workloads.\" It is an opinionated approach covering the best practices around three areas of developing cloud-native applications: building containers (and functions), serving (and dynamically scaling) workloads, and eventing. Knative is an open-source set of components and is being actively developed by Google in close partnership with Pivotal, IBM, Red Hat, and SAP.\n\n<!-- overview -->\n\nSimilarly to Kubeless, Knative provides a set of building blocks to simplify the use of Kubernetes and Istio for managing and operating lambda functions. Kubeless takes some code, builds an image out of it, and starts it on Kubernetes. Knative is doing the same by following a more modular approach, allowing different components to be pluggable and adaptable to different deployment scenarios.\n\nBecause of this more flexible approach, we are planning to replace the current Kubeless-based Lambda Functions in Kyma with a Knative-based implementation. To provide the same commodity to which users are used with Kubeless, we have to do some extra work.\n\n## Architecture\n\nSo far, the architecture is not shaped out fully. Many details have to be sorted out and defined. The idea is to use Knative as it is and try to bridge the existing gaps using custom components, other available open-source projects (e.g. [Riff](https://projectriff.io/)), or pushing enhancements to the Knative community. In the end, Knative should provide the same functionality as Kubeless is doing today.\n\n![Serverless Kyma Architecture](./3-serverless-kyma-architecture.png)\n\nThe core of the architecture are the Knative `Serving` and `Build` components. As a Kyma-related component, a custom build template is required to provide the function interface available in Kubeless.\n\nBesides the build template, a custom Docker registry is required to store the build artifacts, and a storage solution to store the function code. This could be either a Git repository or a blob storage like Minio or S3. In the end, customers should be able to decide if they like to keep the function code in their own Git repository or if they prefer to store it in a storage solution provided by Kyma.\n\n## Implementation\n\nAs the implementation involves multiple components and will involve breaking changes, we will keep Kubeless till we are sure that the new version is working as expected. In the first step, Knative `Serving` and `Build` components will be integrated as optional Kyma modules. If this is working, other parts, such as the Docker registry, blob storage, and build template, will be enabled step by step. As the last step, a new (forked) lambda UI will be created and adjusted to the Knative needs. As soon as everything is working fine, Kubeless will fade out. Knative will be the new default component and Kubeless will be used as long as there are still any old deployments available. As soon as we are sure that nobody is using the old Kubeless-based implementation, we will remove it completely.\n","excerpt":"Knative is an important new project in the cloud-native world that was announced as a \"Kubernetes-based platform to build, deploy, and manage modern serverless workloads.\" It is an opinionated approach covering the best practices around three areas of developing cloud-native applications: building containers (and functions), serving (and dynamically scaling) workloads, and eventing. Knative is an open-source set of components and is being actively developed by Google in close partnership with Pivotal, IBM, Red Hat, and SAP.","fields":{"slug":"/blog/2018/9/27/replacing-kubeless-with-knative","assetsPath":"/assets/blog-posts/2018-09-27-replacing-kubeless-with-knative/","date":"September 27, 2018","postInfo":{"fileName":"replacing-kubeless-with-knative","year":2018,"month":9,"day":27}},"frontmatter":{"title":"Replacing Kubeless with Knative","author":{"name":"Johannes Engelke, Kyma Product Owner Serverless"},"tags":["kyma","cloud","Knative","application","extension","serverless","kubeless"],"type":null,"releaseTag":null,"redirectFrom":["/blog/replacing-kubeless-with-Knative"]}},"slidesBanner":{"bannerDuration":5000,"slides":[{"text":"Don't miss the session by Piotr Kopczynski at Helm Summit on September 11 at 15:47.","url":"https://helmsummit2019.sched.com/event/S8sS","startDate":"09/09/2019","endDate":"12/09/2019"}]},"locale":"en"}}}