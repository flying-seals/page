{"componentChunkName":"component---src-views-blog-single-index-tsx","path":"/blog/2018/10/18/accelerate-innovation-with-kyma","webpackCompilationHash":"aefb7e842b40c338951f","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/2018/10/18/accelerate-innovation-with-kyma","post":{"id":"d9e57d72-3d91-563e-8ca8-5cd953996913","rawMarkdownBody":"\nIs Tesla Model X still a car, or is it a smart device? This might sound like a silly question, as the Model X has all of the usual \"car\" traits: an engine, metal bodywork, rims, tires, etc. On paper, the Model X might look like yet another car, but its uniqueness, aside from the electric engine, of course, lies in the software innovation that Tesla brings to the market. The ability to update the onboard software over-the-air and bring new features and functionalities to a car is a key factor that attracts consumers to buy Teslas. This revolution shows that innovation, even in industries as old as car manufacturing, is an important and powerful tool that allows to penetrate the market faster. Many of the leading car manufacturers are still trying to catch up with Tesla's success. Businesses need to leverage new technologies, take on innovations and transform digitally to be competitive. Simply put - innovate or perish!\n\n<!-- overview -->\n\nOn our ongoing innovation journey, we have identified several challenges for companies that go through this process of digital transformation:\n\n- **Heterogeneous Product Portfolio:** Single-vendor solutions are a thing of the past. (ref: https://www.thoughtworks.com/de/insights/blog/implications-tech-stack-complexity-executives). Companies don't want to invest in a single vendor product stack. They need to have best of breed products. Heterogeneity is unavoidable, so software product companies need to be ready to embrace the diversity and be open to work hand in hand with the dreaded competition.\n\n- **Monolithic deployment:** Monolithic applications can be great, but as the size grows, so does the complexity. This slows down the time to market, adds complexity to testing and shipping, complicates adding new features or extensions, and makes scaling difficult. Currently many of the best available products are still monolithic.\n\n- **Cloud-native:** Companies are moving faster towards using cloud-native open source stacks for production (ref: https://www.cncf.io/blog/2018/08/29/cncf-survey-use-of-cloud-native-technologies-in-production-has-grown-over-200-percent/). The Cloud Native Computing Foundation (CNCF) describes \"cloud-native\" software as one that is container-packaged, dynamically orchestrated and managed, and microservice-architected. Building cloud-native solutions is not easy. It requires better inter-service communication, proper traceability of transactions across solutions, logging across several services and solutions, proper monitoring and operating hundreds of services.\n\n- **The \"need for speed\":** Some of our customers say that \"speed is the new ultimate currency\". It's challenging to develop at a faster pace while facing the challenges of heterogeneity, monolithic deployment and trying to teach every developer in the organization the ways of cloud-native development.\n\nKyma has worked hard to overcome these challenges and support businesses throughout their digital transformation journey. Kyma is an open-source project designed natively on Kubernetes. It allows you to extend and customize cloud-based and on-premise enterprise applications in a quick and modern way, using serverless computing and microservice architecture.\n\nThis way, Kyma enables businesses to:\n\n- **Be open and extendable:** Using any Open Service Broker API specification-compatible service is a \"plug and play\" affair which gives you access to a catalog of reusable, integrated services for developers, both in-house and 3rd party. This allows you to use business services and technical backing services from different vendors to extend your existing applications.\n\n- **Be seamlessly connected:** The simplified approach to secure connectivity between systems allows seamless API and event integration of the existing applications. You can manage and orchestrate existing applications to build common extension solution even in heterogeneous landscapes. A single connection gives you multiple possibilities.\n\n- **Use any programming language:** Develop microservices or serverless functions using any programming language and enjoy more hiring options as a result.\n\n- **Bring speed and agility:** Businesses don't have to wait for months or years to deliver specific scenarios or use cases. With Kyma the delivery times are faster (within days or weeks) and the entire process costs less.\n\n- **Accelerate innovation:** In many cases innovation starts as a test or a trail. In such cases, both speed and low cost are of great importance. Kyma enables businesses to start working on their solutions immediately instead of finding the right technology and integration options first and brings the startup culture to enterprises.\n\nKyma is available on [GitHub](https://github.com/kyma-project) and open for developers to contribute. It allows businesses to build and advance products and services they offer to make them even better on the marketplace. This empowers companies to stand out, to increase revenue, and to be more like Tesla.\n","excerpt":"Is Tesla Model X still a car, or is it a smart device? This might sound like a silly question, as the Model X has all of the usual \"car\" traits: an engine, metal bodywork, rims, tires, etc. On paper, the Model X might look like yet another car, but its uniqueness, aside from the electric engine, of course, lies in the software innovation that Tesla brings to the market. The ability to update the onboard software over-the-air and bring new features and functionalities to a car is a key factor that attracts consumers to buy Teslas. This revolution shows that innovation, even in industries as old as car manufacturing, is an important and powerful tool that allows to penetrate the market faster. Many of the leading car manufacturers are still trying to catch up with Tesla's success. Businesses need to leverage new technologies, take on innovations and transform digitally to be competitive. Simply put - innovate or perish!","fields":{"slug":"/blog/2018/10/18/accelerate-innovation-with-kyma","assetsPath":"/assets/blog-posts/2018-10-18-accelerate-innovation-with-kyma/","date":"October 18, 2018","postInfo":{"fileName":"accelerate-innovation-with-kyma","year":2018,"month":10,"day":18}},"frontmatter":{"title":"Accelerate innovation with Kyma","author":{"name":"Gopi Kannappan, Head of Product Management at Kyma"},"tags":["kyma","innovation","digitaltransformation","agility","cloudnative","opensource"],"type":null,"releaseTag":null,"redirectFrom":["/blog/accelerate-innovation-with-kyma"]}},"assetsPath":"/assets/blog-posts/2018-10-18-accelerate-innovation-with-kyma/","previous":{"id":"0e75b816-dcf1-5b0a-8d71-6adc9243d1f2","rawMarkdownBody":"\nIt has been a while since we introduced Kyma to the open-source community. Many things have changed in the project since its [announcement](/blog/introducing-project-kyma) in July.\nNow that we have our first official release, it is time to sum up what we have recently worked on.\n\n<!-- overview -->\n\n## Security\n\nIn the area of security, we focused on our [API Gateway](/docs/0.4/components/api-gateway) that you can use to expose your API easily and in a secure way. We improved the following things:\n* When you create the `Api` kind, `hostname` is validated to make sure you provided the correct domain and that there are no duplicates.\n* The [architecture](/docs/0.4/components/api-gateway#architecture-architecture) of the API Gateway component has changed. The services are now exposed by the Istio Gateway and the Istio Virtual Service, instead of the Istio Ingress.\n* You can create several APIs for a single service in the Console UI by creating the API for a specific service in the **Services** view, or several different APIs from the **APIs** view.\n![](./multi-api.png)\n\n\n## Service Catalog\n\nThe Service Catalog, that is one of our key features, has undergone a lot of improvements over the last months, mainly thanks to your valuable feedback. To be more specific, the Console UI part of the Catalog was improved through the following changes:\n- The multi-step service provisioning wizard was replaced with a one-step wizard.\n- You can preview the Instance's parameters by clicking the Instance's Plan name both on the list of all Service Instances and in the given Service Instance's details.\n![](./instance_params.png)\n- The Service Catalog's left navigation was removed and filtering is now available next to the search box. In its current form, it aims to support new filter options that will be introduced in the future. It also scales much better now when there are many values provided in the filters.\n![](./filter.png)\n\nThe Console UI is not everything, however. These are further changes:\n- The Catalog was upgraded to v0.1.34 that supports the Environment-wide resources (ServiceBroker, ServiceClass, ServicePlan). The related Console views do not support it yet.\n- A new dashboard was provided in Grafana to improve Service Catalog-related operations.\n![](./sc_grafana_dashboard.png)\n\n## Application Connector\n\nThe Application Connector, that allows you to connect external systems with Kyma, underwent these major improvements:\n- Management of the Remote Environments (RE) is no longer done through the Helm chart. Instead, we have a controller that reacts to changes in the RE and sets up the whole Environment.\n- The [RemoteEnvironments CRD](/docs/0.4/components/application-connector#custom-resource-remoteenvironment) was enhanced with an extra label field. Now, you can mark the purpose of the Remote Environment in a flexible way.\n- The OAuth token caching functionality was added to the Application Connector.\n\n## Logging\n\nKyma has a new component to enhance its logging capabilities. This component is based on [Logspout and OK Log](/docs/0.4/components/logging).\n\n## Monitoring\n\nThrough the proper Grafana configuration, all dashboards created by you in the runtime are persistent, and Pods restarts do not remove them.\n\n## Event Bus\n\nOur Kyma would not be so great without the support for the asynchronous communication between services. This is what we improved in that scope:\n- We enabled an Event lifecycle for storing Events in a cluster. By default, it is set to 24h, but you can configure the lifecycle in the NATS Streaming's StatefulSet by changing the `max_age` value.\n- We added the documentation for the service programming model for the Event subscribers. Read more [here](/docs/0.4/components/event-bus#details-service-programming-model).\n\n## Tracing\n\nAs you know, Kyma uses Jaeger as the tracing back-end. To improve its usage, we:\n- Secured the Jaeger UI so that you could access it easily without port-forwarding. Read more about [Jaeger](/docs/0.4/components/tracing#overview-overview).\n- Created an example on how to enable tracing for an application. Read more [here](https://github.com/kyma-project/examples/tree/master/tracing).\n\n## Service Mesh\n\nAt the moment, Kyma is using Istio [1.0.1](https://istio.io/about/notes/1.0.1/).\n\n## Installation\n\nThe following improvements were done in the installation area:\n- The [Kyma installation on a Google Kubernetes Engine cluster](https://github.com/kyma-project/kyma/blob/0.5-rc/docs/kyma/docs/032-inst-gke-installation.md) is now possible mainly due to the implementation of the [API Server Proxy](https://github.com/kyma-project/kyma/tree/0.4.1/components/apiserver-proxy) component.\n- You can [override values in Helm charts](https://github.com/kyma-project/kyma/blob/0.5-rc/docs/kyma/docs/044-gs-installation-overrides.md) using config maps annotated with the `installer: overrides` label.\n- The extended [`Installation ` custom resource](/docs/0.4/root/kyma#custom-resource-installation) was enabled to allow you to provide a declarative list of modules that will be installed during the Kyma provisioning process.\n\n## Documentation\n\nA few weeks after the Kyma announcement, we published the official documentation on our `https://kyma-project.io/docs/` website. It is worth remembering, however, that this is not the only place where you can read the docs. Since the very beginning, the Kyma documentation has been an integral part of the Console UI, so whenever you provision a Kyma cluster, docs for a given Kyma version are always there for you. In the last few months we have improved the following features in that area:\n- The [Kyma overview](/docs/0.4/root/kyma#overview-overview) documentation and many other sections, like consistency of the [Custom Resource reference](/docs/0.4/components/service-catalog#custom-resource-custom-resource) documents.\n- The general feel and look of the documentation, its navigation, consistency, and the readability of the content.\n![](./docs-ui.png)","excerpt":"It has been a while since we introduced Kyma to the open-source community. Many things have changed in the project since its announcement in July.\nNow that we have our first official release, it is time to sum up what we have recently worked on.","fields":{"slug":"/blog/2018/10/10/release-notes-041","assetsPath":"/assets/blog-posts/2018-10-10-release-notes-0.4.1/","date":"October 10, 2018","postInfo":{"fileName":"release-notes-041","year":2018,"month":10,"day":10}},"frontmatter":{"title":"Release 0.4.1 is out!","author":{"name":"Lukasz Gornicki, Product Owner @Kyma"},"tags":["release-notes"],"type":"release","releaseTag":"0.4.1","redirectFrom":["/blog/release-notes-041"]}},"next":{"id":"e5672d65-a7f0-51af-8171-7173120ec761","rawMarkdownBody":"\nWe constantly work improving Kyma and modularizing it further. Shortly after our last release, we now introduce the next update including many changes.\n\n<!-- overview -->\n\n## Application Connector\n\nWith the overall strategy to modularize Kyma as a whole, the Application Connector went through this change as well:\n\n- The Application Connector has been modularized. All components have been moved to a separate Helm chart and are no longer a part of the Core. This also includes changes in the naming of the elements. The Gateway service has been renamed to the Proxy service.\n- The Application Connector tests were extended with an additional flag for skipping SSL verification. It allows testing functionality against the Kyma cluster with a self-signed certificate.\n- The Connector service now returns a client certificate as a full chain with a server-side certificate. The verification of a client certificate is now possible.\n\n## Serverless\n\nMaking use of serverless concepts and technologies is what makes Kyma so great. Hence, we made a number of improvements in this area:\n\n- The Lambda UI was extended with the option to set Environment Variable Prefixes for Service Bindings. This allows binding multiple services with the same set of environment variables.\n- The Lambda UI was extended with the option to set JWK Authentication Properties. This allows defining specific Token Issuers.\n\n![](./jwks_authentication_1.png)\n\nAuthentication is enabled by default, and you can change JWKs URI using the **Load Present** option.\n\n![](./jwks_authentication2_2.png)\n\n- The Lambda UI was extended with an alert informing you if you are about to leave the Lambda UI with unsaved changes.\n\n![](./unsaved_changes_3.png)\n\n## Service Catalog\n\nWe did a lot of great enhancements to the Kyma Service Catalog:\n\n- Support for &quot;namespaced&quot; service catalogs. This means a possibility to register brokers for specific Namespaces only. The Catalog has an additional Brokers view in the Environment context. The view lists Service Brokers registered only for a given Namespace.\n  - [Here](/docs/0.5/components/service-catalog#getting-started-getting-started) you can view a new getting started guide about brokers registration.\n  - [Here](/docs/0.5/components/service-catalog#architecture-architecture) you can find an architecture diagram for the Namespace catalog.\n  \n  - The instance list and details views now work on web-sockets. This significantly improves the user experience because all changes to the instance, and most important its status, are updated in real-time in the view without the need for a page refresh. If you are interested in how we managed to accomplish that on a GraphQL layer with Istio and token verification, feel free to contact us on [Slack](http://slack.kyma-project.io).\n\n- A completely new binding flow has been implemented in the instance view. Based on your feedback, we made sure it is far less complex than before:\n  - Names for resources are autogenerated.\n  - When binding to the application, you do not have to decide if you want to bind to Deployment first or maybe to the Function, as all applications are listed in one component for your convenience.\n  \n  ![](./bind_application_1.png)\n  \n  - You can set a proxy for instance environment variables that are injected to your application.\n  \n  ![](./bind_application_3.png)\n  \n  - The status of credentials (ServiceBinding) and application binding (ServiceBindingUsage) is now visible. Even more, if you are viewing the bindings and in the meantime the credentials creation fails, the UI indicates the failure and adds a red marker on the tab. This way, you know something wrong happened and you need to check the tab.\n  \n  ![](./service_instances.png)\n  \n  ![](./bound_applications.png)\n  \n  - The UI supports the ServiceBinding creation if the owner of the service class specified a custom schema for binding creation.\n  - The cleanup of resources got improved. When you decide to delete some Credentials, the related application bindings are also deleted.\n- [Helm Broker](/docs/0.5/components/service-brokers#configuration-configure-helm-broker) supports many bundle repositories.\n- The new [**bundles**](https://github.com/kyma-project/bundles) repository enables Kyma to install addons such as brokers, showcases and local services.\n\n  - It contains bundles which the Helm Broker uses. It allows you to choose a set of bundles and configure the Helm Broker. You can also define your own bundles.\n  - Have a look at the [getting started document](https://github.com/kyma-project/bundles/blob/master/docs/getting-started.md) which explains how to create your own bundles repository.\n\n## Eventing\n\nAs eventing is one of the core principles Kyma is built on, we enhanced the functionality further:\n\n- It is now possible for developers to change their subscriptions and fix any typos or wrong configurations. It allows avoiding a situation where, for example, specifying a wrong URL causes wrong Event type to be updated. Click [here](/docs/0.5/components/event-bus#details-subscription-updates) to see how this can be done.\n\n- A bug, which caused that it was impossible to create two subscriptions with same name in different Namespaces, has been fixed.\n- Kyma now enables a developer to understand better how to leverage tracing for handling problems in the Event flow.\n\n### Known issues\n\nThere is a known intermittent Event trigger issue that causes the Events to not be delivered to lambdas or microservices.\n\nWe are aware of this issue and we will provide a fix for it as part of the [issue](https://github.com/kyma-project/kyma/issues/1687).\n\n#### Technical details\n\nThe issue lies in the subscription validator application. The application sometimes does not react when Kubernetes notifies it about creating new EventActivation instances.\n\n#### Workaround\n\nAs a temporary fix for this issue, delete the sub-validator Pod by running the following command:\n\n```bash\n\n$ kubectl delete pod $(kubectl get pods -l app=sub-validator -n kyma-system --output=jsonpath={.items..metadata.name}) -n kyma-systemC\n```\n\nAfter deleting the sub-validator Pod, Kubernetes recreates it automatically, and the issue should be fixed.\n\n## Security\n\nWe constantly work on improving the security of Kyma:\n\n- Documentation is now available on how to [update TLS certificates](/docs/0.5/components/security#details-update-tls-certificate).\n- The static user password for administrators is generated during installation and stored in the secret admin-user in the `kyma-system` Namespace. You can add further static users by providing your own Kubernetes secrets. Use this [link](/docs/0.5/components/security#details-manage-static-users-in-dex) to learn more.\n\n## Service Mesh\n\nIstio is now installed from official Istio charts. Istio customization was externalized into a separate component: [istio-patch](/docs/0.5/components/service-mesh#details-istio-patch). As a result, Kyma can be installed on top of an existing [Istio installation](/docs/0.5/root/kyma#installation-installation-with-custom-istio-deployment) (in the supported version).\n\n## Installation\n\nThe installation documentation was reorganized and grouped under [Installation](/docs/0.5/root/kyma#installation-installation).\n\n## Monitoring\n\nTo keep track of your Kyma systems, we enhanced the following:\n\n- An Alert is defined if an Pod is not restarting in one of the system Namespaces. This enables basic monitoring of the `kyma-system`.\n\n![](./alerts_9.png) \n\n- Promehteus alerting webhooks are exposed in the configuration. This enables the integration of Prometheus alerting in custom dashboards.\n- HTTP configuration now allows to define different ways of authentication in the face of the webhook. Basic auth, Tls and Baere token are some of them.\n\n### Known Issues\n\nThe Istio-related dashboards are not showing any data. For details, see [issue](https://github.com/kyma-project/kyma/issues/1724).\n\n#### Workaround \n\nNone\n\n## Logging\n\nKyma was extended with Persistence Layer for logging based on OK Log.\n\n## Tracing\n\nThe Tracing UI is now linked from within the Kyma Console UI to make it easier to access the tracing information. Furthermore, it is now possible to compare two traces to track the process. You can get an answer to the question: &quot;Why did something unexpected happened?&quot; You can find more details [here](/docs/0.5/components/tracing#details-trace-comparison).\n\n## Console\n\n- You can extend the Console to add custom micro front-ends either for a single environment or for cluster-wide administration. More details can be found [here](/docs/0.5/components/console#details-ui-extensibility).\n\n![](./console_1.png) \n\n- It is now possible to view and edit **ConfigMaps**:\n\n![](./console_2.png) \n","excerpt":"We constantly work improving Kyma and modularizing it further. Shortly after our last release, we now introduce the next update including many changes.","fields":{"slug":"/blog/2018/11/20/release-notes-05","assetsPath":"/assets/blog-posts/2018-11-20-release-notes-0.5/","date":"November 20, 2018","postInfo":{"fileName":"release-notes-05","year":2018,"month":11,"day":20}},"frontmatter":{"title":"Release 0.5 is available!","author":{"name":"Marco Dorn, Product Manager @Kyma"},"tags":["release-notes"],"type":"release","releaseTag":"0.5.0","redirectFrom":["/blog/release-notes-05"]}},"slidesBanner":{"bannerDuration":5000,"slides":[{"text":"Don't miss the session by Piotr Kopczynski at Helm Summit on September 11 at 15:47.","url":"https://helmsummit2019.sched.com/event/S8sS","startDate":"09/09/2019","endDate":"12/09/2019"}]},"locale":"en"}}}