{"componentChunkName":"component---src-views-blog-root-index-tsx","path":"/blog/","webpackCompilationHash":"aefb7e842b40c338951f","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"posts":[{"id":"9eedcaaa-e910-54a9-9aa7-028dd2be01d2","rawMarkdownBody":"\nOur next, sunny stop - Lima may falsely suggest that the Kyma crew eased off a bit in the last couple of weeks and got carried away by the relaxing summer atmosphere. Nothing further from the truth. Kyma 1.5 Lima brings quite a few interesting changes. Above all, we ensured that all Kyma components are compatible with Kubernetes 1.15. We also provided Namespace-level addons configurations and added the experimental function controller module that is based on Knative. Read the full release notes for the complete list of improvements offered by the 1.5 release.\n\n<!-- overview -->\n\nSee the overview of all changes in this release:\n- [API Gateway](#api-gateway) - Kubernetes-native client registration with the Hydra Maester controller, new API Gateway controller in the Incubator\n- [Application Connector](#application-connector) - Fix for invalid arguments order in the Connector Service header parser\n- [Console](#console) - Namespace-level addons configurations\n- [Documentation](#documentation) - Improved monitoring tutorials, Telepresence guide, troubleshooting guides for the Application Connector\n- [Service Management](#service-management) - Separate repository for the Helm Broker, authentication methods support for addons configurations\n- [Serverless](#serverless) - New experimental function controller module based on Knative\n- [Service Mesh](#service-mesh) - Istio updated to 1.2.4\n\nIn the 1.5 release, we made sure that Kyma is compatible with Kubernetes 1.15. Nevertheless, it is not supported by automated testing pipelines. The reason is that our testing pipelines currently test Kyma on GKE and AKS, and these managed Kubernetes offerings do not support Kubernetes 1.14 and 1.15. That is why, we keep our automated testing consistent with Kubernetes 1.13 for now, including testing on Minikube. Still, we performed manual tests that confirmed Kyma also works on Kubernetes 1.15.\n\n> **CAUTION:** When upgrading from 1.4 to 1.5, you will experience temporary unavailability of the Connector Service. It results from changing the API group of the Connector Service Deployment and adding to it the **selector** field that was not required in previous Kubernetes versions.\n\n---\n\n## API Gateway\n\n### Kubernetes-native client registration with the Hydra Maester controller\n\nOur collaboration with ORY that started in the previous release continues with new contribution and functionality. This time around, we created the Hydra Maester controller which makes registering OAuth2 clients a fully Kubernetes-native process. The controller listens for instances of the `oauth2clients.hydra.ory.sh` custom resource (CR) and registers clients through the Hydra API using the data contained in the CR. Credentials of the registered client are then saved in a Kubernetes Secret. Follow [this](https://github.com/ory/hydra-maester) link to visit the ORY Hydra Maester repository and read [this](https://kyma-project.io/docs/1.5/components/security/#details-o-auth2-and-open-id-connect-server) document to learn more about the ORY stack implementation in Kyma.\n\n### New API Gateway controller in the Incubator\n\nAnother fruit of the Kyma-ORY collaboration, the API Gateway controller (name subject to change!), is available in the Kyma Incubator. This controller listens for instances of the `gate.gateway.kyma-project.io` CR, manages Istio authentication policies and Oathkeeper rules, and allows you to expose services secured with JWT or OAuth access tokens. Even though this controller is still in the early stages of development and cannot replace the existing Kyma API Gateway, you can install it with your Kyma deployment by uncommenting the appropriate entry on the component list before installing Kyma 1.5. Go to [this](https://github.com/kyma-incubator/api-gateway) Incubator repository to learn more about the controller and read [this](https://kyma-project.io/docs/1.5/root/kyma/#configuration-custom-component-installation) document to learn more about installing selected components.\n\n## Application Connector\n\n### Fix for invalid arguments order in the Connector Service header parser\n\nPrevious versions of the header parser incorrectly compared the certificate subject's `locality` to `province` defined in the component's configuration, and certificate subject's `province` to the `locality` environment variable from the configuration. This could cause issues. Thanks to the fix available with Kyma 1.5, the header parser now properly compares the subject's `locality` and `province` to their corresponding environment variables.\n\n> **NOTE:** Due to the nature of this fix, you may have to generate new certificates for the connected Applications as a part of the upgrade process.\n\n## Console\n\n### Addons configurations on the Namespace level  \n\nIn previous Kyma versions, it was only possible to configure cluster-wide addons. It meant that if the cluster administrator enabled a new addon, it automatically became available for everyone with access to this Kyma runtime. Starting with the 1.5 version, you can apply addons configurations in the scope of a single Namespace. This gives cluster administrators more control over integration options and resource consumption.\n\n![Addons configuration](./addons-configuration.png)\n\n## Documentation\n\n### Improved monitoring tutorials\n\nBased on the existing [`monitoring-custom-metrics`](https://github.com/kyma-project/examples/tree/master/monitoring-custom-metrics) Kyma example and its `cpu_temperature_celsius` custom metric, we have created unified monitoring tutorials. Thanks to them you can see how Kyma applies monitoring tools to manage application metrics. More specifically, these tutorials show how you can observe the custom metric's changing values, create a Grafana dashboard for the metric, and set up a corresponding alerting rule for it.\n\nFollow these links to see the improved monitoring tutorials:\n- [Observe application metrics](https://kyma-project.io/docs/1.5/components/monitoring/#tutorials-observe-application-metrics)\n- [Create a Grafana dashboard](https://kyma-project.io/docs/1.5/components/monitoring/#tutorials-create-a-grafana-dashboard)\n- [Define alerting rules](https://kyma-project.io/docs/1.5/components/monitoring/#tutorials-define-alerting-rules)\n\n### Telepresence guide\n\nWe know how difficult of a task developing and debugging locally can be. That is why we created a general guide for local development with Telepresence to make your work faster and your workflow smoother. Check this [link](https://kyma-project.io/community/guidelines/technicalities#using-telepresence-for-local-kyma-development-using-telepresence-for-local-kyma-development) for details.\n\n### Troubleshooting guides for the Application Connector\n\nWe provided a set of [troubleshooting guides](https://kyma-project.io/docs/1.5/components/application-connector/#troubleshooting-troubleshooting) that will help you to resolve the most common issues you may encounter when interacting with such components as the Application Gateway, Application Registry, and Connector Service.\n\n## Service Management\n\n### Separate repository for the Helm Broker\n\nThe Helm Broker now has its own [separate repository](https://github.com/kyma-project/helm-broker) in the `kyma-project` organization. We have not changed the location of the related documentation so you can still read about the Helm Broker [here](https://kyma-project.io/docs/components/helm-broker/).\n\n### Support authentication methods for addons configurations\n\nStarting from the 1.5 release, we support fetching addons from repositories that require authentication. You can now pass credentials in a secure way using templates in your repository's URL. For more information, read [this](https://kyma-project.io/docs/1.5/components/helm-broker/#details-create-addons-repository-authorization) document.  \n\n## Serverless\n\n### Experimental function controller module\n\nAs you know, Kyma runs serverless functions using Kubeless. We now added the Knative function controller to Kyma as an experimental feature to provide a Knative-based alternative for serverless functions. Read more about the controller [here](https://github.com/kyma-project/kyma/tree/master/components/function-controller).\n\n## Service Mesh\n\n### Istio updated to 1.2.4\n\nThe new release comes with Istio updated to 1.2.4 which fixes several security vulnerabilities identified by Istio. For more details, read [this](https://istio.io/about/notes/1.2.4/) document.\n","excerpt":"Our next, sunny stop - Lima may falsely suggest that the Kyma crew eased off a bit in the last couple of weeks and got carried away by the relaxing summer atmosphere. Nothing further from the truth. Kyma 1.5 Lima brings quite a few interesting changes. Above all, we ensured that all Kyma components are compatible with Kubernetes 1.15. We also provided Namespace-level addons configurations and added the experimental function controller module that is based on Knative. Read the full release notes for the complete list of improvements offered by the 1.5 release.","fields":{"slug":"/blog/2019/9/9/release-notes-15","assetsPath":"/assets/blog-posts/2019-09-09-release-notes-1.5/","date":"September 09, 2019","postInfo":{"fileName":"release-notes-15","year":2019,"month":9,"day":9}},"frontmatter":{"title":"Kyma 1.5 Lima","author":{"name":"Karolina Zydek, Technical Writer @Kyma"},"tags":["release-notes"],"type":"release","releaseTag":"1.5.0","redirectFrom":["/blog/release-notes-15"]}},{"id":"2651292f-5fc3-552d-97a6-0745e2405620","rawMarkdownBody":"\nStraight from Indonesian Jakarta, we sail to Japan. Let's stop in one of its beautiful temples and ponder over what the 1.4 Kyoto Release has to offer. Being hard-working as the Japanese, Kyma busy bees introduced many improvements in their components, including the Application Connector, Console, Kiali, and Headless CMS. Read on to find out what has changed in Kyma since 1.3.\n\n<!-- overview -->\n\nThe highlights of Kyma 1.4 Kyoto include:\n\n- [API Gateway with an OAuth2 server](#api-gateway) - We integrated Kyma with an OAuth2 authorization server solution from ORY.\n- [Application Connector](#application-connector) - We upgraded Istio to version 1.2.2.\n- [Console UI without system Namespaces](#system-namespaces-hidden-in-the-console-ui) - We hid all system Namespaces built in a Kyma cluster so that you could find your Namespaces quicker.\n- [Documentation component](#documentation-component) - We consolidated different documentation views into one Documentation component.\n- [Conversion and validation in the Headless CMS](#conversion-and-validation-service-for-the-asyncapi-2-0-specs-in-the-headless-cms) - We introduced the conversion and validation service for AsyncAPI 2.0 specifications.\n- [Kiali](#kiali) - We upgraded Kiali to the latest stable version and enabled Single Sign-On.\n- [Bundles renamed to addons](#bundles-renamed-to-addons) - We renamed bundles to addons.\n\nSee the overview of all changes in this release:\n\n- [Backup](#backup) - Simplified Velero installation, a new implementation of the backup and restore functionalities, backup available on Azure, and backup tests fixed\n- [Core and Supporting](#parameters-object-in-the-headless-cms-supported-in-the-console-ui) - Relative links disabled in Markdown specs\n- [JSON schema](#json-schema) - Guidelines for creating JSON schemas for Kyma components\n- [Knative](#knative) - Knative Eventing and Serving update\n- [Kyma CLI](#kyma-cli) - Kyma CLI enriched with the `test` command and inline documentation\n- [Service Management](#service-management) - New GCP Service Broker addon and Helm Broker support for addons exposed by Git\n\nRead about known issues for [Velero](#known-issues).\n\n> **CAUTION:** Before you upgrade to Kyma 1.4, read the [Migration Guide](https://github.com/kyma-project/kyma/blob/release-1.4/docs/migration-guides/1.3-1.4.md) which describes necessary manual actions required by the Google Cloud Platform (GCP) Service Broker addon.\n\n---\n\n## API Gateway\n\nMaking friends in the open-source world is natural. Collaboration with our friend, ORY, in the 1.4 release bore fruit, and Kyma got its very own OAuth2 server. Our new component consists of three elements from ORY: Hydra OAuth2 server, Oathkeeper proxy, and Oathkeeper Maester controller. By default, the solution is now installed with every Kyma deployment. We worked closely with ORY developers to make their solution Kubernetes-native. We achieved that by creating the Maester controller and contributing it to the ORY stack. This controller allows for convenient management of Access Rules through custom resources. Check out and test the Kyma-ORY integration and follow its development closely as we're still in the development phase. Read [this](https://kyma-project.io/blog/2019/7/31/kyma-collaboration-with-ory/) blog post to see where we're heading. Also, read the [**Security**](https://kyma-project.io/docs/1.4/components/security/#details-oauth2-and-openid-connect-server) documentation to get more details on the current state of the integration.\n\n## Application Connector\n\n### Application Registry updated to Istio 1.2.2  \n\nAs you already know, the Application Connector uses Istio to ensure a high level of security. From now on, the Application Registry benefits from features introduced in Istio 1.2 to control access to the Application Gateway.\n\n## Backup\n\n### Velero upgraded to 1.0.0\n\nThe backup component, Velero, is now upgraded to its latest stable version 1.0.0.\n\n### Installation and setup\n\nWe improved and simplified the installation and setup process for Velero. Read the [documentation](https://kyma-project.io/docs/1.4/components/backup/#installation-install-velero) and see how easy it is now to set up Velero either before or after installing Kyma.\n\n### Creating backups\n\nWe implemented the backup functionality from scratch to guarantee that all resources in a cluster are properly backed-up. The documentation was updated to reflect the changes we made.\n\n### Restoring from a backup\n\nAlso, we have a brand-new restore functionality. It guarantees that a backed-up cluster can be fully recovered. The documentation was updated to reflect the changes we made.\n\n### Backup tests\n\nAll backup and restore integration tests are fixed and pass.\n\n### Backups on Azure\n\nThe backup functionality was successfully introduced on Azure (AKS). Follow the steps from the [installation](https://kyma-project.io/docs/1.4/components/backup/#installation-install-velero) guide to set up Velero on Azure.\n\n### Plugins\n\nWe deleted all Velero plugins as they are not needed anymore.\n\n### Known Issues\n\nVelero returns an error during restoring CRDs. The temporary workaround is to divide the restore process into 2 steps:\n\n1. Restore only CRDs.\n2. Restore the remaining part of the cluster.\n\nIt may also happen that the restore process fails to complete. It is caused by a bug in Velero. In such a case, retry to restore your cluster.\n\n## Console\n\n### System Namespaces hidden in the Console UI\n\nSo far, once you entered a Kubernetes cluster you could probably see quite a bunch of Namespaces. These were both built-in Namespaces and those that came with modules you installed. They were not the ones a Kyma user wanted to work with. To have a better user experience, system Namespaces are now hidden by default. As a result, you can easily find the Namespaces that you work with. To see the system Namespaces, go to the **General Settings** view and toggle the **Show System Namespaces** option under **Namespace settings**.\n\n![Namespace settings](./namespace-settings.png)\n\n## Core and Supporting\n\n### Documentation component\n\nThe Kyma project puts a lot of effort into documentation and processes around it, not only with respect to [kyma-project.io](https://kyma-project.io/docs). As you know, you can also access Kyma documentation from the Console UI. In Kyma, we offer features that you can use to document your own services - that does not only relate to static docs provided with Markdown specs but also other formats, such as OpenAPI, AsyncAPI, and OData.\n\nIt basically means that at the moment we have 4 different views that render documentation, and you can expect more of them to come in the future releases. We decided that it was about time to consolidate our experience in this area into one component.\n\n- Documentation component project\n\nAs mentioned in the [previous release notes](https://kyma-project.io/blog/2019/7/12/release-notes-13/#documentation-component), we have one single project in which we maintain the Documentation component and just reuse it in different applications. We already introduced it in the Console UI Documentation view in the last release. In the 1.4 release, it was integrated into the Console UI Catalog and Instances views. In a few days, you will see this component being used on [kyma-project.io](https://kyma-project.io/).\n\n- Improved look and feel\n\nWhile working on the Documentation component, we took a closer look at the styling of different specs and decided to improve and unify them. The style is now unified in Markdown, OpenAPI, and OData. In the next release, we would like to do the same with AsyncAPI.  \n\nThis is the new Fiori 3-like design for the OpenAPI spec:\n\n![OpenAPI spec](./openAPI-spec.png)\n\nThis is the new Fiori 3-like design for the Markdown spec with the new and much better approach to navigation with the right-hand side navigation:\n\n![Markdown spec](./markdown-spec.png)\n\nThis is the new Fiori 3-like design for the OData spec:\n\n![OData spec](./odata-spec.png)\n\n### Conversion and validation service for the AsyncAPI 2.0 specs in the Headless CMS\n\nEver since we introduced Kyma and its Application Connector component, we have been getting reports that you could easily register an application with the AsyncAPI spec but the spec did not render successfully in the UI. The reason was each and every time the same: the spec was not valid. It wasn't rendered because the validation only worked in the UI.\n\nWe decided to finally solve the problem and introduce a service that validates the AsyncAPI spec before it is accepted by the Headless CMS. Because integrating the service with Kyma will take some time, we decided to introduce the validation already for the latest version of the AsyncAPI specification. As a result, the service we introduced not only handles validation of the spec but also automatically converts the spec into the latest AsyncAPI version. For example, if you register the spec in version 1.0, 1.1, or 1.2, the service converts it to version 2.0.0-rc1.\n\nThis functionality is disabled by default, and the service is not provisioned or configured because we do not have the UI support for AsyncAPI 2.0 yet. To enable the validation service and play with it, override the following value:\n\n```yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cms-asyncapi-overrides\n  namespace: kyma-installer\n  labels:\n    installer: overrides\n    component: cms\n    kyma-project.io/installation: \"\"\ndata:\n  global.cmsAsyncAPIService.enabled: \"true\"\n```\n\nAfter you override the value, you can create a DocsTopic resource using [this](https://kyma-project.io/docs/1.4/components/headless-cms/#custom-resource-docs-topic-sample-custom-resource) example. The example contains a reference to the official Slack AsyncAPI spec provided in version 1.2. After you go through the steps for the happy path, create a new DocsTopic using an invalid spec. You can use the [invalid AsyncAPI spec](https://raw.githubusercontent.com/kyma-project/kyma/release-1.4/components/cms-services/pkg/endpoint/asyncapi/v1/testdata/invalid.json) we used for testing.\n\n### Parameters object in the Headless CMS supported in the Console UI\n\nIn the previous release, we introduced a new field in the DocsTopic CR that allows you to provide custom parameters that can modify the rendering options when supported by the presentation layer. After getting your feedback, we renamed the field from **metadata** to **parameters** and enabled its support in the Console UI.\n\nFrom now on, once you provide the **spec.sources.parameters.disableRelativeLinks** parameter for a Markdown source, the UI disables relative links and informs about it in a tooltip. This applies to a use case in which you render Markdown documentation that you do not own and that has some broken relative links. This is the only use case we support so far, but if you see other applications, please let us know. You can contact us on Slack or submit a GitHub issue.\n\n## JSON Schema\n\n### Definition and guidelines\n\nWe encourage you to read brand-new [documentation](https://github.com/kyma-project/community/blob/master/guidelines/technical-guidelines/05-helm.md#defining-metadata-schema-for-kyma-charts) defining standards for creating JSON schemas for Kyma components.\n\n### Governance\n\nWe also added a governance CI Job that checks if all components have a JSON schema file with the mandatory properties.\n\n## Kiali\n\n### Installation\n\nBy default, Kiali is now enabled together with monitoring.\n\n### Upgrade\n\nKiali was upgraded to version 1.1.0.\n\n### Console integration\n\nFrom now on, you can access Kiali from the Kyma Console. If you click the **Service Mesh** section on the left navigation menu, the link redirects you to the Kiali page.\n\n![Kiali in the Console UI](./kiali-console-ui.png)\n\n### Authentication\n\nWe added an integrated authentication strategy to the Kiali dashboard to enable Single-Sign-On based on the Dex configuration.\n\n### Documentation\n\n[Kiali](https://kyma-project.io/docs/1.4/components/kiali) is now documented in the Kyma Docs.\n\n## Knative\n\n### Knative Eventing updated to 0.6\n\nKnative Eventing chart, which is the foundational layer for Kyma Event Bus, was updated to version 0.6. Read more about the update [here](https://github.com/knative/eventing/releases/tag/v0.6.0).\n\n### Knative Serving updated to 0.6.1\n\nKnative Serving chart, which by default is installed with Kyma, was also updated but to version 0.6.1. Learn more about the update details [here](https://github.com/knative/serving/releases/tag/v0.6.1).  \n\n## Kyma CLI\n\n### Test command\n\nFrom this release, the Octopus test suites can be managed fully using the Kyma CLI. You can easily run, list, check, delete, and watch both test suites and test definitions on your cluster.\n\n### Inline documentation\n\nWe improved the documentation output of the Kyma CLI. The usage, help and flag documentation, and error messages are more user-friendly now.\n\n## Service Management\n\n### Bundles renamed to addons\n\nStarting from the 1.4 release, all bundles are renamed to addons to better reflect the functionality they provide. This applies to all occurrences, including the names of repositories. See [this](https://github.com/kyma-project/kyma/issues/4783) issue for more information.\n\n### Preview of the new GCP Service Broker addon\n\nAs the Google Cloud Platform (GCP) Service Broker is being deprecated by Google, we have removed this addon from our offering. Instead, we added the preview mode of a new GCP Service Broker which you can already integrate with Kyma. See [this](https://github.com/kyma-project/addons/issues/94) issue for more information. To learn how to switch to the new addon when upgrading Kyma, read the [migration guide](https://github.com/kyma-project/kyma/blob/master/docs/migration-guides/1.3-1.4.md).\n\n### Helm Broker supports addons exposed by Git\n\nStarting from this release, you can expose your addons not only through HTTPS serves but also using Git. To do so, simply place your addons directly in a Git directory and follow the necessary addon repository structure. Read [this](https://kyma-project.io/docs/1.4/components/helm-broker/#details-create-addons-repository) document to learn more.\n\n## Service Mesh\n\nWith great power comes great... resource consumption? Not anymore! Starting with this release the components of the Service Mesh and Security areas, including the API Controller, the API Server Proxy, Dex, the IAM Kubeconfig Service, Istio sidecars, and Istio Management Plane deployments consume significantly fewer resources, helping you to stay within the limits of your license's resource quotas. See [this](https://github.com/kyma-project/kyma/issues/4855) issue for more details.\n","excerpt":"Straight from Indonesian Jakarta, we sail to Japan. Let's stop in one of its beautiful temples and ponder over what the 1.4 Kyoto Release has to offer. Being hard-working as the Japanese, Kyma busy bees introduced many improvements in their components, including the Application Connector, Console, Kiali, and Headless CMS. Read on to find out what has changed in Kyma since 1.3.","fields":{"slug":"/blog/2019/8/8/release-notes-14","assetsPath":"/assets/blog-posts/2019-08-08-release-notes-1.4/","date":"August 08, 2019","postInfo":{"fileName":"release-notes-14","year":2019,"month":8,"day":8}},"frontmatter":{"title":"Kyma 1.4 Kyoto","author":{"name":"Malgorzata Swieca, Technical Writer @Kyma"},"tags":["release-notes"],"type":"release","releaseTag":"1.4.0","redirectFrom":["/blog/release-notes-14"]}},{"id":"76835b42-7716-516a-b7d2-4e40645e1ef5","rawMarkdownBody":"\nWorking with others is always a great opportunity to learn and grow, so we simply couldn't say \"no\" to working with the team at [Ory](https://www.ory.sh/) when such opportunity arose. Making Kyma even more secure, gaining new experience, working with awesome people, and contributing to another project at the same time? Read on to find out how we're joining forces with Ory to bring an OAuth server to Kyma and contribute a completely new component to the lair of Hydra and its Oathkeeper. \n\n<!-- overview -->\n\nThe Kyma API Gateway enables exposing applications to the world outside of the cluster, at the same time allowing to secure access to the exposed application with JWT authentication. The implemented authentication mechanism allows to secure entire services or only selected resource paths within those services. You can read all about this in our [documentation](https://kyma-project.io/docs/components/api-gateway/). \n\nEnhancing security with authorization mechanisms has always been a part of the API Gateway vision in Kyma. Currently, basic authorization needs are fulfilled thanks to Istio and its implementation of [RBAC](https://istio.io/docs/reference/config/authorization/istio.rbac.v1alpha1/) which allows controlling access to services in the cluster. Although you can apply authorization to the requests that the exposed services receive, there's no way to authorize the requested operation based on, for example, scopes. \nThis is a pretty significant gap in our security scheme, especially when you consider communication between 3rd party applications and the applications living in Kyma and exposed through the API Gateway. \n\nOne of the authorization strategies we are going to implement is through an OAuth2 server. Among many ready-to-use solutions available on the market, the one created by [Ory](https://ory.sh) caught our attention specifically. This solution comes with a full-fledged resource access authorization ecosystem, including an OAuth2 server and an OAuth reverse proxy. Additionally, this solution is a very popular, respected project with a high adoption rate and many stargazers on GitHub.\n\nTo investigate how the adoption of the Ory ecosystem would work with and potentially extend the Kyma API Gateway, we worked on a POC that used the Ory OAuth2 server - Hydra and the reverse proxy - Oathkeeper and focused on two OAuth flows: implicit grant and client credentials. The results were satisfactory and are documented in the form of examples available to inspect [here](https://github.com/kyma-incubator/examples/tree/master/ory-hydra/scenarios).\n\nBased on the positive results of the POC, we decided to focus our efforts on integrating Kyma with the Ory ecosystem. To facilitate this integration, we sat down with the developers from Ory during a workshop that helped to work out a plan of how to integrate our solutions and how the Kyma team will contribute to Ory's solution. \n\nSo how's the solution of Ory going to be used in Kyma? In the target setup, Kyma deployments will come with 3 Ory components: the Hydra OAuth2 server, the Oathkeeper reverse proxy that secures the exposed service, and the Oathkeeper Controller, which manages access rules for Oathkeeper. Kyma users will register their own OAuth clients in the Console UI and define access rules for their APIs. Thanks to that, every application will be able to get its own OAuth token and communicate with the exposed API. \n\n![Oauth2 flow in API Gateway](./oathkeeper-gateway.svg)\n\nThe role of the Kyma team in this setup is very clear - we are to create the Oathkeeper controller component and contribute it to Ory's ecosystem. \nAt the moment, the Oathkeeper is not designed to be used natively in Kubernetes as the configuration can be provided to this component only through an external server that provides the config, or directly through a file. Feeding the configuration to Oathkeeper in Kubernetes-native way using [Custom Resource Definitions (CRDs)](https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/#customresourcedefinitions) is not supported. The Oathkeeper Controller is going to address this gap. Kubernetes users will be able to create custom resources that represent access rules for their services. The Controller will then pass this data to Oathkeeper in a format which it can work with without any additional modification.\n\n![Register access rule](./controller.svg)\n\nThis collaboration is going to bring great value to Kyma and Ory (Kyma supports OAuth2, Ory supports Kubernetes CRDs), and we're extremely excited that we're sailing the seas with the guys from Ory. Be sure to check out their solutions and follow our blog and releases to see how this adventure ends. \n","excerpt":"Working with others is always a great opportunity to learn and grow, so we simply couldn't say \"no\" to working with the team at Ory when such opportunity arose. Making Kyma even more secure, gaining new experience, working with awesome people, and contributing to another project at the same time? Read on to find out how we're joining forces with Ory to bring an OAuth server to Kyma and contribute a completely new component to the lair of Hydra and its Oathkeeper.","fields":{"slug":"/blog/2019/7/31/kyma-collaboration-with-ory","assetsPath":"/assets/blog-posts/2019-07-31-kyma-collaboration-with-ory/","date":"July 31, 2019","postInfo":{"fileName":"kyma-collaboration-with-ory","year":2019,"month":7,"day":31}},"frontmatter":{"title":"Joining forces with Ory","author":{"name":"Piotr Mścichowski, Capability Owner @Kyma"},"tags":["ory","contribution","service-mesh"],"type":null,"releaseTag":null,"redirectFrom":null}},{"id":"3808d23d-992c-56a3-90ec-ce2098ecc57e","rawMarkdownBody":"\nIt was a warm and sunny July day in San Francisco (not kidding!) when we got into the crowded Moscone West conference center for a session entitled “[Serverless on Google Cloud](https://www.youtube.com/watch?v=iPQUdb0kssE)”. On that very stage at Google Cloud Next 2018, both Knative and Kyma projects were announced and officially saw the light of day. Since then a lot of code was written and rewritten, shaping an extraordinary first year for both projects. You can go through some of the most memorable moments throughout [Kyma’s first year](https://kyma-project.io/blog/2019/7/24/happy-birthday-kyma/) or [Knative's first year](https://cloud.google.com/blog/) recaps.\n\n<!-- overview -->\n\n## Getting Kyma launched\n\nKyma started eight months before its public announcement, in an attempt to simplify software extensibility in the area of eCommerce at SAP Hybris. At that time, we knew neither that it was going to be open-sourced nor that the name would be Kyma. What inspired us to choose the open-source path was the initial interaction with several friendly partners. They all provided very similar feedback, were super enthusiastic, and asked for a way to get involved. At that point, we were convinced that we needed an open and highly collaborative model around the project. We first heard about Knative in the hallway track at KubeCon Europe 2018. Our first direct interaction with the Knative team took place already in early June 2018, when we exchanged ideas and discussed the direction going forward. On that day it became clear that our roads would cross again and that Kyma and Knative were destined to integrate well with each other.\n\n![Documentation component](./wheels.png)\n\nIt took us less than two months, with all the support we could get across SAP, to publish the project on GitHub under [github.com/kyma-project](https://github.com/kyma-project) – just in time for the initial launch at Cloud Next that took place exactly one year ago.\nWe received phenomenal feedback both during and after the launch event. We got many questions about the features, technology choices, roadmap, SLAs, and more. We had to address many of these issues on the go as we moved forward. We also got the (seemingly obvious) question where and when Kyma will get a marketplace on its own. \"Not so fast, not so fast,\" we were thinking, \"let's first learn to walk before we start running!\"\n\n## After the launch\n\nSince the launch, we’ve seen how the openness and flexibility of the Knative ecosystem have brought in many different vendors. Knative successfully simplified the experience of building apps on top of Kubernetes, enabling developers and operators to work together in the same environment. Some of the vendors around Knative provide interchangeable parts, such as [Gloo](https://github.com/solo-io/gloo) from solo.io and [Ambassador](https://github.com/datawire/ambassador) from Datawire that swap away and replace pieces of Istio. [Official stats](https://knative.teststats.cncf.io/d/5/companies-table?orgId=1) point at over 50 companies that have contributed to Knative.\nWe’ve also seen several projects kicking off on top of Knative, such as TriggerMesh and OpenWhisk. Kyma is also a part of this category, sitting steadily on top of Knative, enabling application developers to consume third-party services via the Open Service Broker catalog, and providing seamless connectivity to enterprise systems. We naturally started by integrating with our SAP apps. We became very quickly aware of the potential behind the approach in general, the reach it could provide to our partner ecosystem, and the large developer community out there. Leveraging Knative provides us with a flexible abstraction over the underlying Kubernetes resources. However, if one would want to go beyond Knative and work with Kubernetes directly at any point in time, that would be also possible. We went for this approach of radical transparency towards our underlying layers in Kyma.\n\n## Together with Knative\n\nWe started with a very clear and [ambitious plan](https://kyma-project.io/blog/2018/8/10/kyma-knative-progress-report) to closely integrate Kyma and Knative. At the launch, we were still using the Kubeless serverless stack underneath our functions’ runtime. At that time, we had a [plan](https://kyma-project.io/blog/2018/9/27/replacing-kubeless-with-knative) to replace it as soon as Knative Serving becomes more stable and reliable. By default, Knative included eventing implementation based on Kafka. While providing superb scalability, it had a resource consumption footprint which was going beyond what we planned. Therefore, we went forward with our NATS Streaming-based Knative eventing implementation. That went quite well, and it is nowadays part of the standard Knative eventing delivery. Since April, it has also been the default eventing layer inside Kyma. We use it in many projects ourselves, and we enable developers to benefit from the lower memory consumption it provides.\nAs it often goes, plans and reality do not always meet as intended. In March, we had to [temporarily suspend](https://kyma-project.io/blog/2019/3/27/wg-knative-closure/) our Knative integration plans due to other priorities within the project. We were quick to realize that sustainable progress requires a steady, disciplined, and long-term focus. To get there, we regrouped and have now established a dedicated Knative team, led by our own Ahmed Abdalla. The team will drive forward the closer Kyma and Knative integration, starting right away with Knative Serving.  \n\n## Going forward\n\nOur focus, as we go forward, is to work on two fronts. On the one hand, we have the core Kyma features, building a truly open frame that provides a flexible and easy way to connect and extend enterprise applications.\nOn the other hand, we look at our serverless foundational layer, where we see Knative with all its different components as a natural and logical choice.\n\nTherefore, we will work on:\n\n1.\tEstablishing Knative as a first-class citizen in Kyma.\n2.\tProviding a Knative-rich user experience within Kyma by leveraging the full landscape of Knative features, such as Serving, Eventing, Operator, CLI, and more.\n3.\tEnriching the Knative community with Kyma use cases, customer feedback, and challenges, which we can solve together in collaboration.\n\nSince we are still early in the journey, we have a lot of work ahead of us to reach our initial set of goals:\n1.\tReplace Kubeless serverless stack with the Knative Serving runtime.\n2.\tProvide production-ready and developer-focused user experience for eventing integration through the Broker/Trigger model.\n3.\tLeverage the full support of Event Sources within our Application Connector components.\n4.\tProvide easy out-of-the-box Knative installation experience through different Knative Operators.\n\nThis list could be much longer. By having a prioritized and focused working model, we are betting on the Knative community to be a partner in defining the future of enterprise software extensibility.\n\n## Fostering the community\n\nFrom day one, we planned for Kyma to be a vendor-neutral extension layer, making sure it meets our needs and the needs of the wider developer community. To stress that, attract new like-minded fellows, and reach a maximum audience, we’re currently planning the steps needed to donate Kyma to CNCF Sandbox, making sure to remove any barriers for potential contributors and collaborators. SAP has many years of experience in both writing and running mission-critical enterprise systems. It would be awesome to combine that with the different perspectives we will find out there with other vendors.\nOn the face-to-face front, we’ve taken extra care to cover some of the major events, such as KubeCon, OSCON, QCon, and several local Kubernetes-related meetups. Lately, we had the honor to host our friends from Google, [Matt Moore](https://twitter.com/mattomata) and [Scott Nichols](https://twitter.com/n3wscott), at a well-attended [Cloud-native meetup](https://events.sap.com/de/munich-knative/en/home) dedicated to Knative that took place in July in Munich. We conducted a poll there with the audience of over 70 people, and we jointly decided to launch the [Munich Knative Meetup Group](https://www.meetup.com/Munich-Knative-Meetup-Group/). Stay tuned for more news on that and an announcement of the inaugural event in September.\n\n## In closing\n\nWe believe that wider collaboration creates the best environment for a vibrant and active community. We wouldn't be where we are today without all of your feedback and the early adopters who believed in Kyma and were open-minded enough to give it a try and not get discouraged by any hurdles on the way. You can find the [testimonial from XXXLutz](https://www.youtube.com/watch?v=NI4cOWO9HnA) as well as other early adopters on the Kyma and SAP CX YouTube channels. They all started throughout the year before we had our [openSAP course](https://open.sap.com/courses/kyma1) introducing Kyma and all the examples and automation around application integration. We’re deeply grateful for all the trust and support we’ve got so far!\n/#keepExtending\n","excerpt":"It was a warm and sunny July day in San Francisco (not kidding!) when we got into the crowded Moscone West conference center for a session entitled “Serverless on Google Cloud”. On that very stage at Google Cloud Next 2018, both Knative and Kyma projects were announced and officially saw the light of day. Since then a lot of code was written and rewritten, shaping an extraordinary first year for both projects. You can go through some of the most memorable moments throughout Kyma’s first year or Knative's first year recaps.","fields":{"slug":"/blog/2019/7/24/kyma-and-knative-turning-one","assetsPath":"/assets/blog-posts/2019-07-24-kyma-and-knative-turning-one/","date":"July 24, 2019","postInfo":{"fileName":"kyma-and-knative-turning-one","year":2019,"month":7,"day":24}},"frontmatter":{"title":"Kyma and Knative turn one: Our First Year","author":{"name":"Krasimir Semerdzhiev and Ahmed Abdalla"},"tags":["knative","community","birthday","cncf","meetup","openSAP"],"type":null,"releaseTag":null,"redirectFrom":["/blog/kyma-and-knative-turning-one"]}},{"id":"ec02bf2f-8992-572e-92b2-dc4ff70c01d7","rawMarkdownBody":"\nKyma is already 1 year old and we have a feeling it has only recently been open-sourced. Let me take you on a journey to the past to bring back the most interesting moments. Once we look back, let us see what the future brings.\n\n<!-- overview -->\n\n![birthday](./birthday.png)\n\n- [We have had quite an interesting year](#we-have-had-quite-an-interesting-year)\n  * [24.07.2018 Open source - day one](#24-07-2018-open-source---day-one)\n  * [26.07.2018 Kyma together with Knative launched at Google Cloud Next](#26-07-2018-kyma-together-with-knative-launched-at-google-cloud-next)\n  * [13.08.2018 Kyma made it to the CNCF Landscape](#13-08-2018-kyma-made-it-to-the-cncf-landscape)\n  * [12.09.2018 First Core Special Interest Group meeting](#12-09-2018-first-core-special-interest-group-meeting)\n  * [10.10.2018 Kyma announced to SAP customers and partners](#10-10-2018-kyma-announced-to-sap-customers-and-partners)\n  * [10-13.12.2018 Kyma at KubeCon Seattle](#10-13-12-2018-kyma-at-kubecon-seattle)\n  * [19.02.2019 First Kyma early adopters](#19-02-2019-first-kyma-early-adopters)\n  * [25.04.2019 1.0 release](#25-04-2019-1-0-release)\n  * [02.05.2019 Netconomy went to production](#02-05-2019-netconomy-went-to-production)\n  * [07.05.2019 Kyma released with SAP C/4HANA Foundation to the production environment](#07-05-2019-kyma-released-with-sap-c-4hana-foundation-to-the-production-environment)\n  * [21-23.05.2019 Kyma at KubeCon Barcelona](#21-23-05-2019-kyma-at-kubecon-barcelona)\n  * [23.05.2019 We announced Kyma 1.0 on the Kubernetes blog](#23-05-2019-we-announced-kyma-1-0-on-the-kubernetes-blog)\n  * [18.06.2019 Kyma devs became Kubernetes contributors and Service Catalog approvers](#18-06-2019-kyma-devs-became-kubernetes-contributors-and-service-catalog-approvers)\n  * [02.07.2019 Kyma dev became a chair of the Service Catalog SIG](#02-07-2019-kyma-dev-became-a-chair-of-the-service-catalog-sig)\n  * [03.07.2019 Setup of Knative dedicated team](#03-07-2019-setup-of-knative-dedicated-team)\n- [We are making another big step](#we-are-making-another-big-step)\n- [We make friends](#we-make-friends)\n- [We contribute back](#we-contribute-back)\n- [We want you to contribute - birthday gifts](#we-want-you-to-contribute---birthday-gifts)\n- [Join us](#join-us)\n\n# We have had quite an interesting year\n\n## 24.07.2018 Open source - day one\n\nWe know what we did last summer and we are very proud of it. We opened our repositories to the outside world and published the first version of our website. We introduced our project in a [blog post](https://kyma-project.io/blog/2018/7/24/introduction-project-kyma) and took first steps on [Twitter](https://twitter.com/kymaproject), growing to over 700 followers.\n\n<iframe border=0 frameborder=0 height=520 width=550 align=\"middle\"\n src=\"https://twitframe.com/show?url=https://twitter.com/kymaproject/status/1021830148948193280\"></iframe>\n\n## 26.07.2018 Kyma together with Knative launched at Google Cloud Next\n\nOpen source was a new land for us. When you make a step into the world of unknowns, better make it with a friend. Luckily, we were not the only ones that were at the beginning of the journey. We made an official launch at the Google Cloud Next event to be there together with the [Knative](https://github.com/knative) project.\n\n![google-next](./google-next.png)\n\n## 13.08.2018 Kyma made it to the CNCF Landscape\n\n<iframe border=0 frameborder=0 height=430 width=550\n src=\"https://twitframe.com/show?url=https://twitter.com/kymaproject/status/1029029616684552192\"></iframe>\n\nOur [`kyma`](https://github.com/kyma-project/kyma/) repository quickly reached 500 stars on GitHub. We also showed up on the [CNCF Landscape](https://github.com/cncf/landscape).\n\n![landscape-view](./landscape-screen.png)\n\nWe are definitely not planning to stop at 500 stars. This number was growing pretty slowly at first, but it has been increasing steadily since the 1.0 release. Remember that you can also star our project if you like it.\n\n<iframe src=\"https://ghbtns.com/github-btn.html?user=kyma-project&repo=kyma&type=star&count=true&size=large\" frameborder=\"0\" scrolling=\"0\" width=\"158px\" height=\"30px\"></iframe>\n\n## 12.09.2018 First Core Special Interest Group meeting\n\nAfter creating an open governance model, we hosted our first public Core Special Interest Group meeting. It was hosted by our stars, [Piotr Kopczynski](https://twitter.com/PiotrasPk) and [Mateusz Szostok](https://twitter.com/m_szostok).\n\n`youtube: https://youtu.be/1DD5aCBnywQ`\n\nSo far, we have had 17 meetings and we are definitely not planning to stop organizing them. We meet regularly and you are welcome to join. Check more details at the [Core SIG landing page](https://github.com/kyma-project/community/tree/master/collaboration/sig-core), join our next meeting, and let us know what you think about Kyma.\n\n## 10.10.2018 Kyma announced to SAP customers and partners\n\nKyma was announced to SAP customers and partners as the future of extensibility at the SAP CX Live event in Barcelona. [Alex Atzberger](https://twitter.com/aatzberger), president of SAP Customer Experience (SAP CX), talked about the important role Kyma plays for SAP.\n\n![kyma-sap-cx](./kyma-sap.png)\n\n[Moritz Zimmermann](https://twitter.com/moritzzimmerman), CTO of SAP CX, mentioned how Kyma shows SAP's commitment to openness.\n\n<iframe border=0 frameborder=0 height=585 width=550\n src=\"https://twitframe.com/show?url=https://twitter.com/moritzzimmerman/status/1050427826221051905\"></iframe>\n\n## 10-13.12.2018 Kyma at KubeCon Seattle\n\nThanks to SAP sponsorship, we made it to KubeCon Seattle. Together with our brothers from the [Gardener](https://gardener.cloud) project, we could have a lot of valuable conversations at the SAP Open Source booth. We were represented by [Ahmed](https://twitter.com/Abd4llA), [Lukasz](https://twitter.com/derberq), and [Piotr](https://twitter.com/PiotrasPk).\n\n![seattle](./lysy-seattle.png)\n\nWe even made it to one of the presentations and were mentioned by friends from other departments.\n![kube-con-seattle](./kube-con-seattle.png)\n\n## 19.02.2019 First Kyma early adopters\n\nThe new year brought an important update to our [`http://kyma-project.io`](https://kyma-project.io/) landing page. We created a section where we could show off the early adopters of our project:\n\n![early-adopters](./early-adopters.png)\n\n## 25.04.2019 1.0 release\n\nYou can't even imagine how important this date was for us. We reached or first huge milestone and made it clear that Kyma is ready to be used on the production environment. So, what are you waiting for?\n\n<iframe border=0 frameborder=0 height=720 width=550\n src=\"https://twitframe.com/show?url=https://twitter.com/kymaproject/status/1121426458243678209\"></iframe>\n\n## 02.05.2019 Netconomy went to production\n\nWe did not wait too long and a few days after the 1.0 release we got confirmation of the first production environment user. Our early adopter, [Netconomy](https://www.netconomy.net/), provided features to one of its clients and operates Kyma on its own. Netconomy will soon publish a guest blog post on the Kyma website describing their use cases.\n\n![netconomy-crew](./2019-05-02_kyma_golive_netconomy.jpg)\n\n## 07.05.2019 Kyma released with SAP C/4HANA Foundation to the production environment\n\nSAP, another early adopter that started using the Kyma project, made a big announcement of the production-ready offering for all SAP CX customers. The product is called SAP C/4HANA Foundation and you can read more about it in the [blog post](https://www.linkedin.com/pulse/introducing-sap-c4hana-foundation-thomas-hertz/) by [Thomas Hertz](https://twitter.com/primtom), Head of Technology at SAP CX.\n\n<iframe border=0 frameborder=0 height=800 width=550\n src=\"https://twitframe.com/show?url=https://twitter.com/Abd4llA/status/1125857596789993473\"></iframe>\n\n\n## 21-23.05.2019 Kyma at KubeCon Barcelona\n\n<iframe border=0 frameborder=0 height=550 width=550\n src=\"https://twitframe.com/show?url=https://twitter.com/derberq/status/1130832598954061824\"></iframe>\n\nYet another KubeCon event and we were there again. Thanks to the SAP support, we shared a booth with Gardener. This time the interest was much higher. Luckily, there were enough Kymians at the booth to answer all the questions asked.\n\n <iframe border=0 frameborder=0 height=500 width=550\n src=\"https://twitframe.com/show?url=https://twitter.com/m_szostok/status/1131130333242568705\"></iframe>\n\n## 23.05.2019 We announced Kyma 1.0 on the Kubernetes blog\n\nWe wanted to make it clear to Kubernetes and CNCF communities that Kyma is out there with the 1.0 release that is ready for use on the production environment. We published an article on the [Kubernetes blog](https://kubernetes.io/blog/2019/05/23/kyma-extend-and-build-on-kubernetes-with-ease/) and it brought a lot of additional attention to our Kyma communication channels, website, and Twitter. We noticed we were becoming more recognizable. Some popular authors, such as [Infoq](https://www.infoq.com/news/2019/06/kyma-enterprise-kubernetes/), started to write about Kyma.\n\n## 18.06.2019 Kyma devs became Kubernetes contributors and Service Catalog approvers\n\nKyma core developers, [Mateusz Szostok](https://github.com/mszostok) and [Piotr Miskiewicz](https://github.com/piotrmiskiewicz), became official Kubernetes organization members and the approvers of changes in the Kubernetes Service Catalog. This way, we confirmed we do not only integrate and consume, but also contribute back. Currently, 2 out of 4 approvers of the Service Catalog come from the Kyma project - how cool is that?\n\n![kyma-kubernetes-contributors](./sig-member.png)\n\n## 02.07.2019 Kyma dev became a chair of the Service Catalog SIG\n\nKubernetes Service Catalog is one of our main dependencies. Kyma firmly states that [Service Catalog](https://github.com/kubernetes-sigs/service-catalog) and [Open Service Broker API](https://www.openservicebrokerapi.org/) are the only Service Management solutions for Kubernetes that bring the best developer experience. It is obvious that we are not only interested in contributing code, but we also want to help to run the project. As a result, [Mateusz Szostok](https://github.com/mszostok) became a chair of the [Kubernetes Service Catalog SIG](https://github.com/kubernetes/community/tree/master/sig-service-catalog).\n\n![chair](./chair.png)\n\n\n## 03.07.2019 Setup of Knative dedicated team\n\nLast year, we open-sourced with our brother in arms, the [Knative](https://github.com/knative) project. Now, once we are stable and production-ready, let us make this brotherhood much more dedicated. We reorganized our setup a bit and created a team that will be dedicated to Knative contributions. We are planning to rebase Kyma on top of these contributions to improve our Event Bus and remove the dependency to Kubeless.\n\n\n# We are making another big step\n\nWe just keep walking, not planning to stop. Since day one, we have known that [CNCF Landscape](https://github.com/cncf/landscape) is not everything we want to achieve in CNCF. Our obvious next goal is [CNCF Sandbox](https://www.cncf.io/sandbox-projects/). This is not just our decision, though. The [CNCF Technical Oversight Committee (TOC)](https://github.com/cncf/toc) must sponsor the project's donation and this is our focus for the upcoming months. We need to identify what we must prepare on our side to become a part of CNCF. We also look forward to CNCF's feedback about Kyma.\n\n# We make friends\n\nWe understand how important it is to make friends in the open-source community. Leaving in isolation brings loneliness and we definitely do not want that for our project. Fortunately, we have a lot of visitors to our main [Slack  channel](http://slack.kyma-project.io). Apart from making friends among users, we also want to make friends among the projects we depend on, especially those that play or will play an important role in Kyma.\n\nA few of us regularly help the following communities:\n- [Ahmed Abdalla](https://twitter.com/Abd4llA) in [Knative](https://github.com/knative)\n- [Lukasz Gornicki](https://twitter.com/derberq) in [AsyncAPI](https://www.asyncapi.org/)\n- [Piotr Kopczynski](https://twitter.com/PiotrasPk) and [Mateusz Szostok](https://twitter.com/m_szostok) in [Kubernetes Service Catalog](https://github.com/kubernetes-sigs/service-catalog)\n- [Piotr Mscichowski](https://github.com/piotrmsc) in [Ory](https://github.com/ory), [Hydra](https://github.com/ory/hydra), and [Oathkeeper](https://github.com/ory/oathkeeper) projects.\n\n# We contribute back\n\nIf you depend on someone and you need more than you can get, don't wait until you get it, but help out and contribute instead! This is a list of projects where we made noticeable contributions that we are very proud of:\n\n- [AsyncAPI](https://github.com/asyncapi/asyncapi-react):\tThe entire component contribution and consultations regarding best practices for building an open-source community.\n- [Knative](https://github.com/knative/eventing):\tFeatures around NATS\n- [Kubernetes Service Catalog](https://github.com/kubernetes-sigs/service-catalog):\tMissing features and improvements; official approvers and chairs\n- [Open Service Broker Azure](https://github.com/Azure/open-service-broker-azure):\tMissing features and improvements\n- [React JSON Schema](https://github.com/mozilla-services/react-jsonschema-form):\tMissing features and improvements\n- [Istio](https://github.com/istio/istio):\tMissing features\n- [Kubeless](https://github.com/kubeless/kubeless):\tMinor improvements\n\nThat was a hell of a year, and we can't wait to see what the upcoming year holds for us!\n\n# We want you to contribute - birthday gifts\n\nBirthdays are always connected with presents. This time we plan to give away some Kyma T-shirts, not for free though. You get those only if you become an external contributor in the next 7 days. Our understanding of an external contributor is that you are not a member of the Kyma organization on GitHub, and in the next 7 days you:\n- Contribute code or documentation to one of Kyma repositories. It must be a pull request but not necessarily merged. We can imagine that depending on the size of the contribution it might not be that easy to approve and merge your PR.\n- Contribute an issue using one of our templates. We equally value a well-described bug that is easy to replicate and an enhancement request with a well-described use case.\n\nAll Kyma repositories are located [here](https://github.com/kyma-project/kyma/).\nOnce you contribute, let us know about it on [Twitter](https://twitter.com/kymaproject) or on the **#general** channel on [Slack](http://slack.kyma-project.io). We will evaluate all contributions on Thursday, August 1, and announce all accepted contributions and happy winners. Happy contributing!\n\nIf you don't know what to contribute, I'm sure we can help - just contact us through one of the above communication channels and we will point you in the right direction.\n\n![chair](./swag.png)\n\n# Join us\n\nIf you did not have a chance to contribute to our history, you can still join us and become a part of Kyma's future. We have many channels that you can use to interact with us:\n\n- Twitter: https://twitter.com/kymaproject\n- Core SIG public meetings: https://docs.google.com/document/d/1vWleTon7sJIk0teee4SoVezS4mR3K8TlkvXkgLJwRD8/\n- Slack: http://slack.kyma-project.io\n- GitHub issues: https://github.com/kyma-project/kyma/issues\n- LinkedIn: https://www.linkedin.com/company/kyma-project\n- Stackoverflow: https://stackoverflow.com/questions/tagged/kyma\n- YouTube: https://www.youtube.com/channel/UC8Q8bBtYe9gQN-dQ-_L8JvQ\n\nUse one of these communication channels to let us know what you think about Kyma and how you can start your contribution to the project.\n","excerpt":"Kyma is already 1 year old and we have a feeling it has only recently been open-sourced. Let me take you on a journey to the past to bring back the most interesting moments. Once we look back, let us see what the future brings.","fields":{"slug":"/blog/2019/7/24/happy-birthday-kyma","assetsPath":"/assets/blog-posts/2019-07-24-happy-birthday-kyma/","date":"July 24, 2019","postInfo":{"fileName":"happy-birthday-kyma","year":2019,"month":7,"day":24}},"frontmatter":{"title":"Happy Birthday Kyma","author":{"name":"Lukasz Gornicki, Community Manager and Core & Supporting Capability Owner"},"tags":["community"],"type":null,"releaseTag":null,"redirectFrom":["/blog/happy-birthday-kyma"]}},{"id":"b89e6924-2bcb-5e8f-9894-8aaca053c394","rawMarkdownBody":"\nWith summer in full swing and people enjoying their long-expected holidays, you might've thought that you're not going to get any news from us for some time now. Wrong! We're continuing our travels through the summer holidays season and this time around we're headed to Kyoto. Let's have a look at the new features and improvements planned for the 1.4 release, shall we?   \n\n<!-- overview -->\n\nJapanese are known for their hard work and innovations they introduced to the world of technology over the years. With our newest release sharing its codename with the home of the tech giant that taught us that the princess is always in another castle, we were inspired to focus on innovation and vital improvements. \n\nOn the innovation front, you're getting an OAuth2 server integrated with Kyma. This solution is powered by [Hydra](https://github.com/ory/hydra) and supported by [Oathkeeper](https://github.com/ory/oathkeeper) from [Ory](https://www.ory.sh/). This feature-rich, lightweight (written in Go), and stable open-source solution backed by a huge community is a great fit for Kyma. We're going to make sure it's a good Kubernetes citizen and adds more value to our story and the \"batteries included\" principle we follow.  \n\nWhen it comes to improvements, Kyma 1.4 Kyoto aims to improve on the application registration process. We're going to achieve that by using Compass - a new subproject that is still in the [Kyma Incubator](https://github.com/kyma-incubator/). [Compass](https://github.com/kyma-incubator/compass) consists of components that provide a way to register, group and manage your applications across multiple Kyma runtimes. Using Compass, you can control and monitor your application landscape in one central place. In the new release, it will be available as an experimental feature activated through a feature toggle and will provide a preview of the API and the UI. \n\nRemember \"bundles\"? We decided to rename them to \"addons\" to better reflect the functionality they provide. Kyma 1.4 will come with more flexible addons, with a streamlined publishing process, hosting directly on GitHub, and the ability to enable them in selected Namespaces. \n\nHere are some other things you can expect to see in Kyma 1.4 Kyoto:\n- Improved Namespace view in the UI - better labeling, filtering, and visible health status of deployed workloads\n- Kiali upgraded to the latest stable version and with Single Sign-On enabled\n- Istio upgraded to 1.2.2\n- Backup procedure configurable as part of the installation process\n- Conversion Service and Validation Service for AsyncAPI specifications\n- Experimental standalone Kyma Function controller module with Knative implementation\n\nYou can find all the items planned for the 1.4 release in our [Zenhub](https://app.zenhub.com/workspaces/kyma---all-repositories-5b6d5985084045741e744dea/reports/release?release=5cd88a49145f41296ed5194a). If you want to get an even better look at our plans, be sure to check out the project [roadmap](https://kyma-project.io/roadmap/). \n\nKyma 1.4 Kyoto is scheduled for release on 8.08.2019. Keep an eye out for more Kyma news and updates on our blog. またね! \n","excerpt":"With summer in full swing and people enjoying their long-expected holidays, you might've thought that you're not going to get any news from us for some time now. Wrong! We're continuing our travels through the summer holidays season and this time around we're headed to Kyoto. Let's have a look at the new features and improvements planned for the 1.4 release, shall we?","fields":{"slug":"/blog/2019/7/23/release-14-plan","assetsPath":"/assets/blog-posts/2019-07-23-release-1.4-plan/","date":"July 23, 2019","postInfo":{"fileName":"release-14-plan","year":2019,"month":7,"day":23}},"frontmatter":{"title":"Kyma 1.4 Kyoto scheduled for release on 8.08.2019","author":{"name":"Piotr Bochynski, Product Owner @Kyma"},"tags":["release"],"type":null,"releaseTag":null,"redirectFrom":["/blog/release-14-plan"]}},{"id":"1267ca79-5465-505c-b637-f87c3af76194","rawMarkdownBody":"\nAfter a short stop in Istanbul, we move forward to Jakarta with the brand new Kyma 1.3 release, which brings you a set of significant improvements in many components, including the Console and Kyma CLI. It also introduces the CloudEvents specification 0.3 for Event delivery and comes with even more useful documents that will guide you through the project. Read on to find out what Kyma 1.3 has to offer.\n\n<!-- overview -->\n\nSee the overview of all changes in this release:\n\n- [Application Connector](#application-connector) - Fetching API specification secured with Basic Auth or OAuth, automatic generation of the root Certificate Authority, additional headers and query parameters stored in a secured way\n- [Console](#console) - Less information noise in lambda logs, easy Namespace labeling and filtering, API list streamed using WebSockets, hide irrelevant navigation nodes, DevX improvements for the **Lambda** view, Console Backend observability improved\n- [Core and Supporting](#core-and-supporting) - Documentation component\n- [Service Management](#service-management) - Service Catalog migration from \"API Server\" to \"CRD only\"\n- [Kyma CLI](#kyma-cli) - Kyma CLI documentation, installation and uninstallation commands improved, Kyma certificate as part of the installation command\n- [Logging](#logging) - Loki updated to 0.1.0\n- [Documentation](#documentation) - Configuration documents, troubleshooting document type template, upgrade process documentation\n- [Eventing](#eventing) - Event delivery aligned with the CloudEvents specification 0.3, Kyma subscription cleanup\n- [Service Mesh](#service-mesh) - Disable authentication on selected API paths\n\n> **CAUTION:** Before you upgrade to Kyma 1.3, read the [Migration Guide](https://github.com/kyma-project/kyma/blob/release-1.3/docs/migration-guides/1.2-1.3.md) which describes necessary manual actions required by the Application Connector.\n\n---\n\n## Application Connector\n\n### Fetching API specification secured with Basic Auth or OAuth\n\nApplication Connector supports a variety of authentication methods to allow users to register secured APIs. Now you can also register APIs with a specification URL that requires authentication as the Application Connector can use credentials to fetch the API specification. The supported authentication methods for fetching API specifications are Basic Auth and OAuth. Read [this](https://kyma-project.io/docs/1.3/components/application-connector/#tutorials-register-a-service) document to learn more.   \n\n### Automatic generation of the root Certificate Authority (CA)\n\nApplication Connector serves as a certificate authority that issues client certificates for external systems. Users can provide their own certificates and keys to be used as the root CA. In order to improve security and reduce configuration effort, we automated the certificate and key generation process. From now on, if the user doesn't provide a custom certificate-key pair, the certificate and key are generated automatically. Read [this](https://kyma-project.io/docs/1.3/components/application-connector/#details-application-connector-certificates) document for more information. To learn how the automated certificate generation affects the upgrade process and how to preserve your certificate and key, read the [migration guide](https://github.com/kyma-project/kyma/blob/release-1.3/docs/migration-guides/1.2-1.3.md).\n\n### Additional headers and query parameters stored in a secured way\n\nApplication Connector allows you to enrich each request to the registered API with additional headers and query parameters. Now you can specify a custom list of headers and query parameters that contain sensitive information. The data is stored in a secure manner.\n\n\n## Console\n\n### Less information noise in lambda logs\n\nWe have significantly reduced the noise you have seen so far when inspecting logs from your lambda. By default, we hide health check logs, logs that originate from previous versions of your lambda function, and Istio sidecar logs. Additionally, we added an auto refresh option which automatically pulls new log lines into the UI.\n\n### Easy Namespace labeling and filtering\n\nNow you can manage Namespace labels easily in the Namespace **Details** view in the Console. This will help you better organize your Namespaces using label filter on the **Overview** page. Whenever you apply label filtering in the main Namespace **Overview**, the state of the filter is preserved so that you can stay focused on the Namespaces you have labeled.\n\n### API list streamed using WebSockets\n\nThe list of APIs contains up-to-date data with no need of refreshing the page. All changes in the APIs data are streamed live to the **API** view in the Console.  \n\n### Hide irrelevant navigation nodes\n\nIn case you find some navigation nodes in the Console irrelevant, you can simply ignore them by defining a list of specific navigation nodes or even whole categories that should not show up in the Console UI navigation. Read [this](https://kyma-project.io/docs/1.3/components/console/#configuration-console-chart) document to learn more.\n\n### DevX improvements for the Lambda view\n\nWe have fixed some usability issues that lambda developers were struggling with. Now, after saving changes to your lambda function, you are not redirected to the list of lambdas, but stay on the lambda **Details** view instead.\n\nWhat is more, the issue related to the [environment variables prefix](https://github.com/kyma-project/kyma/issues/3937) is fixed, which results in the same experience when you bind services to lambdas from the **Lambda** view and the **Service Instance** view.\n\n### Console Backend observability improved by integration with OpenTracing and Jaeger\n\nTo make sure that operations and troubleshooting of the Kyma cluster and its Console is easier, in this release we integrated the GraphQL-based backend service with OpenTracing. We also made sure that Jaeger gets proper data about GraphQL requests in a readable way. Now it is easy to check each request's length, failed parts, and logs.\n\n![Console backend](./console-backend.png)\n\n![Console backend 2](./console-backend2.png)\n\n## Core and Supporting\n\n### Documentation component\n\nIn this release, we've worked on a component for documentation that bundles a Markdown renderer and specification renderers, such as OpenAPI or AsyncAPI. The goal is to have a single reusable component that can be used in any context in the Kyma Console and on the `kyma-project.io` website. You can see the progress of this component in the [kyma-incubator](https://github.com/kyma-incubator/documentation-component) organization on GitHub. You can also see the preview of this component in action in the **Documentation** view of the Kyma Console. As you can see in the screenshot, with this component we introduce a right navigation bar for Markdown documentation. This new navigation contains not only a list of documents that you can see on the page, but also a scroll-spy that shows the reader's location on the website.\n\nOur next step is to officially release this component and use it in other Kyma Console areas, such as Service Catalog related views where you can see documentation for different services.  \n\n![Documentation component](./documentation-component.png)\n\n\n## Service Management\n\n### Service Catalog migration from \"API Server\" to \"CRD only\"\n\nNow you can configure Kyma to use the experimental \"CRD only\" mode of our Service Catalog. Read [this](https://kyma-project.io/docs/1.3/components/service-catalog/#details-experimental-features) document to learn how to activate this feature. Moreover, the new mode contains a migration tool that migrates data for you. To learn more about the migration process, read [this](https://github.com/kyma-incubator/service-catalog/blob/crds-migration/docs/migration-apiserver-to-crds.md) document.\n\n>**NOTE:** Before you start the migration, make sure that you performed a full [backup](https://kyma-project.io/docs/1.3/components/backup/) of your cluster. You should also test the procedure on a testing environment first.\n\n\n## Kyma CLI\n\n### Kyma CLI documentation\n\nWe have started documenting Kyma CLI commands, covering the `version` and `install` commands so far. We will continue to document other commands with future releases.\n\n### Installation and uninstallation commands improved\n\nWe improved the `kyma install` and `kyma uninstall` commands with better output in case of errors and timeouts.\n\n### Kyma certificate as part of the installation command\n\nAs part of the `kyma install` command, the certificate used by the installed Kyma cluster is installed to your local certificate trust store. This applies for Windows, Linux and MacOS.\n\n\n## Logging\n\n### Loki updated to 0.1.0\n\nLoki is now updated to the first beta version, which promises a much better stability and feature richness.\n\n\n## Documentation\n\n### Configuration documents\n\nWe have successfully finished writing configuration documents for all Kyma components. If you want to check which parameters from `values.yaml` files of each component’s charts and sub-charts you can configure with overrides, check the **Configuration** section under a particular Kyma component.\n\n### Troubleshooting document type template\n\nIf you need to add troubleshooting documentation to your component, our content guidelines can help you with that. We have published a template for creating Troubleshooting documents. Find more details regarding the new document type [here](https://github.com/kyma-project/community/blob/master/guidelines/templates/resources/troubleshooting.md).\n\n### Upgrade process documentation\n\nUpgrading Kyma to a new version is quick and really simple, and release 1.3 comes with documentation to back this claim. Follow the procedure described in the [Upgrade Kyma](https://kyma-project.io/docs/1.3/root/kyma/#installation-update-kyma) document to quickly migrate to a newer release.\n\n\n## Eventing\n\n### Event delivery aligned with the CloudEvents specification\n\nEvents delivered to the lambda or Serverless now have the context attributes propagated as HTTP headers. Those headers are aligned with the [CloudEvents specification 0.3](https://github.com/cloudevents/spec/blob/master/http-transport-binding.md#31-binary-content-mode). You can use a Cloud SDK in a language of your choice to write the logic of handling Event delivery. For example, [here](https://github.com/cloudevents/sdk-go) you can find an SDK for Go.\n\n### Kyma subscription cleanup\n\nCertain properties which are no longer applicable after Knative migration have been removed.\n\n\n## Service Mesh\n\n### Disable authentication on selected API paths\n\nWith this release, it is possible to expose an API with authentication disabled on certain paths. It is useful for scenarios in which an API hosts public assets, such as schemas or login endpoints.\n\nTo allow disabling authentication on selected paths, there is a new **triggerRule** field in the Api CRD, which contains the `excludedPaths` object that represents the paths on which authentication should be disabled. The rest of the service's paths remain secured, meaning that the authentication is enabled. You can specify a matching method for paths using `exact`,`prefix`,`suffix` and `regex`. Read [this](https://kyma-project.io/docs/1.3/components/api-gateway/#custom-resource-custom-resource) document for more details.\n\n### Known issues\n\nA known issue related to Istio sidecar handling on AKS causes Kubernetes jobs with Istio Proxy sidecar to run endlessly as the sidecar doesn't terminate. As a workaround, disable Istio sidecar injection for all jobs on AKS by adding the `sidecar.istio.io/inject: \"false\"` annotation. To get a better understanding of this problem, read [this](https://github.com/istio/istio/issues/15041) Istio issue and the related discussion. \n","excerpt":"After a short stop in Istanbul, we move forward to Jakarta with the brand new Kyma 1.3 release, which brings you a set of significant improvements in many components, including the Console and Kyma CLI. It also introduces the CloudEvents specification 0.3 for Event delivery and comes with even more useful documents that will guide you through the project. Read on to find out what Kyma 1.3 has to offer.","fields":{"slug":"/blog/2019/7/12/release-notes-13","assetsPath":"/assets/blog-posts/2019-07-12-release-notes-1.3/","date":"July 12, 2019","postInfo":{"fileName":"release-notes-13","year":2019,"month":7,"day":12}},"frontmatter":{"title":"Kyma 1.3 Jakarta","author":{"name":"Klaudia Grzondziel, Technical Writer @Kyma"},"tags":["release-notes"],"type":"release","releaseTag":"1.3.0","redirectFrom":["/blog/release-notes-13"]}},{"id":"e806c68c-9017-5136-849d-798632de9dc2","rawMarkdownBody":"\nCloud-native application development is now a hot topic in the industry. Developers want to use modern languages, write microservices or even serverless functions. They expect high scalability with modern monitoring tools like Prometheus and Grafana. Kubernetes and CNCF landscape projects are no longer perceived as hype for early adopters. This is the mainstream now.\n\nIf you start a new, green field project you are lucky - you can dive into the great variety of tools and frameworks and use them. But how to pick the right tools? At the moment of writing this post, there are 686 projects registered in the [CNCF landscape](https://landscape.cncf.io/).\n\nWe also have the less lucky developers who still have to deal with applications designed when monoliths were cool. What about them? Can they benefit from cloud-native patterns? Yes, they can!\n<!-- overview -->\n\n# Imagine your legacy application\nYou probably have some applications you have to extend or integrate with but you are not happy with that fact. There can be a few reasons for it:\n- It requires writing code in the language you don't know and you want to use only Golang or JavaScript.\n- It is possible to add a new feature to the application but it requires a complex redeployment process which is risky.\n- You just don't want to touch it because it is fragile and adding anything can make it unstable.\n- You want to write an extension which can be scaled independently of the application.\n\n# WordPress as an example\nI prepared some example to help your imagination. The simple scenario with WordPress as a legacy application. Imagine you are running some commerce site and you created a blog on WordPress showing product reviews and tests. Now you want to engage your customers and you enabled comments in your blog posts. Users should see their comments immediately published, but you don't have time to moderate the content. The idea is to publish only positive comments automatically, and put other comments on hold.\n\nYou could use WordPress hook `comment_post` and implement a plugin in PHP. But it won't work for me. I don't know PHP, and my team mates don't either. I would like to use external systems (text analytics, slack, maybe more in the future), and I don't want to deal with secrets and authorization flows in WordPress side. Additionally, I want to utilize all modern DevOps practices and patterns, like [12 Factor App](https://12factor.net). In other words: me and my team want to do cool, cloud native stuff on top of Kubernetes, instead of be WordPress maintainers.\n\nOf course, in this simple scenario microservices, Kubernetes, Service Mesh, and other tools would be overkill but the real-world use cases are more complex, and you can imagine how this initial flow can grow in the future.\n\n# Implementation plan\n\nLet's implement and deploy our example. I will use:\n- A Kubernetes cluster from Google Kubernetes Engine (GKE) to deploy both WordPress and my code\n- Knative eventing and NATS as a messaging middleware to decouple WordPress from my extension\n- Istio Service Mesh together with Prometheus, Grafana, and Jaeger to have monitoring and tracing\n- Kubeless as a serverless engine for my code\n- Grafana and Loki to manage logs\n- Service Catalog, WordPress Connector for Kyma and Kyma Application Broker to bind WordPress API and Events to my code\n\n# Installation\nBased on the above list, you can expect a long installation process but I will use a Kyma operator that will do everything for me. All you need is a Google account and a Google Cloud Platform (GCP) project. If you don't have it yet, create one and Google will give a 12-month free trial with $300 credit to run your cluster.\n\n## Prepare the GKE cluster with Kyma\nFollow the [installation guide](https://kyma-project.io/docs/1.2/root/kyma/#installation-install-kyma-on-a-cluster) for GKE or just execute the following commands, replacing placeholders with proper values:\n\n```bash\n# Set ENV variables. See sample values in comments:\nexport KYMA_VERSION={KYMA_RELEASE_VERSION}      # 1.2.0\nexport CLUSTER_NAME={CLUSTER_NAME_YOU_WANT}     # kyma-cluster\nexport GCP_PROJECT={YOUR_GCP_PROJECT}           # myproject\nexport GCP_ZONE={GCP_ZONE_TO_DEPLOY_TO}         # europe-west1-b\n\n# Create a cluster\ngcloud container --project \"$GCP_PROJECT\" clusters \\\ncreate \"$CLUSTER_NAME\" --zone \"$GCP_ZONE\" \\\n--cluster-version \"1.12\" --machine-type \"n1-standard-4\" \\\n--addons HorizontalPodAutoscaling,HttpLoadBalancing\n\n# Add the current user as an admin\ngcloud container clusters get-credentials $CLUSTER_NAME --zone $GCP_ZONE --project $GCP_PROJECT\nkubectl create clusterrolebinding cluster-admin-binding --clusterrole=cluster-admin --user=$(gcloud config get-value account)\n\n# Install Tiller\nkubectl apply -f https://raw.githubusercontent.com/kyma-project/kyma/$KYMA_VERSION/installation/resources/tiller.yaml\n\n# Install Kyma\nkubectl apply -f https://github.com/kyma-project/kyma/releases/download/$KYMA_VERSION/kyma-installer-cluster.yaml\n\n# Show the Kyma installation progress. Stop the script with `Ctrl+C` when the installation finishes.\nwhile true; do \\\n  kubectl -n default get installation/kyma-installation -o jsonpath=\"{'Status: '}{.status.state}{', description: '}{.status.description}\"; echo; \\\n  sleep 5; \\\ndone\n```\n\n## Access Kyma\n\n> **NOTE:** Follow steps in this section only if you installed Kyma from the instructions in this blog post. If you followed the official Kyma documentation, skip this section as the installation steps cover adding a self-signed certificate and accessing the cluster.\n\nThe simple installation guide we followed uses a self-signed certificate and an `xip.io` domain. Such a certificate will be rejected by your browser so you have to set it as trusted. \n```bash\n# When the installation finishes, add a Kyma self-signed certificate to the trusted certificates (MacOS):\ntmpfile=$(mktemp /tmp/temp-cert.XXXXXX) \\\n&& kubectl get configmap net-global-overrides -n kyma-installer -o jsonpath='{.data.global\\.ingress\\.tlsCrt}' | base64 --decode > $tmpfile \\\n&& sudo security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain $tmpfile \\\n&& rm $tmpfile\n```\n\nRun these commands to display the Console URL, login, and password:\n```bash\necho 'Kyma Console Url:'\necho `kubectl get virtualservice core-console -n kyma-system -o jsonpath='{ .spec.hosts[0] }'`\n\necho 'User admin@kyma.cx, password:'\necho `kubectl get secret admin-user -n kyma-system -o jsonpath=\"{.data.password}\" | base64 --decode`\n```\nYou should get a similar result:\n```console\nKyma Console Url:\nconsole.1.2.3.4.xip.io\nUser admin@kyma.cx, password:\nEca23NyShqwK\n```\nYou can now open the Kyma Console URL in the browser and log in with the provided credentials. \n\n![Kyma Console](./console.png)\n\n## WordPress installation\nIf you already have WordPress installed, you can go to the next step. If not, you can easily deploy WordPress with a few commands:\n```bash\n# Create a Namespace\nkubectl create namespace wordpress\n\n# Deploy WordPress\nkubectl -n wordpress apply -f https://raw.githubusercontent.com/kyma-project/website/master/content/blog-posts/2019-07-08-extend-wordpress/wordpress-deployment.yaml\n```\n\nWait a few seconds for WordPress to start. You can check the status in the **Deployments** section.\n\nWhen the status of all deployments is `RUNNING`, navigate to [https://wordpress.1.2.3.4.xip.io]() replacing the `1.2.3.4` IP with the one for your cluster. Then complete the installation wizard. \n\n## Kyma plugin for WordPress\n\nBefore you install plugins, ensure that you have the proper configuration of Permalinks. Log into WordPress as an admin, go to **Settings** -> **Permalinks**, select the `Post name` option and save your changes.\nDownload the following plugins:\n- [Basic Auth](https://github.com/WP-API/Basic-Auth/archive/master.zip) - for more details go to this [GitHub repository](https://github.com/WP-API/Basic-Auth)\n- [Kyma Connector](https://github.com/kyma-incubator/wordpress-connector/archive/master.zip) - for more details go to this [GitHub repository](https://github.com/kyma-incubator/wordpress-connector)\nIn the left navigation, go to **Plugins** -> **Add New** -> **Upload Plugin**. Choose the Basic Auth and Kyma Connector plugins from your disk to install and activate them.\nGo to **Settings** -> **Kyma Connector**, uncheck the **Verify SSL** option (you need it because the default Kyma installation uses self-signed certificates), provide the username and password you created during the installation, and save your changes. \n\n![Kyma Connector](./kyma-connector.png)\n\n# Connect WordPress to Kyma\n\nIn this step you establish a trusted connection between the WordPress instance and your Kyma cluster, both hosted on the same Kubernetes cluster. You also register WordPress API and WordPress Events in the Service Catalog and enable both in a selected Namespace.\n\nIn the Kyma Console navigate back to the home page, go to **Applications**, and create a new Application called `wordpress`.\n\nOpen it and press **Connect Application**. Copy the connection token URL to the clipboard. Go to the Kyma Connector Settings in WordPress, paste the token URL in the **Kyma Connection** field, and press **Connect**. You should see the success message in WordPress and a new entry inside the **Provided Services & Events** section of the `wordpress` Application in Kyma.\n\n![Application](./application.png)\n\n## Diasable SSL for Kyma->WordPress\n\nWordPress installed in a cluster uses a self-signed SSL certificate. Kyma default settings don't allow for such a connection. You need to explicitly turn it on:\n\n  1. Edit the `wordpress-application-gateway` Deployment in the `kyma-integration` Namespace. Run:\n      ```\n      kubectl -n kyma-integration edit deployment wordpress-application-gateway\n      ```\n  2. Edit the Deployment in Vim. Select `i` to start editing.\n  3. Find the **skipVerify** parameter and change its value to `true`.\n  4. Press **ESC**, type `:wq`, and click **ENTER** to write and quit.\n\nOne command to do it:\n```bash\n# Update kyma installer image to 1.1.0\nkubectl -n kyma-integration \\\n  patch deployment wordpress-application-gateway --type=json \\\n  -p='[{\"op\": \"replace\", \"path\": \"/spec/template/spec/containers/0/args/6\", \"value\": \"--skipVerify=true\"}]'\n```\n>**CAUTION:** The command assumes that **skipVerify** is the argument with the index 6 (0-based).\n\n# Enable WordPress Events and APIs in the default Namespace\n\nThe Kyma Application connectivity can expose APIs and Events (Async API) of Applications in the Service Catalog. To show WordPress in the Service Catalog, first, you need to bind the Application to a selected Namespace. Go to **Applications**, select the `wordpress` Application, press **Create Binding** and select the `default` Namespace. Now go to the `default` Namespace and open the Catalog - you should see WordPress API in the **Services** tab. Open it and have a look at API console and Events specification. We will react on `comment.post.v1` event and interact with `/wp/v2/comments/{id}` API. To make them available in the `default` Namespace click the **Add once** button and create an instance of the WordPress Service Class. Behind the scenes, the Application Connector creates the Application Gateway (a kind of proxy) that forwards requests from bounded services or functions to the WordPress instance. \n\n![Add WordPress Instance](./add-wordpress-instance.png)\n\n# Write your code\nYou did the wiring, so let's write some code. In the `default` Namespace create a new lambda named `review` and paste the following code in the **Settings & Code** editor:\n``` javascript\nconst Sentiment = require('sentiment');\nconst sentiment = new Sentiment();\nconst axios = require(\"axios\");\n\nmodule.exports = {\n    main: async function (event, context) {\n        let status = \"hold\";\n        console.log(\"Event data: %s\",JSON.stringify(event.data));\n        let comment = await getComment(event.data.commentId);\n        console.log(\"Comment: %s\",comment.content.raw);\n        let result = sentiment.analyze(comment.content.raw);\n        console.log(\"Sentiment: %s\",JSON.stringify(result));\n        let score = result.comparative;\n        if (score>0.2) {\n            status = \"approved\"\n        } \n        updateComment(comment.id, status, comment.content.raw, score);\n    }\n};\n\nasync function getComment(id) {\n    let commentUrl = `${process.env.WP_GATEWAY_URL}/wp/v2/comments/${id}?context=edit`\n    let response = await axios.get(commentUrl);\n    return response.data;\n}\n\nasync function updateComment(id, status, comment, score) {\n    let commentUrl = `${process.env.WP_GATEWAY_URL}/wp/v2/comments/${id}`;\n    const update = await axios.post(commentUrl,{status:status, content:comment+\"\\n--\\nscore:\"+score});\n    return update;\n}\n```\n\nIn the **Dependencies** section, add:\n```json\n{\n  \"dependencies\": {\n    \"axios\": \"^0.19.0\",\n    \"sentiment\": \"^5.0.1\"\n  }\n}\n```\nPress **Select Function Trigger**, choose your function which is the `comment.post` Event, and save the function. The trigger is available because you have the WordPress service instance in the `default` Namespace. \n\n# Binding\n\nGo to **Instances** under the **Service Management**, open the WordPress instance in the **Services** tab. Click **Bind Application**, select `review` function, set the **Prefix namespace value** to `WP_`, and confirm.\n\n![Binding](./binding.png)\n\nYou can now open the `review` lambda again and check if there is a new entry in **Service Bindings** section with `WP_GATEWAY_URL` environment variable.\n\n\n# Test it\n\nGo to WordPress main site and open the **Hello World!** blog post. Add the following 2 comments under the blog post:\n- I love it!\n- I hate it!\nGo to the WordPress **Dashboard** and check the comments. You should see that both comments have a score footer with the following sentiment values:\n- `1` for a positive comment\n- `-1` for a negative comment\nThe negative comment is waiting for moderation.\n\n![Comments](./comments.png)\n\n# Explore the benefits\n\nYour code runs using Istio Service Mesh with network secured by mutual TLS. You can see the metrics of your functions, such as latency, responses, errors and memory usage, with one click on Grafana Dashboard. You can trace your requests using Jaeger. And you can scale your functions independently from WordPress.\n\n# Summary\nWhy should you try Kyma? If you start a new project on Kubernetes, you will get carefully selected and best tools from the Cloud Native Landscape, which are already configured and integrated. If you want to move only a part of your project to the cloud and you have to keep legacy applications around, Kyma will help you to build extensions for them using modern tools on top of Kubernetes.\nAlso when you start a new project with a goal that the final solution should be extendable and customizable, considering Kyma to address these challenges from day one would offer benefits. \nPlease remember that Kyma is an open-source project which is actively developed (~80 contributors and ~600 GitHub stars) with the support from such a big company as SAP. \n\n# Next steps\n\nIn the next blog post, I will show you how to use services from cloud providers using the Open Service Broker API. \n","excerpt":"Cloud-native application development is now a hot topic in the industry. Developers want to use modern languages, write microservices or even serverless functions. They expect high scalability with modern monitoring tools like Prometheus and Grafana. Kubernetes and CNCF landscape projects are no longer perceived as hype for early adopters. This is the mainstream now. If you start a new, green field project you are lucky - you can dive into the great variety of tools and frameworks and use them. But how to pick the right tools? At the moment of writing this post, there are 686 projects registered in the CNCF landscape. We also have the less lucky developers who still have to deal with applications designed when monoliths were cool. What about them? Can they benefit from cloud-native patterns? Yes, they can!","fields":{"slug":"/blog/2019/7/8/extend-wordpress","assetsPath":"/assets/blog-posts/2019-07-08-extend-wordpress/","date":"July 08, 2019","postInfo":{"fileName":"extend-wordpress","year":2019,"month":7,"day":8}},"frontmatter":{"title":"Build a cloud-native extension for WordPress","author":{"name":"Piotr Bochynski, Product Owner @Kyma"},"tags":["technology","tutorial"],"type":null,"releaseTag":null,"redirectFrom":["/blog/2019-07-08-extend-wordpress"]}},{"id":"8563db8c-49cd-5fa4-ab83-eafbcc5b04e8","rawMarkdownBody":"\nIt's about time to sail our ship to Istanbul and see all of the new features and tweaks that come with the 1.2 release. This time around we focused on streamlining the installation flow, providing a simpler way of testing lambda functions, giving more power and flexibility to Kyma Eventing, migrating to a new version of Istio, and providing even more useful documentation.\n\n<!-- overview -->\n\nThe highlights of Kyma 1.2 Istanbul include:\n\n- [Streamlined installation](#installation) - We enabled platform-agnostic local installation with the Kyma CLI, enabled Kyma installation through GCP Marketplace, and simplified all cluster installation flows.\n- [Testing lambda functions in the UI](#testing-lambda-functions-in-the-ui) - We added an option to test lambda functions through the Console UI.\n- [Migration to Istio 1.1.6](#service-mesh) - We migrated to a new, more secure and stable version of Istio.\n- [Migration to Istio in the Application Connector](#migration-to-istio) - We moved from NGINX Ingress to Istio in the Application Connector.\n- [Configuration for using different messaging middleware](#choose-and-configure-a-custom-messaging-middleware) - We added configuration that allows using different messaging middleware in Kyma Eventing.\n\nSee the overview of all changes in this release:\n\n- [Application Connector](#application-connector) - Migration to Istio, support for custom headers and query parameters in authentication requests\n- [Console](#console) - Testing lambda functions through the UI, more configuration options available at the moment of Namespace creation\n- [Installation](#installation) - Local installation with Kyma CLI, Kyma available trough GCP Marketplace, streamlined cluster installation flows\n- [Documentation](#documentation) - New configuration, troubleshooting, and Headless CMS metadata documents, tutorial for customizing the Documentation view in the Console UI, testing bundle with sample documentation\n- [Eventing](#eventing) - Choosing and configuring a custom messaging middleware, sending custom metadata with published Events, an example for triggering microservices with Events\n- [Observability](#observability) - Early version of Kiali added to Istio\n- [Service Mesh](#service-mesh) - Istio update to version 1.1.6\n\nRead about a known issue for [Observability](#known-issues).\n\n> **CAUTION:** Before you upgrade to Kyma 1.2, read the [Migration Guide](https://github.com/kyma-project/kyma/blob/release-1.2/docs/migration-guides/1.1-1.2.md) which describes necessary manual actions required by the Event Bus, the Asset Store, and the Application Connector.\n\n---\n\n## Application Connector\n\n### Migration to Istio\n\nFrom the very beginning of the Kyma project, the Application Connector has been exposed using the NGINX Ingress. After the recent changes in Istio 1.x which included support for client certificates, we decided to migrate to Istio as did the rest of Kyma components. We are proud to announce that the migration is complete and we are already benefiting from a number of advantages including easier maintenance and a smaller number of components in the implementation.\n\nRead [this](/docs/1.2/components/application-connector/#architecture-architecture) document to learn more about the role Istio plays in the Application Connector.\n\n### Custom headers and query parameters in authentication requests\n\nTo facilitate the integration of APIs that require sending additional headers and query parameters with every request to an external system, we allow the developers to provide a custom list of the headers and query parameters when registering an API in the Application Registry. The Proxy service reads this configuration and enriches each call from an API to an external service with the required items.\n\nRead [this](/docs/1.2/components/application-connector/#tutorials-register-a-secured-api-specify-custom-headers-and-query-parameters-for-authentication-requests) document to learn more.\n\n## Console\n\n### Testing lambda functions in the UI\n\nNow you can test your lambda functions directly in the Console UI. Use any of the Event samples available in your Namespace or any custom payload to dry–run a function before connecting it to your live system's business events.\n\n### More configuration options at the moment of Namespace creation\n\nUsers can now configure more of the important Namespace options when they create it using the UI. The available options include setting memory consumption limits and choosing whether Istio should handle all of the communication between Pods in the Namespace.\n\n## Installation\n\n### Kyma available on GCP Marketplace\n\nDeploying on GKE is now easier than ever as you can get a fully functional Kyma deployment with `http://xip.io/` straight from the GCP Marketplace. Follow [this link](https://console.cloud.google.com/marketplace/details/sap-public/kyma) to find Kyma on the Marketplace, read [this](/docs/1.2/root/kyma/#installation-install-kyma-on-a-cluster) document to get detailed installation instructions, and watch [this video](https://www.youtube.com/watch?v=hxVhQqI1B5A) for a detailed walkthrough. Enjoy!\n\n### Platform-agnostic local deployments with Kyma CLI\n\nOur very own [Kyma CLI](https://github.com/kyma-project/cli) graduated from the Incubator and became an integral part of Kyma with the 1.2 release. From now on you can use simple `kyma` commands to easily deploy Kyma on your local machine, no matter what OS you're running - all you have to do is install our proprietary CLI tool. The local installation flow is now updated to use the CLI and we are retiring the old installation approach that used custom scripts.\n\nTo experience the convenience the Kyma CLI brings to the table, follow [our documentation](/docs/1.2/root/kyma/#installation-install-kyma-locally) to install Kyma on your machine.\n\n### Simpler cluster installation\n\nThe existing cluster installation flows were significantly simplified. The `sed` commands and the cluster configuration template file are now gone in favor of a set of `kubectl` calls. Now you simply set up your cluster, apply the desired configuration with `kubectl`, and wait for the magic to happen. For more details, see the [installation documentation](/docs/1.2/root/kyma/#installation-installation).\n\n## Documentation\n\n### Configuration documents for components\n\nAfter preparing a set of generic configuration documents in the last release, this time around we focused on specific Kyma components. The idea was to create configuration documents that list all configurable parameters from the `values.yaml` file of each of the components' charts and sub-charts that you can configure with overrides. Not all components have their **Configuration** documents ready, but you can expect full coverage in the near future.\n\n### Troubleshooting guides\n\nAs we interact with the community, we take note of recurring issues and misunderstandings that affect different components. We decide to gather these cases under the **Troubleshooting** documentation type to help the users deal with the most common issues easily. The troubleshooting documents are now available for the [Service Mesh](/docs/1.2/components/service-mesh/#troubleshooting-troubleshooting) and the general [Kyma](/docs/1.2/root/kyma/#troubleshooting-troubleshooting-overview) topic.\n\n### Markdown documents in Headless CMS\n\nIf you've ever had any doubts regarding what the structure of a Markdown document processed by Headless CMS should look like, we come with a solution. See the [document](/docs/1.2/components/headless-cms/#details-markdown-documents) describing the required metadata and content of a Markdown file.\n\n### How to modify the Documentation view in the Console UI\n\nWe prepared a tutorial that shows how to adjust the Documentation view in the Console UI. Based on it, you create a new Prometheus documentation section that contains Concepts and Guides topics and a set of Markdown subdocuments. [Try it](/docs/1.2/components/headless-cms/#tutorial-add-new-documents-to-the-documentation-view-in-the-console-ui) on your own.\n\n### Testing bundle with sample documentation\n\nThe testing bundle is now enriched with [sample documentation](https://github.com/kyma-project/addons/tree/master/addons/testing-0.0.1/docs). There are examples of Markdown documents together with OpenAPI and AsyncAPI specifications. See the testing bundle for details on how different document types render in the Console UI.  \n\n\n## Eventing\n\n### Choose and configure a custom messaging middleware\n\nOut of the box, Kyma comes with NATS Streaming as the default messaging middleware. With this release, we're giving you the tools to choose your own messaging middleware that best fits your needs from the usage, volume, and costs perspective. The only requirement is that the middleware must have Knative eventing-based [ClusterChannelProvisioner](https://knative.dev/docs/eventing/channels/) available. Compatible solutions include Google PubSub, Kafka, and NATSS.\n\n### Sending custom metadata with published Events\n\nThe applications sending Events to Kyma can now send additional context or metadata by sending headers with the `ce-` prefix, for example, `ce-correlation-id`. These headers are delivered to the lambda function.\n\n### Example for triggering microservices with Events\n\nWe prepared a self-contained example that shows how to configure an Event trigger for a microservice deployed in Kyma. This is extremely useful for applications written in Java which want to use Events as a trigger.\n\n\n## Observability\n\n### Early integration of Kiali\n\nEarly integration of Kiali is available as part of Istio. To enable Kiali, ensure that the monitoring module is installed and set the **kiali.enabled** parameter to `true`. The Kiali UI will be accessible under the `kiali` subdomain. The early integration is based on static user security. To learn how to get the Kiali UI password, see [this](https://github.com/kyma-project/kyma/tree/master/resources/istio) document.\n\n### Known issues\n\nKiali is not accessible after installation when enabled as part of the Installer configuration. It should be accessible on Minikube at `https://kiali.kyma.local`.\nTo access it this way, use the workaround for now and add the `kiali` prefix to the **hosts** attribute in the `kiali-virtualservice` resource:\n```\nkubectl -n istio-system edit virtualservices kiali-virtualservice\n```\n```\nhosts:\n- kiali.kyma.local\n```\n\n## Service Mesh\n\n### Istio updated to 1.1.6\n\nThe new release comes with Istio updated to 1.1.6. Previously Kyma used version 1.1.0, but due to a security issue and problems with the Ingress Gateway, we moved to a newer version. The update makes the Service Mesh more secure and stable - the Ingress Gateway issues seen in the previous version that caused port configurations not being applied properly are now resolved.\n","excerpt":"It's about time to sail our ship to Istanbul and see all of the new features and tweaks that come with the 1.2 release. This time around we focused on streamlining the installation flow, providing a simpler way of testing lambda functions, giving more power and flexibility to Kyma Eventing, migrating to a new version of Istio, and providing even more useful documentation.","fields":{"slug":"/blog/2019/6/13/release-notes-12","assetsPath":"/assets/blog-posts/2019-06-13-release-notes-1.2/","date":"June 13, 2019","postInfo":{"fileName":"release-notes-12","year":2019,"month":6,"day":13}},"frontmatter":{"title":"Kyma 1.2 Istanbul","author":{"name":"Tomasz Papiernik, Technical Writer @Kyma"},"tags":["release-notes"],"type":"release","releaseTag":"1.2.0","redirectFrom":["/blog/release-notes-12"]}},{"id":"f2c2aac7-9f39-540d-b83e-81cc64f75fb0","rawMarkdownBody":"\nJust as we initially promised, the developers are working hard to deliver new features and improvements every four weeks. Our last release is already available for 3 weeks, which means that the next Kyma version will be available in about a week. This time around, the release gets its codename from a city with an incredibly rich history, one that bridges the gap (literally!) between the East and the West. Kyma 1.2 Istanbul has a very rich history of improvements and new features and continues to aid the users in bridging the gap between different pieces of software. What's in store for the 1.2 release? \n<!-- overview -->\n\nFirst, let's have a look at the new features. We received a lot of feedback about writing and testing lambdas in the Console UI. It is quite easy to copy and paste the code from the examples over to the UI, the developers complained that testing their own code requires more effort than that. They wanted an easy way to check how their functions work with the message data they will get from the triggering event. To help the developers check that, we will introduce a single UI view which allows to prepare a sample event payload based on the message schema, send it directly to a lambda function, and check the result. This new feature should significantly speed up the developers' feedback loop.\n\nAnother new feature we're working on is the possibility to make only the selected Service Classes of an Application registered in Kyma bindable. Let's say that your Application exposes many APIs with different permission levels, such as a view-only API and an admin API. With the new feature, the system administrator can decide what services and APIs are available in a given Namespace.\n\nInstallation is an area where we also plan to make several improvements. Our Kyma CLI graduated from Kyma Incubator and allows for a quick, simple, and platform-agnostic local installation of Kyma. Our local installation instructions are going to be updated to use this convenient tool. \n\nWe want to prepare better default configurations to limit the number of steps required to install Kyma. For example, we will remove `sed` commands from the installation manual. Our goal is to have a very streamlined installation process but at the same time keep the possibility to configure and adjust every tiny setting in Kyma components, which is made possible by our powerful Kyma operator - the Kyma Installer.\n\nAnother improvement for Kyma users working with Google Cloud Platform is a possibility to install Kyma directly from [GCP Marketplace](https://console.cloud.google.com/marketplace/details/sap-public/kyma) with just a few clicks. This cool feature is already available and allows you to install Kyma 1.1. Because of its limited configuration options, treat it more like a preview than a polished deployment option but also know that we're continuing our work on this topic.\n\nHere are some other things that will come in Kyma 1.2 Istanbul:\n- Defining limits and resource quotas when a Namespace is created through the UI.\n- Easily navigating to the external URL of your services exposed through API management.\n- Passing custom headers through eventing.\n- Configuration for replacing built-in NATS with external messaging middleware.\n\nYou can find all the items planned for the 1.2 release in our [Zenhub](https://app.zenhub.com/workspaces/kyma---all-repositories-5b6d5985084045741e744dea/reports/release?release=5cb59383709ee87123145468).\n\nKyma 1.2 Istanbul is scheduled for release on 13.06.2019. Keep an eye out for more Kyma news and updates on our blog. See you around! \n","excerpt":"Just as we initially promised, the developers are working hard to deliver new features and improvements every four weeks. Our last release is already available for 3 weeks, which means that the next Kyma version will be available in about a week. This time around, the release gets its codename from a city with an incredibly rich history, one that bridges the gap (literally!) between the East and the West. Kyma 1.2 Istanbul has a very rich history of improvements and new features and continues to aid the users in bridging the gap between different pieces of software. What's in store for the 1.2 release?","fields":{"slug":"/blog/2019/6/3/release-12-plan","assetsPath":"/assets/blog-posts/2019-06-03-release-1.2-plan/","date":"June 03, 2019","postInfo":{"fileName":"release-12-plan","year":2019,"month":6,"day":3}},"frontmatter":{"title":"Kyma 1.2 Istanbul scheduled for release on 13.06.2019","author":{"name":"Piotr Bochynski, Product Owner @Kyma"},"tags":["release"],"type":null,"releaseTag":null,"redirectFrom":["/blog/release-12-plan"]}},{"id":"082cc87f-9803-546a-a08c-4102706d71e8","rawMarkdownBody":"\nRecently, on our website, we released a new view called [Roadmap](https://kyma-project.io/roadmap/). Its main purpose is to raise the transparency of the project direction and enable features contribution.\n\n<!-- overview -->\n\n## Tough choice\n\nIt is not easy to choose the right open source tool. There are many different factors you need to take into account before you make the decision. Luckily, the Internet is full of ideas and suggestions on how to make that choice. For example, you can read the article [How to Choose the Best Open Source Software](https://towardsdatascience.com/how-to-choose-the-best-open-source-software-b1cbbe4f6398) to get some help.\n\n> Remember that the amount of commits, issues, and pull-requests (PRs) can be a signal of investment and commitment to a project.\n\nThese kind of articles are very helpful. When I started using open source projects as my dependencies, I quickly realized that not all of them are trustworthy and deserve investment. Unfortunately, these guides and articles always focus on me, on the person that performs research. It is always me who needs to do the review, search for information, check out contributors and review projects' backlog. This is relatively easy if you have to choose a small library for parsing `.yaml` files in a browser. Things get more complicated when you have to decide upon a solution on which you will run or extend your business applications. The size and complexity prevent you from good research. The number of PRs and issues clearly indicates a huge investment in the project, but you can only guess what will come next and how it will evolve. If you have to take a strategic decision, you need to know what the direction, vision and future development plans of a given solution are.\n\nWe wanted to improve in this area and make things easier for the Kyma community. We identified in Kyma different capabilities and shared our goal and vision for each of them. The capabilities have their own roadmaps which are in sync with one another and all together constitute an overview of what is going to happen in Kyma in the short and long term. We combined them all in one view called [Roadmap](https://kyma-project.io/roadmap/).\n\nThanks to this view you can clearly identify the areas of Kyma that are the most important for you, and see if the planned development goes in the direction you expect. If something is not the way you wanted, you can always share your opinion with us at our [Core SIG meetings](https://github.com/kyma-project/community/blob/master/collaboration/02-sig-core.md). Contact us especially if you notice that we are not fully transparent regarding a specific capability, and its roadmap is not properly maintained. Another way to make things better is to join us, and contribute.\n\n## Easier contribution\n\nBeing an open source user for a few years now, I noticed on many different channels that people want to start a contribution to a project, but they do not know what they could contribute. There is a common question: `I want to contribute to this project, what feature would be the most interesting for others?` This is yet another reason why we worked on this new view on our website. We don't want you to search and invent ideas for contribution. All you need is already there, in our Roadmap. You can just pick a feature that is planned for development, and go forward with a proposal and implementation. This way you know that you contribute to something that is important for Kyma and its future.\n","excerpt":"Recently, on our website, we released a new view called Roadmap. Its main purpose is to raise the transparency of the project direction and enable features contribution.","fields":{"slug":"/blog/2019/5/20/transparency-through-roadmap","assetsPath":"/assets/blog-posts/2019-05-20-transparency-through-roadmap/","date":"May 20, 2019","postInfo":{"fileName":"transparency-through-roadmap","year":2019,"month":5,"day":20}},"frontmatter":{"title":"Transparency and openness through a clear vision and roadmap","author":{"name":"Lukasz Gornicki, Community Manager and Core&Supporting Capability Owner"},"tags":["community"],"type":null,"releaseTag":null,"redirectFrom":null}},{"id":"c1edb43f-5587-5956-b39e-b9dfe4f013a6","rawMarkdownBody":"\nAfter the long-awaited 1.0 Gliwice release, we focused mainly on putting the polishing touches to the current setup, including improvements in the Console UI performance and usability, Asset Store and Service Catalog extensions, Application Operator optimization, and documentation-related tweaks. Still, we are proud to communicate a few new features we bring to you in 1.1 Helsinki. Read on to find out what has changed in Kyma since 1.0.\n\n<!-- overview -->\n\nThe highlights of Kyma 1.1 Helsinki include:\n\n- [Add-ons in the Catalog UI](#add-ons-in-the-catalog-ui) - We enabled a new way to share add-ons by combining the concepts of Service Catalog bundles with Helm charts.\n- [AWS Service Broker](#aws-service-broker-add-on) - We extended our third-party services by adding the AWS service offerings.\n- [Minio Gateway](#minio-gateway-mode) - We improved the Asset Store configuration to let you use Google Cloud Storage.\n- [Octopus](#octopus-in-kyma) - We introduced a new testing tool that replaced Helm tests.\n\nSee the overview of all changes in this release:\n\n- [Application Connector](#application-connector) - Application Operator optimization, OData support in documentation, new Event Service endpoint\n- [Console](#console) - Performance improvements, usability improvements\n- [Core and Supporting](#core-and-supporting) - Minio Gateway mode\n- [Documentation](#documentation) - Configuration and installation document improvements\n- [Eventing](#eventing) - Subscription CR status change, improved upgradability, new dashboards in Grafana\n- [Productivity](#productivity) - Octopus in Kyma\n- [Service Management](#service-management) - Add-ons in the Catalog UI, AWS Service Broker add-on, documentation support for add-ons, \"provision only once\" APIs and Events\n\nRead about a known issue for [Tracing](#known-issues).\n\n---\n\n## Application Connector\n\n### Application Operator optimization\n\nIn this release, we optimized the memory consumption for the Application Operator. The component is now much more stable and reliable, even under the high cluster load.\n\n### OData support in documentation\n\nYou can now read the updated Application Connector documentation that includes information on the supported APIs, including the support for [OData API registration](/docs/1.1/components/application-connector/#overview-overview-supported-apis).\n\n### New Event Service endpoint\n\nWe enriched the Event Service with the new `/{application}/v1/events/subscribed` endpoint that only returns information on the subscribed Events. This endpoint is perfect for your system optimization as the connected application no longer needs to send Events that are not used by any lambda or service. [Read more](/docs/1.1/components/application-connector/#api-event-service) about the endpoint and learn how you can use it to fetch Events.\n\n\n## Console\n\n### Performance improvements  \n\nAs a result of aggregating several calls into one, we reduced the initial loading time of the Console UI navigation.\n\n### Usability improvements\n\nWe added the `SYSTEM` badge to the system Namespaces. Thanks to it, you can easily distinguish them from the user-created ones on the Namespace overview page in the Console UI.\n\n![Namespace overview](./namespaces-overview.png)\n\n\n## Core and Supporting\n\n### Minio Gateway mode\n\nThe [Asset Store](/docs/1.1/components/asset-store) that ensures asset management in Kyma uses [Minio](https://min.io/) as a back-end solution. As stated in our documentation, we recommend that you use Minio in its Gateway mode for your production environment. This means you should use Minio as a gateway to Google Cloud Storage (GCS).\n\nIn this release, we focused on preparing an easy switch from the standalone mode to the Gateway mode by:\n- Making sure your data is seamlessly recreated after the switch.\n- Improving the stability of the Asset Store with Minio in the Gateway mode.\n- Providing clear documentation on how to [switch to GCS](/docs/1.1/components/asset-store/#tutorials-set-minio-to-the-google-cloud-storage-gateway-mode).\n- Integrating the Minio Gateway mode with our testing pipeline. This way, we can now test any new functionality against the Minio Gateway mode pointing to GCS.\n\n\n## Documentation\n\n### Configuration and installation document improvements\n\nIn 1.1, we focused on creating configuration documents and simplifying the existing installation documents.\n\nConfiguration improvements:\n- An [overview](/docs/1.1/root/kyma/#configuration-overview) document explaining what you can configure in Kyma and how you can do it before and after installation\n- Improved documents on selected [component installation](/docs/1.1/root/kyma/#configuration-custom-component-installation) and chart values [overrides](/docs/1.1/root/kyma/#configuration-helm-overrides-for-kyma-installation)\n- A [template](https://github.com/kyma-project/community/blob/master/guidelines/templates/resources/configuration.md) for the **Configuration** document type that provides technical details about configuration of a Kyma component's chart or sub-chart\n- A set of configuration documents for the [Asset Store](/docs/1.1/components/asset-store/#configuration-configuration) specifying the configurable parameters from the `values.yaml` charts and sub-charts that you can override. You can expect more of such documents for other Kyma components to come in the upcoming releases\n\nInstallation improvements:\n- A simplified [cluster installation](/docs/1.1/root/kyma/#installation-install-kyma-on-a-cluster) document explaining how you can quickly deploy Kyma on a cluster with a wildcard DNS provided by `xip.io`\n- A unified [local installation](/docs/1.1/root/kyma/#installation-install-kyma-locally) flow\n\n\n## Eventing\n\n### Subscription CR status change\n\nWe moved the status of a given resource from the `spec` section of the Subscription custom resource definition (CRD) to a sub-resource. This enables direct status interactions and recreating it without modifying the specification.\n\n### Improved upgradability\n\nWe added new tests for verifying the upgradability of Kyma Eventing. The tests ensure that a subscription created before an upgrade continues to work after the upgrade.\n\n### New dashboards in Grafana\n\nThere are two new dashboards available in Grafana:\n- **Ignored events** with Events for which there are no subscriptions\n- **Subscription details** to check if there are any issues with a given subscription\n\n> **CAUTION:** Currently, if the subscription name contains a dot (`.`), the dashboard charts will display the `NOT READY` status even if the subscription is `READY`.\n\n## Productivity\n\n### Octopus in Kyma\n\nAs part of productivity improvements in Kyma, we replaced Helm tests with the Octopus test runner. Kyma components now use Octopus as a testing framework to run tests defined as Docker images on a running cluster.\nRead more about [testing](/docs/1.1/root/kyma/#details-testing-kyma) in Kyma, [Octopus](https://github.com/kyma-incubator/octopus/blob/master/README.md) itself, and the benefits it brings to the Kyma testing process.\n\n\n## Service Management\n\n### Add-ons in the Catalog UI\n\nAiming to improve your user experience, we split the Catalog UI view into **Add-Ons** and **Services** tabs. This way, we separated the Helm Broker add-on configuration and installation inside the cluster from the third-party services. The Kyma cluster-wide integration UI also has a new **Add-ons Config** view where you can manage add-ons that are available in your Namespaced **Add-Ons** Catalog view. In the near future, we are also planning to rename bundles to add-ons.\n\n![Add-ons 1](./add-ons-1.png)\n\n![Add-ons 2](./add-ons-2.png)\n\n### AWS Service Broker add-on\n\nAs part of our constant efforts to improve your experience on third-party Service Brokers in Kyma, we extended our Service Catalog with Amazon offerings. The new [AWS Service Broker](/docs/1.1/components/service-catalog/#service-brokers-aws-service-broker) is available for you as an add-on, extending the existing GCP and Azure Service Brokers add-on family.\n\n### Documentation support for add-ons\n\nThe Helm Broker creates Service Class documentation from an add-on which appears in the **Add-Ons** Catalog UI view. [Read](https://kyma-project.io/docs/1.1/components/helm-broker#details-create-a-bundle-docs-directory) how to add documentation to your add-on. If your add-on extends the Service Catalog UI, [read](/docs/1.1/components/helm-broker#details-service-classes-documentation-provided-by-bundles) how to provide documentation for those new Service Classes.\n\n### \"Provision only once\" APIs and Events\n\nAPIs and Events of the Application Broker Service Classes now have a new \"provision only once\" feature that shows they are already available in a given Namespace.\n\n![Provision only once](./provision-only-once.png)\n\n\n## Tracing\n\n### Known issues\n\nBy default, the trace sampling rate for Istio is configured to 1%. With that rate, only a small ratio of all requests will be available in Jaeger for the trace analysis. We are planning to optimize that setting in next releases, including recommendations for specific usage scenarios.\nAs a workaround, adjust the setting manually using the official [Istio documentation](https://istio.io/docs/tasks/telemetry/distributed-tracing/overview/) if you require a higher sampling rate.\n","excerpt":"After the long-awaited 1.0 Gliwice release, we focused mainly on putting the polishing touches to the current setup, including improvements in the Console UI performance and usability, Asset Store and Service Catalog extensions, Application Operator optimization, and documentation-related tweaks. Still, we are proud to communicate a few new features we bring to you in 1.1 Helsinki. Read on to find out what has changed in Kyma since 1.0.","fields":{"slug":"/blog/2019/5/17/release-notes-11","assetsPath":"/assets/blog-posts/2019-05-17-release-notes-1.1/","date":"May 17, 2019","postInfo":{"fileName":"release-notes-11","year":2019,"month":5,"day":17}},"frontmatter":{"title":"Kyma 1.1 Helsinki","author":{"name":"Karolina Zydek, Technical Writer @Kyma"},"tags":["release-notes"],"type":"release","releaseTag":"1.1.0","redirectFrom":["/blog/release-notes-11"]}},{"id":"f646458c-a282-545f-8839-e3314d25cf82","rawMarkdownBody":"\nThe 1.0 release may not be abundant in new features, but it surely adds value to your everyday Kyma experience. We have put a lot of effort in securing all the communication inside the Kyma cluster to make Kyma even more stable and secure. These improvements, along with the resolved issues, will make the development even smoother and more enjoyable.\n\n<!-- overview -->\n\nSee the overview of all changes in this release:\n\n- [Logging](#logging) - Logging solution based on Loki\n- [Service Mesh](#service-mesh) - Mutual TLS enabled by default \n\n## Logging\n\n### Loki bundled and enabled \n\n[Loki](https://github.com/grafana/loki), a lightweight Prometheus-like log management system, is now the central logging solution. It is fully integrated with the Kyma Console and the bundled Grafana. \n \n## Service Mesh\n\n### Mutual TLS enabled by default\n\nStarting from this release, all communication between services is handled by Istio using mutual TLS, which greatly increases the security of implementations built on Kyma. As this feature is connected to the automatic sidecar injection, developers do not need to apply any additional configuration to enable mTLS. Note that you can easily disable mTLS on the Namespace or Service level. ","excerpt":"The 1.0 release may not be abundant in new features, but it surely adds value to your everyday Kyma experience. We have put a lot of effort in securing all the communication inside the Kyma cluster to make Kyma even more stable and secure. These improvements, along with the resolved issues, will make the development even smoother and more enjoyable.","fields":{"slug":"/blog/2019/4/25/release-notes-10","assetsPath":"/assets/blog-posts/2019-04-25-release-notes-1.0/","date":"April 25, 2019","postInfo":{"fileName":"release-notes-10","year":2019,"month":4,"day":25}},"frontmatter":{"title":"Kyma 1.0 Gliwice","author":{"name":"Barbara Szwarc, Technical Writer @Kyma"},"tags":["release-notes"],"type":"release","releaseTag":"1.0.0","redirectFrom":["/blog/release-notes-10"]}},{"id":"21896582-b77f-5cf8-ab48-ca4012089ec5","rawMarkdownBody":"\nExtra! Extra! Read all about it! With the 1.0 Gliwice release, we have successfully reached our first big release milestone in Kyma. We realize that some of you might be confused and ask \"Why Gliwice?\" or \"Where even is that place?\" A quick [Wikipedia search](https://en.wikipedia.org/wiki/Gliwice) reveals that Gliwice is a Polish city situated in the southern part of the country, in the Upper Silesia. Founded in the 13th century, it has a rich history, a beautiful old town, and a river running right through its heart. From the software point of view, Gliwice is the home of the SAP Labs office which has most of the developers working on Kyma. Now that the naming conundrum is solved, let's dive into the details of our first production release.\n\n<!-- overview -->\n\nThe 1.0 release is all about security and stability. We invested a lot of time and energy in securing all communication in the Kyma cluster and finally we are able to turn on mutual TLS by default. This is something we promised to deliver in the previous release, but in the course of implementation we encountered more problems than we anticipated. Another important feature that we had to postpone and we're releasing with the 1.0 release is the integration with Grafana Loki. We didn't manage to implement it earlier because of several incompatible changes in log directories introduced in Kubernetes 1.14 but already applied in the Google Kubernetes Engine. See [this issue](https://github.com/grafana/loki/issues/393) for more details. These are the highlights of the Gliwice release. \n\nOur first production-ready version of Kyma will be released next week, around 25.04 and the first [release candidate](https://github.com/kyma-project/kyma/releases/tag/1.0.0-rc1) is already out!\n\nKyma is a dynamic project and we don't want to slow down after giving you a proper production release. Just the opposite! We already started preparation for the next release. Have a look at the new and exciting stuff that's going to come in 1.1 Helsinki:\n\n- Addon Catalog - we will enable and promote a new way to share addons by combining the concepts of Service Catalog bundles with Helm charts. Add-ons can contain services, lambdas, and other Kubernetes objects along with the documentation and provisioning UI.\n- AWS Broker - We already have brokers for GCP and Azure services in Kyma. Adding AWS to the roster will make our service consumption offering more complete.\n- Asset Store configuration will utilize Google Cloud Storage.\n- Kiali integration - we will add the alpha version of this visualization tool for the Istio Service Mesh - it will require enabling a feature toggle.\n- Octopus - our new testing tool will replace Helm tests. Retries and parallel execution for tests will speed up Kyma development.\n- Performance tests infrastructure - we will track how code changes influence the throughput and latency of key components and we will tweak Kyma cluster configuration to give you settings suitable for the production environment.\n\nYou can find all the items planned for the 1.1 release in our [Zenhub](https://app.zenhub.com/workspaces/kyma---all-repositories-5b6d5985084045741e744dea/reports/release?release=5c5aae9ddcf5235c1876a4f2).\n\nKyma 1.1 Helsinki is scheduled for release on 13.05.2019, and 1.0 Gliwice is going to be available very soon. Keep an eye out for more Kyma news and updates on our blog. See you around! \n","excerpt":"Extra! Extra! Read all about it! With the 1.0 Gliwice release, we have successfully reached our first big release milestone in Kyma. We realize that some of you might be confused and ask \"Why Gliwice?\" or \"Where even is that place?\" A quick Wikipedia search reveals that Gliwice is a Polish city situated in the southern part of the country, in the Upper Silesia. Founded in the 13th century, it has a rich history, a beautiful old town, and a river running right through its heart. From the software point of view, Gliwice is the home of the SAP Labs office which has most of the developers working on Kyma. Now that the naming conundrum is solved, let's dive into the details of our first production release.","fields":{"slug":"/blog/2019/4/18/release-10-plan","assetsPath":"/assets/blog-posts/2019-04-18-release-1.0-plan/","date":"April 18, 2019","postInfo":{"fileName":"release-10-plan","year":2019,"month":4,"day":18}},"frontmatter":{"title":"New Kyma Releases: 1.0 Gliwice and 1.1 Helsinki are coming!","author":{"name":"Piotr Bochynski, Product Owner @Kyma"},"tags":["release"],"type":null,"releaseTag":null,"redirectFrom":["/blog/release-10-plan"]}},{"id":"9d20dfa9-fa04-53ac-8d31-e4214dc280fb","rawMarkdownBody":"\nThe 0.9 release comes with many updates and improvements, as well as some brand new features that make the Kyma experience even smoother. The Kyma-Knative integration has reached its peak and from this release, Knative Eventing is the default eventing mechanism. You can now install Kyma on GKE and AKS clusters using the default DNS solution provided by `xip.io`. Among many updates and improvements, we developed a new testing framework and updated the entire Monitoring stack. Last but not least, we introduced a brand new component for storing and managing content - the Headless CMS.\n\n<!-- overview -->\n\nThe highlights of Kyma 0.9 Florence include:\n\n- [Knative-based eventing by default](#kyma-with-knative-eventing) - The eventing mechanism is now based on Knative by default.\n- [Xip.io wildcard as the default DNS solution](#installation) - We integrated the `xip.io` wildcard DNS as the default DNS solution.\n- [Headless CMS component introduced for the Console UI](#headless-cms) - We introduced the Headless CMS component that allows you to store and manage content, and expose it through an API.\n- [Updated Monitoring stack version](#monitoring-stack-version-update) - We updated the entire Monitoring stack.\n- [Improved upgrade process](#test-runner-for-the-kyma-upgrade) - We developed a testing framework that automates checking the state of Kyma components after the upgrade.\n\n\nSee the overview of all changes in this release:\n\n- [Application Connector](#application-connector) - Connector Service enhancements and extensions\n- [Console](#console) - Console views that display documentation use the new Headless CMS\n- [Core and Supporting](#core-and-supporting) - Kyma Headless CMS as the default solution for handling documentation\n- [Eventing](#eventing) - Knative Eventing enabled by default, improved security, alerting and monitoring added\n- [Installation](#installation) - `Xip.io` wildcard as the default DNS solution, test runner for the Kyma upgrade\n- [Monitoring](#monitoring) - Monitoring stack upgraded to the latest version\n- [Security](#security) - TLS in Tiller, external bundles repositories with TLS in the Helm Broker, Istio with mutual TLS for the Service Catalog and all Service Brokers\n- [Service Mesh](#service-mesh) - Upgrade to Istio 1.1\n\n---\n\n## Application Connector\n\n> **CAUTION:** To ensure the persistence of API services specifications, run the migration script to move successfully from v0.8 to v0.9. Read the [Migration Guide](https://github.com/kyma-project/kyma/blob/release-0.9/docs/migration-guides/0.8-0.9.md) for details.\n\n### Application Registry API can fetch generated client certificates\n\nWe extended the Application Registry API with the possibility to fetch the generated client certificates. As soon as you register an API secured with the client certificate verification as a security mechanism, you can read this certificate with our API. Read [this](https://kyma-project.io/docs/0.9/components/application-connector/#tutorials-register-a-secured-api) document for more information.\n\n### Apply details for the tenant and group name\n\nWe extended the TokenRequest functionality and now you can apply details for the tenant name and group name. It allows you to easily manage the token generation process for pairing applications in the central Connector Service. For more details, read [this](https://kyma-project.io/docs/0.9/components/application-connector#custom-resource-token-request) document.\n\n### Read about the Root CA rotation procedure\n\nWe updated our documentation with the description of the [Root CA rotation procedure](https://kyma-project.io/docs/0.9/components/application-connector/#tutorials-rotate-the-root-ca-certificate-and-key).\n\n### Acceptance tests for the Gateway Service\n\nWe enhanced the Gateway Service with the extended set of acceptance tests, which increases our confidence in the stability and performance of the component.\n\n### Headers management\n\nWe changed the Application Gateway proxy functionality and now the unnecessary headers, such as `X-Forwarded-For`, are removed while making calls to external solutions. For the full list of removed headers, read [this](https://kyma-project.io/docs/0.9/components/application-connector/#architecture-application-gateway-handling-of-headers) document.\n\n\n## Console\n\n### Documentation UI integrated with Headless CMS\n\nThe Documentation UI, which you can access in the Console UI, is now integrated with the Headless CMS. This means you can extend the Documentation view, the one you see after clicking the **?** icon, with your custom documentation topics as long as you have your docs written in Markdown and extended with additional metadata. The code snippet below is an example of a ClusterDocsTopic custom resource that will extend the Documentation UI navigation with a new element called **Prometheus** under a **Components** heading. After clicking **Prometheus**, you will see the official Prometheus documentation.\n\n```yaml\ncat <<EOF | kubectl apply -f -\napiVersion: cms.kyma-project.io/v1alpha1\nkind: ClusterDocsTopic\nmetadata:\n  labels:\n    cms.kyma-project.io/view-context: docs-ui\n    cms.kyma-project.io/group-name: components\n    cms.kyma-project.io/order: \"2\"\n  name: prometheus\nspec:\n  displayName: \"Prometheus\"\n  description: \"Some docs about Prometheus concepts\"\n  sources:\n    - type: markdown\n      name: docs\n      mode: package\n      url: https://github.com/prometheus/docs/archive/master.zip\n      filter: content/docs/concepts\nEOF\n```\n\n### Service Catalog related views integrated with Headless CMS\n\nThe Service Catalog-related views now read documentation provided with the new Headless CMS. This means that you can easily provide documentation and specifications for any service that you want to share through the Service Catalog. See the example DocsTopic custom resource for artificial Service Class that exposes Slack APIs:\n\n```yaml\napiVersion: cms.kyma-project.io/v1alpha1\nkind: DocsTopic\nmetadata:\n  name: {$SERVICE_CLASS_ID}\n  labels:\n    cms.kyma-project.io/view-context: service-catalog\nspec:\n  displayName: Slack\n  description: \"Slack documentation\"\n  sources:\n    - type: markdown\n      name: markdown-doc\n      mode: single\n      url: https://raw.githubusercontent.com/slackapi/slack-api-specs/master/README.md\n    - type: asyncapi\n      name: events-api\n      mode: single\n      url: https://raw.githubusercontent.com/slackapi/slack-api-specs/master/events-api/slack_events_api_async_v1.json\n    - type: openapi\n      name: openapi-swagger\n      mode: single\n      url: https://raw.githubusercontent.com/slackapi/slack-api-specs/master/web-api/slack_web_openapi_v2.json\n```\n\n## Core and Supporting\n\n### Headless CMS\n\nIn Kyma, we value the content-as-code principle. It means that documentation is treated the same as code, as in the end, it is not much different. We decided to go one step further. If content is like code, why not deploy it into the Kubernetes cluster as code as well? If you can easily deploy a service using the Deployment resource, you can do the same with documentation. This is what we implemented - the Headless CMS, based on Kubernetes Custom Resource Definitions, that uses our other component, the [Asset Store](https://kyma-project.io/docs/0.9/components/asset-store), for storage.\n\nThe Headless CMS itself does not yet deliver any customizable UI interface that could be used to publish a standalone documentation portal. Nevertheless, we already use it in the Console UI. For more details, read the Headless CMS [documentation](https://kyma-project.io/docs/0.9/components/headless-cms).\n\n### Asset Store supports a webhook service that can enhance the status of the CR with additional metadata for each file\n\nYou can now extend the Asset Store status sub-resource with additional metadata information for each file created by the controller. To do so, create a separate service that implements REST API and accepts `multipart/form-data`. One of the use cases for such a service is to extract the front matter metadata provided in any file of the `yaml` format.\nSee the example AssetStore resource that contains information about the status modification webhook:\n\n```yaml\napiVersion: assetstore.kyma-project.io/v1alpha2\nkind: Asset\nmetadata:\n  labels:\n    controller-tools.k8s.io: \"1.0\"\n  name: asset-sample\n  namespace: default\nspec:\n  bucketRef:\n    name: test-sample\n  source:\n    url: https://github.com/kyma-project/kyma/archive/0.8.1.zip\n    filter: /docs/service-catalog/docs/\n    mode: package\n    metadataWebhookService:\n    - name: assetstore-asset-metadata-service\n      namespace: kyma-system\n      endpoint: /v1/extract\n      filter: \\.md$\n```\n\nTo learn more about webhook services, read [this](https://kyma-project.io/docs/0.9/components/asset-store/#custom-resource-asset-validation-and-mutation-webhook-services) document.\n\n### Asset Store stack enhanced with a default service that can extract metadata from any file\n\nWith the support of the new metadata webhook, we added a default service to the Asset Store domain. You can use it to extract the front matter metadata provided in any file of the `yaml` format. We already use this service in the Headless CMS component. For more details, read [this](https://kyma-project.io/docs/0.9/components/asset-store/#details-asset-metadata-service) document.\n\n\n## Eventing\n\n### Kyma with Knative Eventing\n\nKyma now uses Knative Eventing backed by NATS Streaming by default. This is a big first step towards leveraging Knative Eventing capabilities in the upcoming releases.\n\n### Improved security\n\nAccess to NATS Streaming is now restricted only to applications that store and read Events.\n\n### Alerting and monitoring added\n\nWe added alerting and monitoring for eventing backing services.\n\n\n## Installation\n\n### Xip.io wildcard as the default DNS solution\n\nThe wildcard DNS provided by `xip.io` is integrated as the default DNS solution, which means you can now install Kyma on GKE and AKS clusters and create a playground environment even easier. Simply start the installation on your cluster and don't worry about owning a domain or configuring your cluster in a specific way. If you want to spin up a production-ready cluster, the process doesn't change. When you provide your own domain and TLS certificates, the Installer uses them instead of these provided by `xip.io`. Additionally, all scenarios support Application Connectivity.\n\n### Test runner for the Kyma upgrade\n\nWe created a test runner and a place for end-to-end upgrade tests executed by [Kyma upgrade plan on CI](https://status.build.kyma-project.io/?job=post-master-kyma-gke-upgrade). The framework allows you to prepare the data and run tests against the prepared data. For more information on end-to-end upgrade tests, read [this](https://github.com/kyma-project/kyma/tree/release-0.9/tests/end-to-end/upgrade) document.\n\n\n## Monitoring\n\n### Monitoring Stack version update\n\nWe upgraded the entire Monitoring stack based on the Prometheus operator to the latest version. The upgraded components are Alertmanager v0.16.1, Prometheus Operator v0.29.0, Prometheus v2.7.1, and Grafana v6.0.1.\n\n\n## Security\n\n### TLS in Tiller\n\nFrom this release, communication with Tiller requires a TLS certificate. For developers who install Kyma locally using Minikube, the start-up scripts automatically set certificates for Helm. However, from now on it is mandatory to add the `--tls` flag to every Helm command.\n\n### Helm Broker enforces TLS for external bundles repositories\n\nFrom now on, on your non-local clusters, you can use only servers with TLS enabled. All incorrect or unsecured URLs will be omitted. You can use unsecured URLs only on your local cluster. For more information, read [this](https://kyma-project.io/docs/0.9/components/helm-broker/#configuration-configuration-configuration-rules) document.\n\n### Istio with mutual TLS for the Service Catalog and Service Brokers\n\nWe introduced Istio with mutual TLS for the Service Catalog and for all Service Brokers (the Helm Broker, Application Broker, and Azure Broker).\n\n\n## Service Mesh\n\n### Istio version update\n\nKyma now uses Istio version 1.1.\n","excerpt":"The 0.9 release comes with many updates and improvements, as well as some brand new features that make the Kyma experience even smoother. The Kyma-Knative integration has reached its peak and from this release, Knative Eventing is the default eventing mechanism. You can now install Kyma on GKE and AKS clusters using the default DNS solution provided by xip.io. Among many updates and improvements, we developed a new testing framework and updated the entire Monitoring stack. Last but not least, we introduced a brand new component for storing and managing content - the Headless CMS.","fields":{"slug":"/blog/2019/4/8/release-notes-09","assetsPath":"/assets/blog-posts/2019-04-08-release-notes-0.9/","date":"April 08, 2019","postInfo":{"fileName":"release-notes-09","year":2019,"month":4,"day":8}},"frontmatter":{"title":"Kyma 0.9 Florence","author":{"name":"Klaudia Grzondziel, Technical Writer @Kyma"},"tags":["release-notes"],"type":"release","releaseTag":"0.9.0","redirectFrom":["/blog/release-notes-09"]}},{"id":"b320a6af-10bd-5e0c-a8c1-b90a2260dfea","rawMarkdownBody":"\nThe Knative Working Group (WG) focused on bringing together the worlds of Kyma and Knative closed (not so) recently. After two months \nof hard work, the group achieved all of its goals, not without cutting the initial scope, though. \n\n<!-- overview -->\n\nWhen we created this WG, we wanted to focus on these three goals:\n\n * Installing Kyma alongside Knative on the same cluster\n * Implementing the Kyma Event Bus using Knative eventing under the hood\n * Implementing Kyma Serverless with Knative serving instead of Kubeless\n \nAs the scopes of releases 0.6, 0.7, and 0.8 got established, we had to limit the goals of the WG and drop the Serverless-related plans.\n\nAside from this adjustment, the WG met the expectations and delivered the rest of the scope. Thanks to that, starting with release 0.8 you can have Kyma and Knative on the same Kubernetes cluster and watch both of them flourish. Moreover, in addition to the old \nimplementation Kyma Event Bus can now run on the NATS Streaming Provisioner which, by the way, is a Kyma contribution to \nKnative.\n\nWas this an easy ride? Not at all. We had to make both frameworks work on one cluster with a single Istio instance. Both Kyma and Knative make extensive use of Istio and provide their own customizations. After we made them both running, we still had a long way to go. \nThe WG had to reimplement almost all of the Event Bus without any other Kyma component noticing that change. \n\nDespite the challenges, working in the WG was a time of learning for all of the members. We had to understand what's going on under the hood of Knative, which turned some of us into active members of the Knative community. We learned that even the most carefully planned scope may change and that we need to cope with that. Finally, we felt the pain of integration of two rapidly evolving products on our own skin.\n\nDuring the two months of its work, the WG Knative laid solid foundations for the Kyma-Knative integration. Now we are looking for new ways to\nutilize it and make the fusion even more effective.\n","excerpt":"The Knative Working Group (WG) focused on bringing together the worlds of Kyma and Knative closed (not so) recently. After two months \nof hard work, the group achieved all of its goals, not without cutting the initial scope, though.","fields":{"slug":"/blog/2019/3/27/wg-knative-closure","assetsPath":"/assets/blog-posts/2019-03-27-wg-knative-closure/","date":"March 27, 2019","postInfo":{"fileName":"wg-knative-closure","year":2019,"month":3,"day":27}},"frontmatter":{"title":"Knative Working Group closed","author":{"name":"Szymon Janota, WG Knative Leader @Kyma"},"tags":["kyma","knative","wg"],"type":null,"releaseTag":null,"redirectFrom":["/blog/wg-knative-closed"]}},{"id":"d6c3b00a-2e17-5881-9b7c-48c0d5b7b96b","rawMarkdownBody":"\nNext destination? Florence! Time to pack our bags and prepare to leave Edmonton and fly all the way to Tuscany for the next Kyma release - **0.9 Florence**. What's in store for this Italian-themed release?\n\n<!-- overview -->\n\nFirst of all - Knative. We know, it doesn't really sound Italian, but it's really important for Kyma. Starting with this release, the eventing mechanism is going to be based on Knative by default. Kyma will still ship with NATS, but switching to Knative opens a world of new possibilities and will allow us to support other messaging systems, such as Google PubSub, in the future. \n\nWe're constantly improving monitoring in Kyma, and this release we focus on adding support for configurable monitoring and alerting for all Kyma components. We're updating Grafana and Prometheus to their latest versions and our new logging solution, Loki, will be exposed in Grafana and easily accessible through the Console UI. \n\nIstio 1.1 release candidate is now available which allows us to start implementing several crucial improvements and simplify our network setup. First of all, we will be able to retire the Nginx Ingress Controller from serving our Application Connectivity endpoints. The new version of Istio will also allow to have a single LoadBalancer IP for all components, and most importantly a much simpler configuration for deployments that use our dynamic DNS solution (xip.io) - you will be able to provision a cluster without providing any additional parameters such as domain names, certificates, IP addresses, and other. \n\nItaly is known for its love for art and beauty. The 0.9 release doesn't ignore that and improves on the current UI, Michelangelo style: \n  - All UI views will be optimized for mobile devices. \n  - Modal micro-frontends will enable better component reusability. \n  - For rendering documentation, the Console UI will start using the Headless CMS component that is based on Asset Store - a proprietary, Kubernetes-native solution for content storage, serving markdown documentation and API specifications like AsyncAPI, OpenAPI, and OData. \n\nSimilarly to previous releases, we're working hard on increasing the overall security of Kyma. Under the Italian sun we will focus on these topics:\n  - Enabling Mutual TLS by default \n  - Making Tiller accessible only with the client certificate from certain components, such as the Installer or brokers\n  - Making Helm Broker enforce TLS for external Bundles Repositories\n  - Enabling client authentication for communication between NATS Streaming and Knative NATS CCP\n  - Enabling client certificate rotation and revocation in the Application Connector\n\nWith the introduction of the **kyma-developer** role in the last release, we started working on new documentation describing default roles in Kyma and how to use them to secure access to Kubernetes resources for administrators and developers. Don't worry - even though we're visiting Italy this time around, we're going to write our documentation in English. \n\nLast, but not least, we plan to work more on the quality and stability of backup, recovery and upgrade processes. We developed a test framework that automates checking the state of Kyma components after an upgrade or disaster recovery. In this release, we want to add more use cases that will be verified by such tests.\n\nYou can find all the items planned for the 0.9 release in our [Zenhub](https://app.zenhub.com/workspaces/kyma---all-repositories-5b6d5985084045741e744dea/reports/release?release=5c5aae9ddcf5235c1876a4f2).\n\nKyma 0.9 Florence is scheduled for release on 08.04.2019. Keep an eye out for more Kyma news and updates on our blog. See you around! Ciao tutti!\n","excerpt":"Next destination? Florence! Time to pack our bags and prepare to leave Edmonton and fly all the way to Tuscany for the next Kyma release - 0.9 Florence. What's in store for this Italian-themed release?","fields":{"slug":"/blog/2019/3/15/release-09-plan","assetsPath":"/assets/blog-posts/2019-03-15-release-0.9-plan/","date":"March 15, 2019","postInfo":{"fileName":"release-09-plan","year":2019,"month":3,"day":15}},"frontmatter":{"title":"Kyma 0.9 Florence scheduled for release on 08.04.2019","author":{"name":"Piotr Bochynski, Product Owner @Kyma"},"tags":["release"],"type":null,"releaseTag":null,"redirectFrom":["/blog/release-09-plan"]}},{"id":"2a563283-3622-5a52-b069-c498187c86c2","rawMarkdownBody":"\nThe 0.8 release is packed with new features and improvements that bring your experience to a new level. The Kyma-Knative integration continues, making it now possible to both publish and consume Events using Knative Eventing. You can now back up a Kyma cluster manually or schedule periodic backups. The Minikube version constraint is removed, allowing you to use any compatible Minikube version. The Application Connector got even more powerful with certificate signing, renewal, and revocation, as well as a brand new information endpoint. Other significant improvements include replacing OK Log with Grafana Loki, switching all Console views to SAP Fiori Fundamentals, and the introduction of the **kyma-developer** role.\n\n<!-- overview -->\n\nThe highlights of Kyma 0.8 Edmonton include:\n\n- [Consuming Events with Knative](#consuming-events-served-by-knative-eventing) - We enabled Event consumption using Knative Eventing.\n- [Backup](#backup-and-restore-feature-added) - We introduced a backup and restore feature to Kyma.\n- [Removing Minikube constraint](#removed-the-minikube-version-constraint) - We removed the Minikube version constraint that forced users to use the same version as Kyma sources.\n- [Information endpoint](#information-endpoint) and [certificate management](#certificate-management) make the Application Connector even more powerful.\n- [Replacing OK Log with Loki](#ok-log-replaced-with-loki) - We switched our old logging solution to Loki, which is lightweight, actively maintained, and integrated with Grafana.\n- [Adding a new kyma-developer role](#kyma-developer-role) - We added a new **kyma-developer** role which is suited for developers working with Kyma clusters.\n- [All Console views using SAP Fiori](#sap-fiori-fundamentals) - All views in the Console now use SAP Fiori Fundamentals or one of its component libraries, [`fundamental-ngx`](https://github.com/SAP/fundamental-ngx) or [`fundamental-react`](https://github.com/SAP/fundamental-react).\n\nSee the overview of all changes in this release:\n\n- [Application Connector](#application-connector) - Information endpoint, certificate signing, certificate renewal, certificate revocation, Proxy Service renaming\n- [Asset Store](#asset-store) - New cluster-wide resources added, package filtering, Minio monitoring\n- [Backup and Restore](#backup-and-restore) - Backup and restore feature added, E2E tests for backup and restore\n- [Console](#console) - All views use SAP Fiori Fundamentals, support for system Namespaces, creating bindings for users, OData spec rendering and \"provision only once\" classes in the Catalog view\n- [Eventing](#eventing) - Consuming Events served by Knative Eventing\n- [Installation](#installation) - Removed the Minikube version constraint, Kubernetes upgraded to 1.12\n- [Logging](#logging) - Replaced OK Log with Loki\n- [Security](#security) - New **kyma-developer** role, shorter ID token TTL, support for the kubectl `exec` command\n- [Serverless](#serverless) - Logging of function's source code before execution\n- [Service Catalog](#service-catalog) - Defining the URLs of the repositories that hold your bundles in the Helm Broker at runtime\n- [kyma-project.io](#kyma-project-io) - Backend refactoring, bugfixes, new tab layout, information panels, new external link icon\n\n---\n\n## Application Connector\n\n### Information endpoint\n\nThe new `GetInfo` endpoint returns information about the cluster. Use it to get information about important cluster endpoints, such as the Event Service URL. The new endpoint improves on the previous functionality which provided this information along with the certification requirements.\n\n### Certificate management\n\nWe added new functionalities centered around certificate management, such as signing certificates for Applications and Kyma clusters, [renewing certificates](/docs/0.8/components/application-connector/#tutorials-renew-the-client-certificate), and [certificate revocation](/docs/0.8/components/application-connector/#tutorials-revoke-the-client-certificate).\n\n### Proxy Service renaming\n\nWe renamed the Proxy Service to Application Gateway.\n\n### Known issues\n\nIf you upgrade Kyma 0.7 to version 0.8, you must manually update the IP address of the Application Connector Ingress Controller, as well as selectors on all services that exist in your cluster. If you experience any issues or you need help upgrading to Kyma 0.8, reach out to the [\"application-connector\" Slack channel](https://kyma-community.slack.com/messages/CD0K2NSQZ) to get direct support from the community.\n\n\n## Asset Store\n\n### New cluster-wide resources added\n\nWe added two new cluster-wide resources, ClusterAsset and ClusterBucket. These resources allow you to fully use the Asset Store and build solutions using it. Read [this document](/docs/0.8/components/asset-store/#custom-resource-clusterasset) for more information.\n\n### Package filtering\n\nAssets now allow you to specify which folders should the Asset Store process using a regex expression. This feature adds a lot of flexibility and allows you to have packages that contain multiple files and directories, and use only the items that are relevant in a given scenario, without the need to create more packages.\n\n### Upload service\n\nThe newly introduced upload service enables easy integration for components that dynamically create and publish packages. By default, the service is configured to be accessible only from within the cluster. You can use the Upload Service to temporarily publish files that need to be referenced in assets. For details, read [this](/docs/0.8/components/asset-store#details-asset-upload-service ) document.\n\n### Minio monitoring\n\nThe Asset Store uses Minio as its backend, with a standalone setup on local deployment and a gateway mode as the recommended production setup. We enabled Minio monitoring and added a custom Grafana dashboard for this important component.\n\n\n## Backup and restore\n\n### Backup and restore feature added\n\nWe implemented an [Ark](https://github.com/heptio/velero/)-based backup functionality in Kyma, allowing you to create manual and scheduled backups. Read our [documentation](/docs/0.8/components/backup/) to learn how to configure backups, restore your cluster from backup, and set backup retention period.\n\n### E2E tests for backup and restore\n\nWe added a new pipeline to Prow which allows testing the backup and restore feature. The test pipeline runs daily. It creates a Kyma cluster and installs resources in the cluster. After it completes the setup phase, it creates a backup and removes all resources. Next, the resources are restored using the created backup and the pipeline verifies if all recreated resources are working as expected.\n\n### Known issues\n\nCurrently, the backup and restore feature doesn't cover all components. As a workaround, add the outstanding components to Ark configuration manually as described in the [documentation](/docs/0.8/components/backup/#details-back-up-a-kyma-cluster).\n\n\n## Console\n\n### SAP Fiori Fundamentals\n\nAll views of the Console now use Fiori Fundamentals or one of its component libraries, [`fundamental-ngx`](https://github.com/SAP/fundamental-ngx) or [`fundamental-react`](https://github.com/SAP/fundamental-react).\n\n### Support for system Namespaces\n\nThe system Namespaces of your Kyma cluster are now displayed in the Console alongside the user-created ones. The system Namespaces have reduced functionality and don't allow the users to perform certain actions, such as creating lambdas.\n\n### Create RoleBindings for users\n\nWe added the ability to create RoleBindings and ClusterRoleBindings for specific users through the Console.\n\n### Catalog view enhancements\n\n- \"Provision only once\" classes\n\nSome Service Classes can be provisioned only once in a given Namespace. They are mostly brokers from different cloud providers. We made it clear in the UI that certain classes can be used only once or cannot be provisioned again if they are already in use. We also indicated how many instances of Service Classes that can be provisioned multiple times already exist in the cluster.\n\n![Provision only once classes](./provision_once.png)\n\n- OData specification rendering\n\nKyma allows you to register REST APIs as well as OData APIs. The Console now supports not only OpenAPI but also OData spec rendering. We developed a new component and integrated it in the Service Catalog views to support this use case. Currently, we support OData v2, v3, and v4. We support only `XML` as the input data format and we transform older OData versions to v4.\n\n![OData spec](./odata.png)\n\n### Known issues\n\nAfter you upgrade Kyma to the 0.8 version, you might be unable to log in to the Console. To counter this issue, clear your browser cache manually and try logging in again.\n\n\n## Eventing\n\n### Consuming Events served by Knative Eventing\n\nRunning Kyma with the `--knative` flag now allows you to consume Events served by Knative.\n\n### Restricted Client access enabled for NATS Streaming\n\nOnly Event Bus applications can connect to NATS Streaming using client authentication.\n\n\n## Installation\n\n### Removed the Minikube version constraint\n\nWe removed the Minikube version constraint. You can now use any compatible version, not necessarily the exact one found in Kyma sources.\n\n### Kubernetes version upgrade\n\nCluster deployments now use Kubernetes version 1.12.\n\n\n## Logging\n\n### OK Log replaced with Loki\n\nIn this release, we replaced OK Log with a new logging solution - Loki. Dubbed the \"Prometheus for logs\", Loki fits Kyma very well. It's lightweight, actively maintained, and integrated with Grafana, which lets you see metrics and logs for your Pods all in one place. For now, we replaced the main logging functionality, which means that the logs are collected by Loki but can be accessed only through an internal API. We will expose the API and activate Grafana integration in the upcoming release. Please remember that our logging solution is in alpha state. Your feedback is welcome!\n\n\n\n## Security\n\n### Kyma-developer role\n\nWe introduced a new cluster-wide role suited for developers working with Kyma. The **kyma-developer** role has fewer privileges than the existing **kyma-admin** role but allows for more access than the existing, Namespace-specific **kyma-reader** role. Assign the new role to any developer that develop solutions in your cluster. Read [this](/docs/0.8/components/security/#tutorials-manage-static-users-in-dex-bind-a-user-to-a-role-or-a-clusterrole) document for more information.\n\n### Shorter ID token TTL\n\nStarting with the 0.8 release, all ID tokens fetched from Dex have a TTL of 8 hours.\n\n### Support for kubectl exec command\n\nThe API Server Proxy now supports the [SPDY](https://www.chromium.org/spdy/spdy-whitepaper) protocol, which is used for handling kubectl commands such as `exec`. Developers can now use all kubectl commands when they connect to a cluster with a generated `kubeconfig` file.\n\n\n## Serverless\n\n### Logging of function's source code before execution\n\nFunctions are logging their source code and `package.json` content before they are executed. This allows you to track what code is executed inside function Pods.\n\n\n## Service Catalog\n\n### Define the URLs of the repositories that hold your bundles in the Helm Broker\n\nYou can now instantly update the URLs of your bundles repositories in the Helm Broker, with no need to restart. For more information, read [this](/docs/0.8/components/helm-broker#configuration-configure-helm-broker-add-a-new-bundle-repository) document.\n\n\n## kyma-project.io\n\n### Backend refactoring\n\nWe refactored the backend of the website to improve the speed of future implementations.\n\n### Bugfixes\n\nWe fixed multiple smaller bugs, including a particularly annoying one that caused the horizontal scroll bar to overlap the code in code snippet fields.\n\n![Scroll bar](./scroll_bar_bug.png)\n\n### New features\n\n- Copy button for code snippets\n![Copy button](./copy_button.png)\n\n- New tabs layout suitable for displaying instructions in different versions\n![Tabs layout](./tabs_layout.png)\n\n- New panel types help differentiate between notes, caution indicators, and tips\n![Panels](./panels.png)\n\n- A special icon indicates that clicking a link takes you outside of the website and opens a new tab\n![External link icon](./link_icon.png)\n\n- The new section on the main page introduces Kyma early adopters that agreed to be mentioned on the website\n![Early adopters section](./early_adopters.png)\n","excerpt":"The 0.8 release is packed with new features and improvements that bring your experience to a new level. The Kyma-Knative integration continues, making it now possible to both publish and consume Events using Knative Eventing. You can now back up a Kyma cluster manually or schedule periodic backups. The Minikube version constraint is removed, allowing you to use any compatible Minikube version. The Application Connector got even more powerful with certificate signing, renewal, and revocation, as well as a brand new information endpoint. Other significant improvements include replacing OK Log with Grafana Loki, switching all Console views to SAP Fiori Fundamentals, and the introduction of the kyma-developer role.","fields":{"slug":"/blog/2019/3/14/release-notes-08","assetsPath":"/assets/blog-posts/2019-03-14-release-notes-0.8/","date":"March 14, 2019","postInfo":{"fileName":"release-notes-08","year":2019,"month":3,"day":14}},"frontmatter":{"title":"Kyma 0.8 Edmonton","author":{"name":"Tomasz Papiernik, Technical Writer @Kyma"},"tags":["release-notes"],"type":"release","releaseTag":"0.8.0","redirectFrom":["/blog/release-notes-08"]}},{"id":"350ec0b9-dd18-5966-8dad-6ff640ce55fa","rawMarkdownBody":"\nAs you know, a vibrant community of individuals stands behind the Kyma open-source project. They collaborate through Special Interest Groups (SIGs) and Working Groups (WGs), just like it is done in Kubernetes. Additionally, both SIGs and WGs facilitate technical discussions, proposals, and contributions. They also ensure Kyma is a welcoming community for all contributors. The WGs facilitate discussions and work on short-lived, specific topics that either result from the work of SIG groups or that the community members initiate directly.\n\n<!-- overview -->\n\n**Is there a SIG I can join?**\n\nYes, there is one main SIG called **Core** that is the entry point. The Core SIG consists of SIG leaders and members. To learn more about their roles, click [here](https://github.com/kyma-project/community/blob/master/collaboration/01-sig-and-wg.md#roles).\n\n**Who are the Core SIG leaders?**\n\nThe Core SIG leaders are Piotr Kopczynski ([@PK85](https://twitter.com/PiotrasPk)), Mateusz Szostok [(@mszostok](https://twitter.com/m_szostok)), Ahmed Abdalla ([@Abd4llA](https://twitter.com/Abd4llA)), and Lukasz Gornicki ([@derberg](https://twitter.com/derberq)).\n\n**What is the purpose of the Core SIG?**\n\nThe purpose of the Core SIG is to:\n\n- Publicly represent Kyma.\n- Facilitate collaboration with external contributors.\n- Communicate the Kyma project vision and roadmap to the community.\n- Represent the Kyma contributors.\n- Be the main contribution contact for Kyma.\n- Gauge interest, request the community feedback, and ensure it is addressed.\n- Own all code repositories in the Kyma organization except for the `community` repository.\n- Showcase proposals to the community and collect feedback on those proposals to assist the decision-making process.\n- Represent its members and the Kyma community in the Council meetings.\n\n**I am interested! How can I join the Core SIG?**\n\nYou can join the Core SIG biweekly meetings that take place on Wednesdays at 15:00 CET on [Zoom](https://zoom.us/j/4794339038). If you can't join them, read the meeting agenda and notes [here](https://docs.google.com/document/d/1vWleTon7sJIk0teee4SoVezS4mR3K8TlkvXkgLJwRD8), or watch the meeting recordings on the [Kyma YouTube channel](https://www.youtube.com/watch?v=1DD5aCBnywQ&amp;list=PL7PGl--iaIH9jnbT8yG_KOV3unv1iUILR).\n\nWe're on [Slack](https://join.slack.com/t/kyma-community/shared_invite/enQtNDAwNzE4Mjk2NDE3LTJhOTlmZjM5YzkwNmEzNmY3ZjE2MTU2OTMxOGE4ZDM0MmU4ZWRkZGJiODgzNmRmMTYxMDYwNjZiMDAwMTA2OWM) too!\nJoin the [#sig-core Slack channel](https://kyma-community.slack.com/messages/CBP7LKRPS/) to ask questions, keep up to date with the latest Core SIG news, or simply to meet the Core SIG leaders and members. \n\nWe'd be happy to have you at the Core SIG!","excerpt":"As you know, a vibrant community of individuals stands behind the Kyma open-source project. They collaborate through Special Interest Groups (SIGs) and Working Groups (WGs), just like it is done in Kubernetes. Additionally, both SIGs and WGs facilitate technical discussions, proposals, and contributions. They also ensure Kyma is a welcoming community for all contributors. The WGs facilitate discussions and work on short-lived, specific topics that either result from the work of SIG groups or that the community members initiate directly.","fields":{"slug":"/blog/2019/2/20/core-sig","assetsPath":"/assets/blog-posts/2019-02-20-core-sig/","date":"February 20, 2019","postInfo":{"fileName":"core-sig","year":2019,"month":2,"day":20}},"frontmatter":{"title":"The Core Special Interest Group","author":{"name":"Ana Yankovich, Knowledge Consultant @Kyma"},"tags":["kyma","community","sig","core"],"type":null,"releaseTag":null,"redirectFrom":["/blog/core-sig"]}},{"id":"a50f5a82-5832-5c19-b493-ee427a37104f","rawMarkdownBody":"We keep our promises here at Kyma. With the 4-week release cycle in full swing, it's time to shed some light on the next release named after the capital of the Canadian province of Alberta, located on the North Saskatchewan River. What can you expect from Kyma 0.8 Edmonton?\n\n<!-- overview -->\n\n As life on the Canadian Prairies isn't easy, the Edmonton release focuses more on vital maintenance operations, such as upgrade, backup, and restore. The upgradeability check we added to our CI in the previous release will be activated as a mandatory test for every pull request. The same pattern will be introduced for backup and restore. We will test the Kyma components and user workloads regularly to ensure that they can be easily restored on a new cluster.\n\n In previous releases, we laid the groundwork to make Knative part of the Kyma messaging system. This time we will add a new controller to manage Knative subscriptions for delivering Kyma messages. As a result, we will be ready to make Knative the default solution in the upcoming 0.9 release.\n\n We realize that knowing exactly what's going on is important not only in the cold wilderness but also in the realm of cloud software. That's why we constantly work on improving observability in Kyma. This time around we will add more metrics to our default dashboards and switch from the recently archived OK Log to Grafana Loki, which is advertised as the \"Prometheus for logs\". This change will allow the Grafana UI to display logs, and enable rendering logs in the Console UI. \n\n Priorities change from one release to another, but it goes without saying that security is always the top priority for us. Always. We're focused on fixing the majority of the identified issues such as accessing Tiller without authentication, too high privileges of service accounts in Prow, long ID Token expiration time, and more. To promote better security practices we will introduce a default developer role that is sufficient to deploy workloads in Kyma cluster but doesn't include admin permissions which allow managing system Namespaces and cluster-wide resources. Starting with Edmonton, the Console UI will allow you to bind roles directly to users, not only to groups. \n\n The new release will be also much easier to install. Local deployments will support multiple Minikube versions. On cluster deployments, you will be able to use built-in, dynamic DNS support and certificate generation, so you won't have to configure DNS and issue TLS certificates should you want to quickly spin up a test cluster. \n\n We listen to feedback from developers using Kyma, and in this release, we will add WebSocket support to the Authorization Proxy to enable kubectl commands: exec, port-forward and tailing logs. This way the `kubeconfig` generated for a specific, signed-in user will offer full functionality, but with the access limitations defined by the assigned user roles and user ID token expiration.\n\n With every release, we deliver a bunch of smaller improvements in different areas. The Edmonton release will bring:\n- Rendering OData specification in the Service Catalog view of the Console UI\n- All Namespaces visible in the Console UI\n- Improvements to the Lambda UI responsiveness\n- Console UI fully switched to Fiori 3 (based on SAP Fiori Fundamentals)\n- A new test runner to replace for Helm test\n- Instant updates of the Helm Broker repository URL - no need to restart!\n- New resources in the Asset Store - ClusterBucket and ClusterAsset \n- Filtering in the Asset package fetching process\n\nYou can find all the items planned for the 0.8 release in our [Zenhub](https://app.zenhub.com/workspaces/kyma---all-repositories-5b6d5985084045741e744dea/reports?report=release&release=5c0791391a6a4c6bf4b314c6).\n\nCome back and check out Kyma 0.8 Edmonton when it's released on 11.03.2019 and keep an eye out for more Kyma cool news and updates on our blog.\n\nSee you around Stay warm!\n","excerpt":"We keep our promises here at Kyma. With the 4-week release cycle in full swing, it's time to shed some light on the next release named after the capital of the Canadian province of Alberta, located on the North Saskatchewan River. What can you expect from Kyma 0.8 Edmonton?","fields":{"slug":"/blog/2019/2/18/release-08-plan","assetsPath":"/assets/blog-posts/2019-02-18-release-0.8-plan/","date":"February 18, 2019","postInfo":{"fileName":"release-08-plan","year":2019,"month":2,"day":18}},"frontmatter":{"title":"Kyma 0.8 Edmonton scheduled for release on 11.03.2019","author":{"name":"Piotr Bochynski, Product Owner @Kyma"},"tags":["release"],"type":null,"releaseTag":null,"redirectFrom":["/blog/release-08-plan"]}},{"id":"44ad5608-b991-58e0-83cb-8f8bec6003a9","rawMarkdownBody":"\nThe 0.7 release brings you features and improvements to further enhance your Kyma experience. The alpha version of the Asset Store component gives you a solution for storing assets, such as documents, files, images, or API specifications. The ongoing CI development resulted in new pipelines which you can use to run Kyma installation and intercept any installation-related issues. The Kyma-Knative integration continues, making it possible to publish Events using Knative Eventing. Other significant improvements allow you to install Kyma on AKS, keep your resources secure with the new security model, and benefit from smoother and simplified Kyma deployment process.\n<!-- overview -->\n\nThe highlights of Kyma 0.7 Dublin include:\n\n- [Asset Store](#asset-store) - We introduced a brand new component for storing assets.\n- [Publishing Events with Knative](#event-publishing-with-knative-eventing) - We enabled Event publishing using Knative Eventing.\n- [New CI pipelines](#new-ci-pipelines) - We set up new CI pipelines to run Kyma installation on GKE and identify potential issues.\n- [Kyma on AKS](#kyma-on-aks) - We enabled Kyma installation on Azure Kubernetes Service (AKS).\n- [API Server Proxy autoscaling](#api-server-proxy-autoscaling), [removed kyma-default ResourceQuota](#kyma-default-resourcequota-removed), and [tweaked startup scripts](#startup-scripts-improvements) that simplify the Kyma deployment process.\n- [UI API Layer security model (GraphQL)](#ui-api-layer-security-model) - We switched from a custom Istio RBAC implementation to Kubernetes RBAC to bring you a lightweight and flexible solution for securing your resources.\n\n\n\nSee the overview of all changes in this release:\n\n\n- [Application Connector](#application-connector) - Increased Application Registry memory limit, API secured with client certificates\n- [Asset Store](#asset-store) - Asset Store introduction\n- [Console](#console) - UI views migrated to SAP Fiori Fundamentals, view modularization, node visibility restrictions\n- [Continuous Integration](#continuous-integration) - New CI pipelines\n- [Eventing](#eventing) - Publishing integrated with Knative Eventing\n- [Installation](#installation) - Upgrade to Minikube v0.33.0, upgrade to Kubernetes v1.11.5, Kyma on Azure Kubernetes Service, resource quota removed from system Namespaces\n- [Monitoring](#monitoring) - New alert rule for Persistent Volumes, optional Prometheus Operator\n- [Security](#security) - UI API Layer security model\n- [Service Catalog](#service-catalog) - Azure Service Broker runtime bundling and installation, one-time provisioning for Helm Broker, Service Catalog standalone installation\n- [Service Mesh](#service-mesh) - Default Istio sidecar injection, API Server Proxy autoscaling, startup scripts improvements\n- [Tracing](#tracing) - Tracing UI elements renaming\n\n\n---\n\n## Application Connector\n\n### Increased Application Registry memory limit\n\nWe have increased the default memory limit for the Application Registry payload to 5 MB to enable registration of extensive API specifications.\n\n### API secured with client certificates\n\nApplication Proxy allows you to secure APIs with generated client certificates. When you register an API with a client certificate, the Application Registry generates a ready-to-use certificate and key pair for this API to secure it. You can use the generated pair or replace it with your own certificate and key. For details, see [this](/docs/0.7/components/application-connector#tutorials-register-a-secured-api) document.\n\n### Known issues\n\nIf you run Kyma on Minikube, you must expose the Nginx Ingress Controller on the dedicated NodePort. However, URLs returned from the Connector Service do not include the value for this port. To fix it, update URLs manually using the information in [this](/docs/0.7/components/application-connector#api-application-registry) guide.\n\n## Asset Store\n\n### Asset Store introduction\n\nWe have introduced the alpha version of a new, Kubernetes-native solution for storing assets, such as documents, files, images, or API specifications.\n\nThis version of the Asset Store brings you the following features included in the [Asset Store proposal](https://github.com/kyma-project/community/blob/master/collaboration/sig-core/proposals/asset-store-proposal.md):\n\n* Fetching single files and packages (zip and tar files are supported for unpacking).\n* Starting Minio in the Minio Gateway mode to push resources to cloud providers, such as Azure or Google Cloud.\n* Providing custom validation services for assets to validate them before uploading them to the storage.\n* Providing custom mutation services for assets to modify them before uploading them to the storage.\n\n\nIn the coming releases, we plan to address the remaining features from the proposal. If you are interested in contributing, feel free to contact us on [Slack](http://slack.kyma-project.io). Meanwhile, read [this](/docs/0.7/components/asset-store#overview-overview) document to find out more about the Asset Store component.\n\n### Known issues\n\nSwitching Asset Store to recommended production mode, with Minio Gateway under the hood and Google Cloud Storage support, requires additional manual configuration. This is because for this release the Minio setup must support our legacy solution and default **content** bucket setup. The problem is caused by the limitation of Google Cloud Storage which requires the bucket name to be globally unique. For details and configuration steps read [this](https://github.com/kyma-project/kyma/blob/master/resources/assetstore/README.md) document.\n\n## Console\n\n### UI views migrated to SAP Fiori Fundamentals\n\nWe have migrated Console UI views to SAP Fiori Fundamentals. For the core Console UI we used the [Fundamental NGX](https://github.com/SAP/fundamental-ngx) library, and the UI views were built on [Fundamental React](https://github.com/SAP/fundamental-react). In addition to the migration, we added the missing UI tests and improved the existing ones. This way, we covered all end-to-end scenarios for the Service Catalog views and based them on the [testing bundle](https://github.com/kyma-project/addons/tree/master/addons/testing-0.0.1).\n\n### View modularization\n\nWe have extracted the optional views configuration from the core Console UI to create separate micro frontends. The micro frontends embedded in the Console receive information about installed Kyma modules to resiliently show the UI components relevant for these modules.\n\n### Node visibility restrictions\n\nThe visibility of navigation nodes in the Console UI now depends on user access rights. For example, only `kyma-admins` can see Kyma cluster settings.\n\n### Known issues\n\nBrowsers use cached file versions from previous Kyma releases instead of fetching new ones automatically. So far, there is no built-in cache breaker mechanism. To fix this issue, you need to manually clear the browser cache to make sure the Console UI works properly after installing a new Kyma version.\n\n## Continuous Integration\n\n### New CI pipelines\n\nWe have introduced nightly and weekly CI pipelines to perform tests and identify any potential issues, such as incorrect settings or memory leaks. The pipelines run Kyma on Google Kubernetes Engine using the master branch. If you are interested in details, go to `https://status.build.kyma-project.io/?type=periodic` and search for **kyma-gke-nightly** and **kyma-gke-weekly** jobs. We are also planning to add Slack notification for test results.\n\n## Eventing\n\n### Event Publishing with Knative Eventing\n\nAs a result of continuous Kyma-Knative integration, you can now deploy Kyma with a `--knative` feature flag. It allows you to use the Publish API provided by Knative Eventing.\n\n## Installation\n\n### Upgrade to Minikube v0.33.0\n\nWe have upgraded Minikube to version [0.33.0](https://github.com/kubernetes/minikube/blob/master/CHANGELOG.md#version-0330---2019-01-17). This means we can now use the stable `kubeadm` bootstrapper instead of the deprecated `localkube`. This helps us to leverage new features and improves the stability of local installations.\n\n### Upgrade to Kubernetes v1.11.5\n\nYou can now deploy Kyma using Kubernetes v1.11.5, to enjoy improved stability and new Kubernetes feature. One of them is the Status subresource for CRDs, which summarizes the current state of the object in the system.\n\n### Kyma on AKS\n\nYou can now smoothly deploy Kyma on an AKS cluster, using a chosen release version or even a particular commit. [Install](/docs/0.7/root/kyma#installation-install-kyma-on-an-aks-cluster) Kyma on a cluster using a proprietary installer based on a Kubernetes operator. If you want to try out Kyma on a cluster without assigning the cluster to a domain you own, you can use `xip.io` which provides a wildcard DNS for any IP address. For details, see [this guide](/docs/0.7/root/kyma#installation-install-kyma-on-an-aks-cluster-with-wildcard-dns).\n\n\n### kyma-default ResourceQuota removed  \n\nYou can install Kyma on Kubernetes clusters such as AKS or GKE, which allow Node autoscaling. Therefore, we removed the `kyma-default` ResourceQuota with a memory limit defined for resources. That change affects the `kyma-system`, `kyma-integration`, and `kyma-installer` Namespaces. Namespaces labelled with `env=true` still have the `kyma-default` ResourceQuota defined.\n\n## Monitoring\n\n### New alert rule for Persistent Volumes\n\nWe are constantly increasing the number of default alert rules, so you can receive alerts for affected components. The newest addition to the set is the alert rule for Persistent Volumes, activated when the volume used in the `kyma-system` Namespace exceeds 90%.\n\n### Optional Prometheus Operator\n\nThe Prometheus Operator module used to be required in any Kyma setup. To increase flexibility, we moved the ServiceManager CRD from the Prometheus Operator to the CRD set provided by Kyma. This way, you can define Service Management resources for your components without the need to install the Prometheus Operator.\n\n## Security\n\n###  UI API Layer security model\n\nWe have switched from a custom Istio RBAC implementation based on Envoy to Kubernetes RBAC. The reason was to avoid difficulties of developing and maintaining the LUA filters for Envoy. Additionally, the current implementation uses Go, which makes it more lightweight and flexible. Read the [documentation](/docs/0.7/components/security#details-graphql) to learn the details on securing resources in GraphQL using queries, mutations, and subscriptions.\n\n## Service Catalog\n\n### Azure Service Broker runtime bundling and installation\n\nKyma allows you to integrate with the Azure Service Broker in an easy way, and to use the vast range of Service Classes it provides. Each Service Class is comprehensively described in the [documentation](https://github.com/kyma-project/addons/tree/master/addons/azure-service-broker-0.0.1/docs). Read more about the Azure Service Broker [here](https://kyma-project.io/docs/0.7/components/helm-broker/#overview-azure-broker).\n\n### One-time provisioning for Helm Broker\n\nThe Helm Broker now supports the `provisionOnlyOnce` flag which defines that the bundle should be provisioned only once for a given Namespace. We have also added this flag to the Azure Service Broker and the GCP Service Broker bundle configurations. For details, read [this](/docs/0.7/components/helm-broker#configuration-binding-bundles) document.\n\n## Service Catalog standalone installation\n\nWe took further steps to modularize the Service Catalog by moving `service-catalog-addons` and `helm-broker` charts out of the `core` chart directory. This way, it's up to you to decide which components to install. When other Kyma components will be moved out of the `core` chart, you will be able to install Kyma with the Service Catalog only.\n\n## Service Mesh\n\n### Default Istio sidecar injection\n\nBy default, the Istio sidecar injector watches all Pod creation operations on all Namespaces and injects the newly created Pods with a sidecar proxy. To disable proxy injection for a Namespace, add the `istio-injection=disabled` label. To disable proxy injection on a Pod level, add the `sidecar.istio.io/inject:false` label to a Pod.\n\n### API Server Proxy autoscaling\n\nTo increase the availability of components, we have enabled the autoscaling of the API Server Proxy component. Based on the memory usage metric, the system decides whether you should deploy an additional instance of the API Server Proxy.\n\n### Startup scripts improvements\n\nTo simplify the local deployments, the startup scripts now accept the `--password` argument. Running the scripts with this argument allows you to install Kyma locally and set a password for the admin user. This way, you don't need to fetch and decode the password generated for every deployment.  \n\n\n## Tracing\n\n### Tracing UI elements renaming             \n\nWe renamed the services and operations displayed in the Tracing UI to provide clarity and better user experience.\n","excerpt":"The 0.7 release brings you features and improvements to further enhance your Kyma experience. The alpha version of the Asset Store component gives you a solution for storing assets, such as documents, files, images, or API specifications. The ongoing CI development resulted in new pipelines which you can use to run Kyma installation and intercept any installation-related issues. The Kyma-Knative integration continues, making it possible to publish Events using Knative Eventing. Other significant improvements allow you to install Kyma on AKS, keep your resources secure with the new security model, and benefit from smoother and simplified Kyma deployment process.","fields":{"slug":"/blog/2019/2/14/release-notes-07","assetsPath":"/assets/blog-posts/2019-02-14-release-notes-0.7/","date":"February 14, 2019","postInfo":{"fileName":"release-notes-07","year":2019,"month":2,"day":14}},"frontmatter":{"title":"Kyma 0.7 Dublin","author":{"name":"Barbara Szwarc, Technical Writer @Kyma"},"tags":["release-notes"],"type":"release","releaseTag":"0.7.0","redirectFrom":["/blog/release-notes-07"]}},{"id":"0a981314-f29e-56b9-b085-bab42d291446","rawMarkdownBody":"\nWe might have just reached Cairo, but it's not time to celebrate yet. We embark on our ships and ride the wave straight to our next destination - Dublin! The capital of Ireland was chosen to be the codename for the upcoming Kyma 0.7 release which is scheduled to launch on 11th February 2019. Only 4 weeks after the 0.6 release! We're pretty excited and proud about how we improved our tooling and release process, which allows us to release more frequently. Thanks to these improvements, starting with the Dublin release, we will release a new version of Kyma every 4 weeks.\n\nWhat can you expect at the end of the rainbow? \n\n<!-- overview -->\n\nAlthough we're making progress fast, we don't forget about our users. We don't leave anyone behind and we aim to make updating Kyma as simple as possible. We want all users to simply grab a new version of the Kyma installer, deploy it, upgrade their deployment to the newest version, and start exploring new features in no time. This might sound really simple, but brings a lot of challenges for our project which is still in the beta phase and changes constantly. Despite the challenges, we're getting ready to implement the easy upgrade flow in the near future. As a part of these preparations, the 0.7 release will bring a new CI/CD pipeline to verify Kyma upgradeability continuously.\n\nThe 0.6 release introduced a feature toggle that enables Knative in Kyma installation. In the Dublin release, we will integrate event publishing and subscriptions with Knative Eventing. We will also deliver the first version of the Function Controller that supports Knative as the serverless engine.\n\nWith the 0.7 release, we aim to improve quality and stability by adding more end-to-end tests and pipelines that will run these tests on long-running clusters. So far the stability tests ran exclusively on nightly clusters. With the Dublin release, we will introduce weekly clusters to help ensure that no issues pop up after a few days of working with the cluster. We will also tweak Kyma deployments to work better with cluster autoscaling, for example by adjusting the apiserver-proxy deployment and resource quotas in system Namespaces.\n\nOur goal is to run Kyma on any Kubernetes cluster offered as a managed service. Currently, our default environment is the Google Kubernetes Engine (GKE). In the upcoming release, we will tweak our deployment procedure to allow Kyma to run and install smoothly on Azure Kubernetes Service (AKS) clusters. In addition, you will be able to add and configure Azure Broker in your cluster to enable easy provisioning and binding of Microsoft Azure services in your applications.\n\nDevelopers working with Lambdas will appreciate the possibility to test them directly from the UI. You will able to provide input data and see the value the function returns without exposing it through the API gateway.\n\nIn 0.7 release, we also introduce the first version of the Asset Store which is a generic, Kubernetes-native solution that will store our documentation, images, API specifications, and client-side applications. It is an evolution of our current storage solution based on Minio.\n\nAs in the previous release, we continue on improving the security of Kyma. The Dublin release will come with the first version of authorization in UI-API Layer (GraphQL), which is based on the proof of concept we worked on.\n\nYou can also expect a couple of smaller improvements related to UI/UX, better UI tests, further refactoring for better modularization, and more. You can find all the items planned for the 0.7 release in our [Zenhub](https://app.zenhub.com/workspaces/kyma---all-repositories-5b6d5985084045741e744dea/reports?report=release&release=5c0790ea1a6a4c6bf4b314c3).\n\nCome back and check out Kyma 0.7 Dublin when it's released on 11.02.2019 and keep an eye out for more Kyma news and updates on our blog.\n\nSee you around!\n","excerpt":"We might have just reached Cairo, but it's not time to celebrate yet. We embark on our ships and ride the wave straight to our next destination - Dublin! The capital of Ireland was chosen to be the codename for the upcoming Kyma 0.7 release which is scheduled to launch on 11th February 2019. Only 4 weeks after the 0.6 release! We're pretty excited and proud about how we improved our tooling and release process, which allows us to release more frequently. Thanks to these improvements, starting with the Dublin release, we will release a new version of Kyma every 4 weeks. What can you expect at the end of the rainbow?","fields":{"slug":"/blog/2019/1/17/release-07-plan","assetsPath":"/assets/blog-posts/2019-01-17-release-0.7-plan/","date":"January 17, 2019","postInfo":{"fileName":"release-07-plan","year":2019,"month":1,"day":17}},"frontmatter":{"title":"Kyma 0.7 Dublin scheduled for release on 11.02.2019","author":{"name":"Piotr Bochynski, Product Owner @Kyma"},"tags":["release"],"type":null,"releaseTag":null,"redirectFrom":["/blog/release-07-plan"]}},{"id":"8a388152-239d-57ff-8f44-b0eaacdbe574","rawMarkdownBody":"\nThe 0.6 release brings a lot of significant changes to Kyma. The main focus of this release was to finalize the work on Prow and replace the existing CI pipeline with the new architecture. Thus, we are excited to announce that Kyma finally uses an open-source CI tool and that Kyma 0.6 Cairo was already built using the Prow architecture. Apart from Prow, we made efforts to drive the Kyma-Knative integration forward, took further steps to modularize Kyma components and unify their naming, and significantly improved the website-related user experience.\n\nExplore the changes, try out the release, and get back to us with feedback and contribution!\n\n<!-- overview -->\n\nThe highlights of Kyma 0.6 Cairo include:\n\n- [Prow in Kyma](#prow-in-kyma) - We implemented the new open-source CI tool in Kyma.\n- [Installation with Knative](#installation-with-knative) and [Knative eventing integration](#knative-adoption-first-steps) - We enabled Knative installation with Kyma and made first steps towards Knative eventing integration.\n- [Remote Environment](#remote-environment-renaming) and [Environment Controller renaming](#environment-controller-renaming) - As part of the naming unification scheme, we renamed Remote Environments to Applications and the Environment Controller to Namespace Controller.\n- [Console backend](#backend-modularization) and [Service Catalog modularization](#modularization) - We modularized the Console backend and the Service Catalog.\n- [Google Cloud Platform Service Broker](#google-cloud-platform-service-broker) - We extended the Service Catalog with Google offerings.\n- [kyma-project.io navigation improvements](#kyma-projectio) - We improved navigation and readability of Docs on `kyma-project.io`.\n\nSee the overview of all changes in this release:\n\n- [Application Connector](#application-connector) - Remote Environment renaming\n- [Console](#console) - Luigi framework on board, new navigation structure, backend modularization, AsyncApi rendering\n- [Continuous Integration](#continuous-integration) - Prow in Kyma\n- [Eventing](#eventing) - Knative adoption first steps\n- [Installation](#installation) - Environment Controller renaming, wildcard DNS `xip.io` integration, installation with Knative\n- [Serverless](#serverless) - Upgrade to Kubeless v1, function autoscaling\n- [Service Catalog](#service-catalog) - Google Cloud Platform Service Broker, modularization, new tooling for the Service Catalog UI tests\n- [kyma-project.io](#kyma-project-io) - Linking enabled, `master` branch available in Docs, blog landing page excerpts, improved styling of Docs, scrollspy in Docs.\n\n---\n\n\n## Application Connector\n\n### Remote Environment renaming\n\nAs a step towards having a consistent naming scheme for all Kyma components, we renamed Remote Environments to **Applications**. This way, the Application Connector finally connects Applications instead of Remote Environments. This change was introduced consistently across the whole Kyma, including Application Connector components and the Console UI.\n\n## Console\n\n### Luigi framework on board\n\nThe Console UI was refactored and it now uses the [Luigi](https://github.com/kyma-project/luigi/blob/master/README.md) framework to orchestrate client-side micro frontends. With Luigi on board, the Console allows for secure and technology-agnostic UI extensibility in Kyma. \n\n### New navigation structure\n\nThe new navigation in the Console provides a more structured content. Immediately after you sign in, you can see all the Namespaces in the main content area. You also have all the cluster-wide information at hand in the left navigation panel. \n\n![](./new-navigation-structure.png)\n\n### Backend modularization\n\nAs you know, we want Kyma to be highly modular and allow you to skip the installation of components you don't need. For example, if you have your own Istio, you should be able to decide if you want to install the one Kyma provides. This requires some refactoring of the Console backend to ensure proper resiliency in the Console UI. In this release, we completed the modularization of the backend and hid it under the feature flag. The reason why it is not enabled by default is that the Console UI still requires resiliency improvements to ensure no errors occur when a certain Kyma component is not installed. The backend modularization was done based on [this](https://github.com/kyma-project/community/issues/165) decision and the referenced proposal.\n\nTo quickly switch the Console backend to work in the modular mode, run the following command in the terminal:\n\n```\nkubectl set env deployment/core-ui-api MODULE_PLUGGABILITY=true -n kyma-system\n```\n\nFor more details about the introduced changes, read the related [documentation](/docs/0.6/components/console#details-ui-api-layer).\n\n### AsyncApi rendering  \n\nWe created a new component for rendering the [AsyncApi specification](https://www.asyncapi.com/). It now fully supports the specification and improves its look and feel when compared to the very minimalistic table we had before.\n\n![](./asyncapi-rendering.png)\n\nThe other great thing we did in this area was creating the component in a very generic way in a separate repository, and donating it to the [AsyncApi organization](https://github.com/asyncapi/asyncapi-react). This means we maintain it directly from the AsyncApi organization and you can use this component not only in Kyma.\n\nFeel free to play with it and give us your feedback:\n\n- Read the related [documentation](https://github.com/asyncapi/asyncapi-react#props).\n\n- Test the component [playground](https://playground.asyncapi.io/).\n\n- Customize the component quickly in the [sandbox project](https://codesandbox.io/s/5vz8l9zlmn).  \n\n\n## Continuous Integration\n\n### Prow in Kyma\n\nAfter a few weeks of hard work, the Prow Working Group finalized our plan of having an open-source CI tool for Kyma. All Kyma repositories and components are now handled by Prow. We defined the release pipeline and already tested it when preparing this release.\n\nThe important change that Prow introduces is that external contributors are now able to see build statuses on their pull requests. They can also check logs of all executed jobs. However, to (re)run the jobs on the pull requests, external contributors need to contact a Kyma organization member as, for security reasons, this functionality is available only to internal contributors.\n\nVisit our [`test-infra`](https://github.com/kyma-project/test-infra) repository and read more about Prow and its setup in Kyma.\n\n\n## Eventing\n\n### Knative adoption first steps\n\n- Kyma eventing use cases\n\n  To better align with the Knative eventing community, we created basic use cases of Kyma eventing. These use cases are meant to help us and the community to drive the Knative eventing evolution forward. Read more about the use cases [here](https://github.com/kyma-project/community/blob/master/collaboration/archive/wg-knative/kyma-eventing-use-case.md).\n\n- Kyma-Knative eventing installation design\n\n  As an initial step towards adopting Knative eventing, we need to have a design that allows us to install Kyma eventing on top of Knative eventing. This way, it will be possible to use Knative eventing as the underlying layer in Kyma, and achieve pluggability. Read more about our plan in [this](https://github.com/kyma-project/community/issues/166) proposal.\n\n\n## Installation\n\n### Environment Controller renaming\n\nThe Environment Controller that injects limit ranges, resource quotas, and default roles into each Namespace you create, was renamed to **Namespace Controller**. Its logic, however, is still the same and the `env=true` label remains untouched. It is also worth mentioning that the Environment-to-Namespace renaming process is ongoing. As part of it, we have already renamed Environments to **Namespaces** in the Console UI.\n\n### Wildcard DNS xip.io integration\n\nYou can now test Kyma on a cluster with a wildcard DNS provided by `xip.io`. \n\nWe introduced a new `xip-patch` job to Kyma as an optionally installed patch component. This patch issues a self-signed TLS certificate for the Kyma instance and configures the domain to `{LOADBALANCER_IP}.xip.io`, where `{LOADBALANCER_IP}` is the IP address of the assigned load balancer in the Kyma cluster. \n\nThis feature allows you to install and use Kyma easier, without owning a domain or issuing the TLS certificate on your own. This solution is not suitable for a production environment. It is only a playground you can use to get to know the product better. Read more about this optional feature [here](/docs/0.6/root/kyma#installation-install-kyma-on-a-gke-cluster-with-wildcard-dns).\n\n### Installation with Knative\n\nYou can now install Kyma together with Knative and expose APIs using the `knative-ingressgateway` service. Knative installation also enables future work on integrating Kyma eventing with Knative eventing.\n\nFind out how to [install](/docs/0.6/root/kyma#installation-installation-with-knative) Kyma with Knative.\n\n\n## Serverless\n\n### Upgrade to Kubeless v1\n\nKyma now uses Kubeless v1, the first stable release of Kubeless. \n\n### Function autoscaling\n\nLambda functions use the Kubernetes Horizontal Pod Autoscaler to scale the number of Pods based on CPU usage. To prevent any unexpected scaling, autoscaling was limited to the function type. We also created a frequently scheduled load test to validate the scaling behavior on Azure. \n\nThe Horizontal Pod Autoscaler is not enabled in your local Kyma installation by default, so you need to activate it manually. Read [this](/docs/0.6/root/kyma#installation-install-kyma-locally-from-the-release-enable-horizontal-pod-autoscaler-hpa-) document to learn how to do that.\n\n\n## Service Catalog\n\n### Google Cloud Platform Service Broker\n\nKyma provides the Google Cloud Platform (GCP) Service Broker. Apart from the GCP standard integration offering, you can configure the GCP Broker for a specific GCP project in a given Kyma Namespace. Install the GCP Service Broker by provisioning the **Google Cloud Platform Service Broker Provider** class exposed by the Helm Broker. Read more about this new feature [here](/docs/0.6/components/service-brokers#overview-google-cloud-platform-broker).\n\n![](./gcp-provider-class.png)\n\n### Modularization\n\nWe split the Kyma Service Catalog module into `service-catalog` and `service-catalog-addons`. The `service-catalog` module contains the core functionality and can be excluded from the Kyma installation if the Service Catalog is already installed on the cluster. The `service-catalog-addons` module contains all features built around the core, such as automatic bindings and the UI.\n\nFollow [these](/docs/0.6/root/kyma#installation-installation-with-custom-service-catalog-deployment) steps to install Kyma with a custom Service Catalog deployment.\n\n### New tooling for the Service Catalog UI tests\n\nThe Helm Broker Bundles repository supports the OSB API contract implemented by the Service Catalog v0.1.38. We released the testing bundle that allows you to perform end-to-end UI testing for the Service Catalog.\n\nRead more about the release details [here](https://github.com/kyma-project/bundles/releases).\n\n## kyma-project.io\n\n### Linking enabled\n\nIn the past, we kept postponing the implementation of linking between documents on the `kyma-project.io` website. As a result, you could see such a temporary solution in place:\n\n![](./document-references.png)\n\nIn short, there was a simple but not very useful text reference to other documents. This was due to the fact that we couldn't support linking of documents on GitHub and `kyma-project.io` at the same time. We decided, however, to give the website documentation a priority and treat Markdown files on GitHub only as document sources. As for the documentation in the Console, linking between the documents allows you to stay in the Console without being redirected to the website's Docs.\n\nAs a follow-up to this new improvement, we also added:\n\n- [Guidelines](https://github.com/kyma-project/community/blob/master/guidelines/content-guidelines/05-links-in-docs.md) for all contributors on how to add links to documents under `kyma/docs`.\n\n- The **chain link icon** on `kyma-project.io` that allows you to remember the link to a given document section easier. When you hover the cursor over any heading in the documentation, you can now see this icon. Once you click it, the address bar in the browser gets updated with the direct link to a given section.\n\n![](./linking.png)\n\n### Master branch available in Docs\n\nSince we introduced a website-centric approach to linking in the documentation, we wanted to make sure you don't fail at reading it on GitHub as a contributor, by being constantly redirected to the website's Docs. Before Kyma 0.6 Cairo, we only rendered the release-related documentation on `kyma-project.io/docs`. Now, as one of few open-source projects, we also render documentation for the [`master`](https://kyma-project.io/docs/master) branch. This documentation is updated on the website automatically, approx. 10 minutes after every merge of changes to the `master` branch.\n\nThe good news is that we also render the documentation for pre-releases on `kyma-project.io/docs`, whenever they are available.\n\n![](./master-branch.png)\n\n### Blog landing page excerpts \n\nWe started to render only condensed excerpts of the blog posts on the landing page. Thanks to this feature, the page isn't so overloaded with information and it's easier to scroll through the list of available posts.\n\n![](./excerpts.png)\n\nWe realize there are still some things to improve in this topic. We have already aggregated our plans for the blog section in [this](https://github.com/kyma-project/website/issues/142) issue. These improvements are on our roadmap but haven't been scheduled for any particular milestone yet. Feel free to contact us if you want to contribute and improve the overall user experience in this area.\n\n### Improved styling of Docs\n\nWith a few new tweaks in the style of the Docs section, we improved its readability. The font size change, better spacing, and sections separation make the reading more pleasurable.\n\nAnother important change is the width of the content container. It is now consistent with the GitHub UI, which significantly improves the contributor experience. All images and diagrams that you see in the pull request are the same in terms of width and size with what we render on `kyma-project.io` or in the documentation in the Console.\n\n![](./styling.png)\n\n### Scrollspy\n\nAs you have probably noticed from reading our documentation section on `kyma-project.io/docs`, we adhere to the rule of rendering the whole documentation for a given topic on one site. The downside of such an approach is that you get a lot of content on a single page and it is easy to get lost if you scroll too fast. This can be easily solved by the **Scrollspy** feature that we introduce in this release. This solution spies your location on the screen while scrolling. Thanks to this approach, the navigation panel is updated with the information on the document you are currently reading. When you scroll, we highlight the name of the document that you are reading at the moment.\n\nScrollspy is available on `kyma-project.io/docs`  and in the Console documentation.\n\n![](./scrollspy.gif)\n","excerpt":"The 0.6 release brings a lot of significant changes to Kyma. The main focus of this release was to finalize the work on Prow and replace the existing CI pipeline with the new architecture. Thus, we are excited to announce that Kyma finally uses an open-source CI tool and that Kyma 0.6 Cairo was already built using the Prow architecture. Apart from Prow, we made efforts to drive the Kyma-Knative integration forward, took further steps to modularize Kyma components and unify their naming, and significantly improved the website-related user experience. Explore the changes, try out the release, and get back to us with feedback and contribution!","fields":{"slug":"/blog/2019/1/14/release-notes-06","assetsPath":"/assets/blog-posts/2019-01-14-release-notes-0.6/","date":"January 14, 2019","postInfo":{"fileName":"release-notes-06","year":2019,"month":1,"day":14}},"frontmatter":{"title":"Kyma 0.6 Cairo","author":{"name":"Karolina Zydek, Technical Writer @Kyma"},"tags":["release-notes"],"type":"release","releaseTag":"0.6.0","redirectFrom":["/blog/release-notes-06"]}},{"id":"3f8b294e-2949-5f3c-801d-46fe6aeddec4","rawMarkdownBody":"\nWith winter holidays and 2019 around the corner, let's think about something hotter and more exotic. A city perhaps... Cairo? Sounds good, right? \n\nIf you're wondering what does Cairo have to do with Kyma, we're happy to explain. We decided that new releases need a cool common identification theme. After a long, coffee-fuelled \nbrainstorming session we decided to name our releases after major cities in the world. Cool, right? \n\nSoooo... What can you expect from Kyma 0.6 Cairo? \n\n<!-- overview -->\n\nKnative integration is our main focus for this release. The new Knative Working Group ([click here to visit its Slack channel](https://kyma-community.slack.com/messages/CEC6R4T6U)) works tirelessly to make Knative components available in Kyma clusters. \nBy enabling a special toggle you will be able to delegate the eventing and messaging duties to Knative and use its ingress gateway for API exposure. \n\nThe [Prow Working Group](https://kyma-community.slack.com/messages/CD7GJ41QE) is also firing on all cylinders. Soon all contributors will be able to see the build status and the logs for their pull requests. What's even more exciting, Cairo will be built using the new CI architecture!\n\nWe're also working on a more consistent naming scheme for all of our components. As Kyma users are well familiar with Kubernetes Namespaces, we decided to abandon our custom term \"Environment\" and use the Kubernetes standard instead.  \nThe renaming will also affect the Application Connector, as we'll say goodbye to \"Remote Environments\" and start using the \"Application\" name instead. This is an important step that follows our [Application Connectivity vision](https://github.com/kyma-project/community/blob/master/capabilities/application-connectivity.md). You can read more about both renaming efforts in [this](https://kyma-community.slack.com/archives/CD0K2NSQZ/p1544519219008800) Slack post. \n\nIn parallel, we are working continuously on the Kyma UI/UX - you can expect a better navigation structure and technical foundation for UI modularization and extensibility, achieved by switching Console UI to Luigi framework. \n\nWith the 0.6 release, we aim to improve code quality by introducing common libraries and unifying the acceptance tests code base. Additionally, the delivery of tools for testing the Service Catalog UI is planned.\n\nLast, but definitely not the least, we're continuously improving the security of Kyma. In the 0.6 release we're extending the UI-API Layer (GraphQL) with an authorization concept. \n\nYou can find all items planned for the 0.6 in [Zenhub](https://app.zenhub.com/workspaces/kyma---all-repositories-5b6d5985084045741e744dea/reports?report=release&release=5c015e1eda763f3a7c15abef). Come back and check out Kyma 0.6 Cairo when it's released on 14.01.2019 and keep an eye out for more Kyma news and updates on our blog. \n\nSee you around!\n","excerpt":"With winter holidays and 2019 around the corner, let's think about something hotter and more exotic. A city perhaps... Cairo? Sounds good, right?  If you're wondering what does Cairo have to do with Kyma, we're happy to explain. We decided that new releases need a cool common identification theme. After a long, coffee-fuelled \nbrainstorming session we decided to name our releases after major cities in the world. Cool, right?  Soooo... What can you expect from Kyma 0.6 Cairo?","fields":{"slug":"/blog/2018/12/11/release-06-plan","assetsPath":"/assets/blog-posts/2018-12-11-release-0.6-plan/","date":"December 11, 2018","postInfo":{"fileName":"release-06-plan","year":2018,"month":12,"day":11}},"frontmatter":{"title":"Kyma 0.6 Cairo scheduled for release on 14.01.2019","author":{"name":"Piotr Bochynski, Product Owner @Kyma"},"tags":["release"],"type":null,"releaseTag":null,"redirectFrom":["/blog/release-06-plan"]}},{"id":"7c40dd5c-1427-5c86-867e-eb79da7aaeae","rawMarkdownBody":"\nFrom the early stages of its development, Kyma has raised interest among other companies. The main reasons for that were Kyma's existing open-source technologies that constitute its cornerstone, and the fact that it allows companies to extend and customize their enterprise applications using serverless computing or microservice architecture.\n\n<!-- overview -->\n\nInnovative companies are constantly seeking ways to identify and experience new technology solutions that can provide potential benefits to their businesses. Receiving feedback from such companies at the early stage was very valuable to the Kyma team. As a result, we could make the necessary improvements to the product and launch its refined version as an open-source project.\n\nBefore going open-source, Kyma was prelaunched to a selected group of companies. One of them was XXXLutz KG, one of the world’s top furniture retailers. The company representatives received privileged early access to Kyma and were encouraged to test it. If you are interested in the outcome, watch the video below where Christian Renner, the Chief Technology Officer of the XXXLutz Group, explains why they wanted to test Kyma and what their experience with the project was like.\n\n`youtube: https://youtu.be/NI4cOWO9HnA`\n\nGetting feedback and contributions from the open-source community remains our focus moving forward. Feel invited to start your very own Kyma journey:\n\n- [Install](/docs/root/kyma#installation-installation) Kyma and test it.\n- Explore the examples on [GitHub](https://github.com/kyma-project).\n- Share your feedback on [Slack](http://slack.kyma-project.io). \n- Join the Kyma community on [Twitter](https://twitter.com/kymaproject) and [LinkedIn](https://www.linkedin.com/authwall?trk=ripf&amp;trkInfo=AQFL2ZrSEnYW9gAAAWd9pfdAKay9_IjJ5fE58rtE5CvgTVY1LQicYsSOd52ICurd4z7RsU4dhbqiMrP5IKO70z1OmhxEUJyreAQsmDllpNYlAY334UVCr-5T7_cvzf15RfP5LtA=&amp;originalReferer=&amp;sessionRedirect=https%3A%2F%2Fwww.linkedin.com%2Fcompany%2Fkyma-project%2F) for the latest news.\n\nWe are looking forward to your feedback and engagement!\n","excerpt":"From the early stages of its development, Kyma has raised interest among other companies. The main reasons for that were Kyma's existing open-source technologies that constitute its cornerstone, and the fact that it allows companies to extend and customize their enterprise applications using serverless computing or microservice architecture.","fields":{"slug":"/blog/2018/12/10/xxxlutz-video","assetsPath":"/assets/blog-posts/2018-12-10-xxxlutz-video/","date":"December 10, 2018","postInfo":{"fileName":"xxxlutz-video","year":2018,"month":12,"day":10}},"frontmatter":{"title":"Fuel innovation with customer feedback","author":{"name":"Annegret Stoye, Product Manager @Kyma"},"tags":["kyma","opensource","innovation","technology"],"type":null,"releaseTag":null,"redirectFrom":["/blog/xxxlutz-video"]}},{"id":"0515adae-16c4-5d9a-97e7-4f6d488f8990","rawMarkdownBody":"\nAs you may already know, the [KubeCon](https://events.linuxfoundation.org/events/kubecon-cloudnativecon-north-america-2018/) conference, known among the whole Kubernetes and CNCF community, is taking place in Seattle on December 10. \nThis one-liner intro already clarifies why we, the Kyma people, want to be there too. Our main focus is:\n- To meet you, show you what Kyma is, and answer all your questions\n- Meet with other communities. For now, we are planning to meet with the Kubernetes' Testing SIG and the Service Catalog SIG and talk about our future contributions.\n\n<!-- overview -->\n\nThese Kyma experts are comming:\n- Ralf Hofmann, our Product Lead\n- Krassimir Semerdzhiev, our Strategist \n- Ahmed Abdalla, [the leader of the Kyma's Core SIG](https://github.com/kyma-project/community/blob/master/collaboration/02-sig-core.md) and our Lead Product Engineer\n- Piotr Kopczynski, [the leader of the Kyma's Core SIG](https://github.com/kyma-project/community/blob/master/collaboration/02-sig-core.md) and the owner of the Kyma's Service Catalog capability\n- Lukasz Gornicki, [the leader of the Kyma's Core SIG](https://github.com/kyma-project/community/blob/master/collaboration/02-sig-core.md) and the owner of the Kyma's Core and Supporting capability\n\nThe easiest way to talk to us before the event is to do it through [Slack](http://slack.kyma-project.io).\nDuring the event, you can easily find all Kyma members that travel to Seattle at the SAP booth. Why SAP? Kyma was donated to the open-source community a few months ago by [SAP](/blog/introducing-project-kyma). Stop by and find us at the SAP booth together with another great Kubernetes-native project called [Gardener](https://gardener.cloud/).\n\nSo what are you waiting for? [Install Kyma now](/docs/root/kyma#installation-installation) and prepare your questions.\n\nSee you there and follow us for any updates on [Twitter](https://twitter.com/kymaproject).\n\n","excerpt":"As you may already know, the KubeCon conference, known among the whole Kubernetes and CNCF community, is taking place in Seattle on December 10. \nThis one-liner intro already clarifies why we, the Kyma people, want to be there too. Our main focus is: To meet you, show you what Kyma is, and answer all your questions Meet with other communities. For now, we are planning to meet with the Kubernetes' Testing SIG and the Service Catalog SIG and talk about our future contributions.","fields":{"slug":"/blog/2018/12/3/kyma-at-kubecon","assetsPath":"/assets/blog-posts/2018-12-03-kyma-at-kubecon/","date":"December 03, 2018","postInfo":{"fileName":"kyma-at-kubecon","year":2018,"month":12,"day":3}},"frontmatter":{"title":"Kyma at KubeCon","author":{"name":"Lukasz Gornicki, Product Owner @Kyma"},"tags":["cncf","kubecon","conference"],"type":null,"releaseTag":null,"redirectFrom":["/blog/kyma-at-kubecon"]}},{"id":"e5672d65-a7f0-51af-8171-7173120ec761","rawMarkdownBody":"\nWe constantly work improving Kyma and modularizing it further. Shortly after our last release, we now introduce the next update including many changes.\n\n<!-- overview -->\n\n## Application Connector\n\nWith the overall strategy to modularize Kyma as a whole, the Application Connector went through this change as well:\n\n- The Application Connector has been modularized. All components have been moved to a separate Helm chart and are no longer a part of the Core. This also includes changes in the naming of the elements. The Gateway service has been renamed to the Proxy service.\n- The Application Connector tests were extended with an additional flag for skipping SSL verification. It allows testing functionality against the Kyma cluster with a self-signed certificate.\n- The Connector service now returns a client certificate as a full chain with a server-side certificate. The verification of a client certificate is now possible.\n\n## Serverless\n\nMaking use of serverless concepts and technologies is what makes Kyma so great. Hence, we made a number of improvements in this area:\n\n- The Lambda UI was extended with the option to set Environment Variable Prefixes for Service Bindings. This allows binding multiple services with the same set of environment variables.\n- The Lambda UI was extended with the option to set JWK Authentication Properties. This allows defining specific Token Issuers.\n\n![](./jwks_authentication_1.png)\n\nAuthentication is enabled by default, and you can change JWKs URI using the **Load Present** option.\n\n![](./jwks_authentication2_2.png)\n\n- The Lambda UI was extended with an alert informing you if you are about to leave the Lambda UI with unsaved changes.\n\n![](./unsaved_changes_3.png)\n\n## Service Catalog\n\nWe did a lot of great enhancements to the Kyma Service Catalog:\n\n- Support for &quot;namespaced&quot; service catalogs. This means a possibility to register brokers for specific Namespaces only. The Catalog has an additional Brokers view in the Environment context. The view lists Service Brokers registered only for a given Namespace.\n  - [Here](/docs/0.5/components/service-catalog#getting-started-getting-started) you can view a new getting started guide about brokers registration.\n  - [Here](/docs/0.5/components/service-catalog#architecture-architecture) you can find an architecture diagram for the Namespace catalog.\n  \n  - The instance list and details views now work on web-sockets. This significantly improves the user experience because all changes to the instance, and most important its status, are updated in real-time in the view without the need for a page refresh. If you are interested in how we managed to accomplish that on a GraphQL layer with Istio and token verification, feel free to contact us on [Slack](http://slack.kyma-project.io).\n\n- A completely new binding flow has been implemented in the instance view. Based on your feedback, we made sure it is far less complex than before:\n  - Names for resources are autogenerated.\n  - When binding to the application, you do not have to decide if you want to bind to Deployment first or maybe to the Function, as all applications are listed in one component for your convenience.\n  \n  ![](./bind_application_1.png)\n  \n  - You can set a proxy for instance environment variables that are injected to your application.\n  \n  ![](./bind_application_3.png)\n  \n  - The status of credentials (ServiceBinding) and application binding (ServiceBindingUsage) is now visible. Even more, if you are viewing the bindings and in the meantime the credentials creation fails, the UI indicates the failure and adds a red marker on the tab. This way, you know something wrong happened and you need to check the tab.\n  \n  ![](./service_instances.png)\n  \n  ![](./bound_applications.png)\n  \n  - The UI supports the ServiceBinding creation if the owner of the service class specified a custom schema for binding creation.\n  - The cleanup of resources got improved. When you decide to delete some Credentials, the related application bindings are also deleted.\n- [Helm Broker](/docs/0.5/components/service-brokers#configuration-configure-helm-broker) supports many bundle repositories.\n- The new [**bundles**](https://github.com/kyma-project/bundles) repository enables Kyma to install addons such as brokers, showcases and local services.\n\n  - It contains bundles which the Helm Broker uses. It allows you to choose a set of bundles and configure the Helm Broker. You can also define your own bundles.\n  - Have a look at the [getting started document](https://github.com/kyma-project/bundles/blob/master/docs/getting-started.md) which explains how to create your own bundles repository.\n\n## Eventing\n\nAs eventing is one of the core principles Kyma is built on, we enhanced the functionality further:\n\n- It is now possible for developers to change their subscriptions and fix any typos or wrong configurations. It allows avoiding a situation where, for example, specifying a wrong URL causes wrong Event type to be updated. Click [here](/docs/0.5/components/event-bus#details-subscription-updates) to see how this can be done.\n\n- A bug, which caused that it was impossible to create two subscriptions with same name in different Namespaces, has been fixed.\n- Kyma now enables a developer to understand better how to leverage tracing for handling problems in the Event flow.\n\n### Known issues\n\nThere is a known intermittent Event trigger issue that causes the Events to not be delivered to lambdas or microservices.\n\nWe are aware of this issue and we will provide a fix for it as part of the [issue](https://github.com/kyma-project/kyma/issues/1687).\n\n#### Technical details\n\nThe issue lies in the subscription validator application. The application sometimes does not react when Kubernetes notifies it about creating new EventActivation instances.\n\n#### Workaround\n\nAs a temporary fix for this issue, delete the sub-validator Pod by running the following command:\n\n```bash\n\n$ kubectl delete pod $(kubectl get pods -l app=sub-validator -n kyma-system --output=jsonpath={.items..metadata.name}) -n kyma-systemC\n```\n\nAfter deleting the sub-validator Pod, Kubernetes recreates it automatically, and the issue should be fixed.\n\n## Security\n\nWe constantly work on improving the security of Kyma:\n\n- Documentation is now available on how to [update TLS certificates](/docs/0.5/components/security#details-update-tls-certificate).\n- The static user password for administrators is generated during installation and stored in the secret admin-user in the `kyma-system` Namespace. You can add further static users by providing your own Kubernetes secrets. Use this [link](/docs/0.5/components/security#details-manage-static-users-in-dex) to learn more.\n\n## Service Mesh\n\nIstio is now installed from official Istio charts. Istio customization was externalized into a separate component: [istio-patch](/docs/0.5/components/service-mesh#details-istio-patch). As a result, Kyma can be installed on top of an existing [Istio installation](/docs/0.5/root/kyma#installation-installation-with-custom-istio-deployment) (in the supported version).\n\n## Installation\n\nThe installation documentation was reorganized and grouped under [Installation](/docs/0.5/root/kyma#installation-installation).\n\n## Monitoring\n\nTo keep track of your Kyma systems, we enhanced the following:\n\n- An Alert is defined if an Pod is not restarting in one of the system Namespaces. This enables basic monitoring of the `kyma-system`.\n\n![](./alerts_9.png) \n\n- Promehteus alerting webhooks are exposed in the configuration. This enables the integration of Prometheus alerting in custom dashboards.\n- HTTP configuration now allows to define different ways of authentication in the face of the webhook. Basic auth, Tls and Baere token are some of them.\n\n### Known Issues\n\nThe Istio-related dashboards are not showing any data. For details, see [issue](https://github.com/kyma-project/kyma/issues/1724).\n\n#### Workaround \n\nNone\n\n## Logging\n\nKyma was extended with Persistence Layer for logging based on OK Log.\n\n## Tracing\n\nThe Tracing UI is now linked from within the Kyma Console UI to make it easier to access the tracing information. Furthermore, it is now possible to compare two traces to track the process. You can get an answer to the question: &quot;Why did something unexpected happened?&quot; You can find more details [here](/docs/0.5/components/tracing#details-trace-comparison).\n\n## Console\n\n- You can extend the Console to add custom micro front-ends either for a single environment or for cluster-wide administration. More details can be found [here](/docs/0.5/components/console#details-ui-extensibility).\n\n![](./console_1.png) \n\n- It is now possible to view and edit **ConfigMaps**:\n\n![](./console_2.png) \n","excerpt":"We constantly work improving Kyma and modularizing it further. Shortly after our last release, we now introduce the next update including many changes.","fields":{"slug":"/blog/2018/11/20/release-notes-05","assetsPath":"/assets/blog-posts/2018-11-20-release-notes-0.5/","date":"November 20, 2018","postInfo":{"fileName":"release-notes-05","year":2018,"month":11,"day":20}},"frontmatter":{"title":"Release 0.5 is available!","author":{"name":"Marco Dorn, Product Manager @Kyma"},"tags":["release-notes"],"type":"release","releaseTag":"0.5.0","redirectFrom":["/blog/release-notes-05"]}},{"id":"d9e57d72-3d91-563e-8ca8-5cd953996913","rawMarkdownBody":"\nIs Tesla Model X still a car, or is it a smart device? This might sound like a silly question, as the Model X has all of the usual \"car\" traits: an engine, metal bodywork, rims, tires, etc. On paper, the Model X might look like yet another car, but its uniqueness, aside from the electric engine, of course, lies in the software innovation that Tesla brings to the market. The ability to update the onboard software over-the-air and bring new features and functionalities to a car is a key factor that attracts consumers to buy Teslas. This revolution shows that innovation, even in industries as old as car manufacturing, is an important and powerful tool that allows to penetrate the market faster. Many of the leading car manufacturers are still trying to catch up with Tesla's success. Businesses need to leverage new technologies, take on innovations and transform digitally to be competitive. Simply put - innovate or perish!\n\n<!-- overview -->\n\nOn our ongoing innovation journey, we have identified several challenges for companies that go through this process of digital transformation:\n\n- **Heterogeneous Product Portfolio:** Single-vendor solutions are a thing of the past. (ref: https://www.thoughtworks.com/de/insights/blog/implications-tech-stack-complexity-executives). Companies don't want to invest in a single vendor product stack. They need to have best of breed products. Heterogeneity is unavoidable, so software product companies need to be ready to embrace the diversity and be open to work hand in hand with the dreaded competition.\n\n- **Monolithic deployment:** Monolithic applications can be great, but as the size grows, so does the complexity. This slows down the time to market, adds complexity to testing and shipping, complicates adding new features or extensions, and makes scaling difficult. Currently many of the best available products are still monolithic.\n\n- **Cloud-native:** Companies are moving faster towards using cloud-native open source stacks for production (ref: https://www.cncf.io/blog/2018/08/29/cncf-survey-use-of-cloud-native-technologies-in-production-has-grown-over-200-percent/). The Cloud Native Computing Foundation (CNCF) describes \"cloud-native\" software as one that is container-packaged, dynamically orchestrated and managed, and microservice-architected. Building cloud-native solutions is not easy. It requires better inter-service communication, proper traceability of transactions across solutions, logging across several services and solutions, proper monitoring and operating hundreds of services.\n\n- **The \"need for speed\":** Some of our customers say that \"speed is the new ultimate currency\". It's challenging to develop at a faster pace while facing the challenges of heterogeneity, monolithic deployment and trying to teach every developer in the organization the ways of cloud-native development.\n\nKyma has worked hard to overcome these challenges and support businesses throughout their digital transformation journey. Kyma is an open-source project designed natively on Kubernetes. It allows you to extend and customize cloud-based and on-premise enterprise applications in a quick and modern way, using serverless computing and microservice architecture.\n\nThis way, Kyma enables businesses to:\n\n- **Be open and extendable:** Using any Open Service Broker API specification-compatible service is a \"plug and play\" affair which gives you access to a catalog of reusable, integrated services for developers, both in-house and 3rd party. This allows you to use business services and technical backing services from different vendors to extend your existing applications.\n\n- **Be seamlessly connected:** The simplified approach to secure connectivity between systems allows seamless API and event integration of the existing applications. You can manage and orchestrate existing applications to build common extension solution even in heterogeneous landscapes. A single connection gives you multiple possibilities.\n\n- **Use any programming language:** Develop microservices or serverless functions using any programming language and enjoy more hiring options as a result.\n\n- **Bring speed and agility:** Businesses don't have to wait for months or years to deliver specific scenarios or use cases. With Kyma the delivery times are faster (within days or weeks) and the entire process costs less.\n\n- **Accelerate innovation:** In many cases innovation starts as a test or a trail. In such cases, both speed and low cost are of great importance. Kyma enables businesses to start working on their solutions immediately instead of finding the right technology and integration options first and brings the startup culture to enterprises.\n\nKyma is available on [GitHub](https://github.com/kyma-project) and open for developers to contribute. It allows businesses to build and advance products and services they offer to make them even better on the marketplace. This empowers companies to stand out, to increase revenue, and to be more like Tesla.\n","excerpt":"Is Tesla Model X still a car, or is it a smart device? This might sound like a silly question, as the Model X has all of the usual \"car\" traits: an engine, metal bodywork, rims, tires, etc. On paper, the Model X might look like yet another car, but its uniqueness, aside from the electric engine, of course, lies in the software innovation that Tesla brings to the market. The ability to update the onboard software over-the-air and bring new features and functionalities to a car is a key factor that attracts consumers to buy Teslas. This revolution shows that innovation, even in industries as old as car manufacturing, is an important and powerful tool that allows to penetrate the market faster. Many of the leading car manufacturers are still trying to catch up with Tesla's success. Businesses need to leverage new technologies, take on innovations and transform digitally to be competitive. Simply put - innovate or perish!","fields":{"slug":"/blog/2018/10/18/accelerate-innovation-with-kyma","assetsPath":"/assets/blog-posts/2018-10-18-accelerate-innovation-with-kyma/","date":"October 18, 2018","postInfo":{"fileName":"accelerate-innovation-with-kyma","year":2018,"month":10,"day":18}},"frontmatter":{"title":"Accelerate innovation with Kyma","author":{"name":"Gopi Kannappan, Head of Product Management at Kyma"},"tags":["kyma","innovation","digitaltransformation","agility","cloudnative","opensource"],"type":null,"releaseTag":null,"redirectFrom":["/blog/accelerate-innovation-with-kyma"]}},{"id":"0e75b816-dcf1-5b0a-8d71-6adc9243d1f2","rawMarkdownBody":"\nIt has been a while since we introduced Kyma to the open-source community. Many things have changed in the project since its [announcement](/blog/introducing-project-kyma) in July.\nNow that we have our first official release, it is time to sum up what we have recently worked on.\n\n<!-- overview -->\n\n## Security\n\nIn the area of security, we focused on our [API Gateway](/docs/0.4/components/api-gateway) that you can use to expose your API easily and in a secure way. We improved the following things:\n* When you create the `Api` kind, `hostname` is validated to make sure you provided the correct domain and that there are no duplicates.\n* The [architecture](/docs/0.4/components/api-gateway#architecture-architecture) of the API Gateway component has changed. The services are now exposed by the Istio Gateway and the Istio Virtual Service, instead of the Istio Ingress.\n* You can create several APIs for a single service in the Console UI by creating the API for a specific service in the **Services** view, or several different APIs from the **APIs** view.\n![](./multi-api.png)\n\n\n## Service Catalog\n\nThe Service Catalog, that is one of our key features, has undergone a lot of improvements over the last months, mainly thanks to your valuable feedback. To be more specific, the Console UI part of the Catalog was improved through the following changes:\n- The multi-step service provisioning wizard was replaced with a one-step wizard.\n- You can preview the Instance's parameters by clicking the Instance's Plan name both on the list of all Service Instances and in the given Service Instance's details.\n![](./instance_params.png)\n- The Service Catalog's left navigation was removed and filtering is now available next to the search box. In its current form, it aims to support new filter options that will be introduced in the future. It also scales much better now when there are many values provided in the filters.\n![](./filter.png)\n\nThe Console UI is not everything, however. These are further changes:\n- The Catalog was upgraded to v0.1.34 that supports the Environment-wide resources (ServiceBroker, ServiceClass, ServicePlan). The related Console views do not support it yet.\n- A new dashboard was provided in Grafana to improve Service Catalog-related operations.\n![](./sc_grafana_dashboard.png)\n\n## Application Connector\n\nThe Application Connector, that allows you to connect external systems with Kyma, underwent these major improvements:\n- Management of the Remote Environments (RE) is no longer done through the Helm chart. Instead, we have a controller that reacts to changes in the RE and sets up the whole Environment.\n- The [RemoteEnvironments CRD](/docs/0.4/components/application-connector#custom-resource-remoteenvironment) was enhanced with an extra label field. Now, you can mark the purpose of the Remote Environment in a flexible way.\n- The OAuth token caching functionality was added to the Application Connector.\n\n## Logging\n\nKyma has a new component to enhance its logging capabilities. This component is based on [Logspout and OK Log](/docs/0.4/components/logging).\n\n## Monitoring\n\nThrough the proper Grafana configuration, all dashboards created by you in the runtime are persistent, and Pods restarts do not remove them.\n\n## Event Bus\n\nOur Kyma would not be so great without the support for the asynchronous communication between services. This is what we improved in that scope:\n- We enabled an Event lifecycle for storing Events in a cluster. By default, it is set to 24h, but you can configure the lifecycle in the NATS Streaming's StatefulSet by changing the `max_age` value.\n- We added the documentation for the service programming model for the Event subscribers. Read more [here](/docs/0.4/components/event-bus#details-service-programming-model).\n\n## Tracing\n\nAs you know, Kyma uses Jaeger as the tracing back-end. To improve its usage, we:\n- Secured the Jaeger UI so that you could access it easily without port-forwarding. Read more about [Jaeger](/docs/0.4/components/tracing#overview-overview).\n- Created an example on how to enable tracing for an application. Read more [here](https://github.com/kyma-project/examples/tree/master/tracing).\n\n## Service Mesh\n\nAt the moment, Kyma is using Istio [1.0.1](https://istio.io/about/notes/1.0.1/).\n\n## Installation\n\nThe following improvements were done in the installation area:\n- The [Kyma installation on a Google Kubernetes Engine cluster](https://github.com/kyma-project/kyma/blob/0.5-rc/docs/kyma/docs/032-inst-gke-installation.md) is now possible mainly due to the implementation of the [API Server Proxy](https://github.com/kyma-project/kyma/tree/0.4.1/components/apiserver-proxy) component.\n- You can [override values in Helm charts](https://github.com/kyma-project/kyma/blob/0.5-rc/docs/kyma/docs/044-gs-installation-overrides.md) using config maps annotated with the `installer: overrides` label.\n- The extended [`Installation ` custom resource](/docs/0.4/root/kyma#custom-resource-installation) was enabled to allow you to provide a declarative list of modules that will be installed during the Kyma provisioning process.\n\n## Documentation\n\nA few weeks after the Kyma announcement, we published the official documentation on our `https://kyma-project.io/docs/` website. It is worth remembering, however, that this is not the only place where you can read the docs. Since the very beginning, the Kyma documentation has been an integral part of the Console UI, so whenever you provision a Kyma cluster, docs for a given Kyma version are always there for you. In the last few months we have improved the following features in that area:\n- The [Kyma overview](/docs/0.4/root/kyma#overview-overview) documentation and many other sections, like consistency of the [Custom Resource reference](/docs/0.4/components/service-catalog#custom-resource-custom-resource) documents.\n- The general feel and look of the documentation, its navigation, consistency, and the readability of the content.\n![](./docs-ui.png)","excerpt":"It has been a while since we introduced Kyma to the open-source community. Many things have changed in the project since its announcement in July.\nNow that we have our first official release, it is time to sum up what we have recently worked on.","fields":{"slug":"/blog/2018/10/10/release-notes-041","assetsPath":"/assets/blog-posts/2018-10-10-release-notes-0.4.1/","date":"October 10, 2018","postInfo":{"fileName":"release-notes-041","year":2018,"month":10,"day":10}},"frontmatter":{"title":"Release 0.4.1 is out!","author":{"name":"Lukasz Gornicki, Product Owner @Kyma"},"tags":["release-notes"],"type":"release","releaseTag":"0.4.1","redirectFrom":["/blog/release-notes-041"]}},{"id":"6f868b76-1afb-507e-bd14-c851040b6f48","rawMarkdownBody":"\n[SAP TechEd](https://events.sap.com/teched/en/home) is the premier SAP technology conference, which takes place every year on 3 continents and is an excellent source of news on the technical and platform offerings of SAP. In 2018 the conference venues are located in Las Vegas, Barcelona, and Bangalore.\n\n<!-- overview -->\n\n![Kyma at TechEd](./kyma-at-sap-teched.jpg)\n\nAs the centerpiece of a number of implementation projects, and the cornerstone of the upcoming SAP Cloud Platform Extension Factory Lab Preview, Kyma must be represented by the best ambassadors on each of the three events. These people will represent the product, answer all questions and be the first point of contact for all the attendees interested in Kyma.\n\n- For the [Las Vegas (02-05.Oct)](http://events.sap.com/teched-2018-usa/en/home) event the ambassadors include myself ([@evilyeti](https://twitter.com/evilyeti)), Gopi Kannappan ([@gopikannappan](https://twitter.com/gopikannappan)) and Hisar Balik. You can find us hanging around the SAP Cloud Platform booths and on the C/4HANA sessions we have on the agenda.\n\n- [For the Barcelona (23-25.Oct)](http://events.sap.com/teched-2018-emea/en/home) event the ambassadors are Marco Dorn ([@mado0803](https://twitter.com/mado0803)), Stanimir Ivanov ([@s1vanov](https://twitter.com/s1vanov)) and Lukasz Szymik ([@lszymik](https://twitter.com/lszymik)) who will also be available either at the SAP Cloud Platform booths or at the C/4HANA sessions they'll run.\n\n- Last but not least – for the [Bangalore (28-30.Nov)](http://events.sap.com/teched-2018-india/en/home) event we have Johannes Engelke ([@quablab](https://twitter.com/quablab)) and Sayan Hazra as the ambassadors. They'll make sure to spread the word about Kyma, and tell the attendees all about the extensibility of the product, and the Serverless functions.\n\nWe're super excited to see the Kyma story grow and more ideas come onboard. Feel free to meet all of the ambassadors and talk about Kyma and software extensibility, or any ideas you might have around these topics. The conversation might get you some cool merch as we might have some stickers to share with our lovely guests. Don't be shy! See you there!\n","excerpt":"SAP TechEd is the premier SAP technology conference, which takes place every year on 3 continents and is an excellent source of news on the technical and platform offerings of SAP. In 2018 the conference venues are located in Las Vegas, Barcelona, and Bangalore.","fields":{"slug":"/blog/2018/10/4/blog-post-kyma-at-teched","assetsPath":"/assets/blog-posts/2018-10-04-blog-post-kyma-at-teched/","date":"October 04, 2018","postInfo":{"fileName":"blog-post-kyma-at-teched","year":2018,"month":10,"day":4}},"frontmatter":{"title":"Kyma at SAP TechEd","author":{"name":"Krassimir Semerdzhiev, Kyma Open Source Strategist"},"tags":["kyma","ambassadors","event","extensibility","serverless","teched"],"type":null,"releaseTag":null,"redirectFrom":["/blog/blog-post-kyma-at-teched"]}},{"id":"0e0850e5-2d25-5079-b0e4-81be043d391d","rawMarkdownBody":"\n[Knative](https://github.com/Knative/) is an important new project in the cloud-native world that was announced as a \"Kubernetes-based platform to build, deploy, and manage modern serverless workloads.\" It is an opinionated approach covering the best practices around three areas of developing cloud-native applications: building containers (and functions), serving (and dynamically scaling) workloads, and eventing. Knative is an open-source set of components and is being actively developed by Google in close partnership with Pivotal, IBM, Red Hat, and SAP.\n\n<!-- overview -->\n\nSimilarly to Kubeless, Knative provides a set of building blocks to simplify the use of Kubernetes and Istio for managing and operating lambda functions. Kubeless takes some code, builds an image out of it, and starts it on Kubernetes. Knative is doing the same by following a more modular approach, allowing different components to be pluggable and adaptable to different deployment scenarios.\n\nBecause of this more flexible approach, we are planning to replace the current Kubeless-based Lambda Functions in Kyma with a Knative-based implementation. To provide the same commodity to which users are used with Kubeless, we have to do some extra work.\n\n## Architecture\n\nSo far, the architecture is not shaped out fully. Many details have to be sorted out and defined. The idea is to use Knative as it is and try to bridge the existing gaps using custom components, other available open-source projects (e.g. [Riff](https://projectriff.io/)), or pushing enhancements to the Knative community. In the end, Knative should provide the same functionality as Kubeless is doing today.\n\n![Serverless Kyma Architecture](./3-serverless-kyma-architecture.png)\n\nThe core of the architecture are the Knative `Serving` and `Build` components. As a Kyma-related component, a custom build template is required to provide the function interface available in Kubeless.\n\nBesides the build template, a custom Docker registry is required to store the build artifacts, and a storage solution to store the function code. This could be either a Git repository or a blob storage like Minio or S3. In the end, customers should be able to decide if they like to keep the function code in their own Git repository or if they prefer to store it in a storage solution provided by Kyma.\n\n## Implementation\n\nAs the implementation involves multiple components and will involve breaking changes, we will keep Kubeless till we are sure that the new version is working as expected. In the first step, Knative `Serving` and `Build` components will be integrated as optional Kyma modules. If this is working, other parts, such as the Docker registry, blob storage, and build template, will be enabled step by step. As the last step, a new (forked) lambda UI will be created and adjusted to the Knative needs. As soon as everything is working fine, Kubeless will fade out. Knative will be the new default component and Kubeless will be used as long as there are still any old deployments available. As soon as we are sure that nobody is using the old Kubeless-based implementation, we will remove it completely.\n","excerpt":"Knative is an important new project in the cloud-native world that was announced as a \"Kubernetes-based platform to build, deploy, and manage modern serverless workloads.\" It is an opinionated approach covering the best practices around three areas of developing cloud-native applications: building containers (and functions), serving (and dynamically scaling) workloads, and eventing. Knative is an open-source set of components and is being actively developed by Google in close partnership with Pivotal, IBM, Red Hat, and SAP.","fields":{"slug":"/blog/2018/9/27/replacing-kubeless-with-knative","assetsPath":"/assets/blog-posts/2018-09-27-replacing-kubeless-with-knative/","date":"September 27, 2018","postInfo":{"fileName":"replacing-kubeless-with-knative","year":2018,"month":9,"day":27}},"frontmatter":{"title":"Replacing Kubeless with Knative","author":{"name":"Johannes Engelke, Kyma Product Owner Serverless"},"tags":["kyma","cloud","Knative","application","extension","serverless","kubeless"],"type":null,"releaseTag":null,"redirectFrom":["/blog/replacing-kubeless-with-Knative"]}},{"id":"572eaa32-24de-588f-a46e-cb8000a43ad9","rawMarkdownBody":"\nNow that Kyma is out there available to the world you are most probably keen on testing and implementing your own scenarios leveraging Kyma. Well, we are happy to introduce you to a getting started guide for developers which is [a sample application based on Spring Boot](https://github.com/kyma-incubator/examples/tree/master/personservice) showing the features on Kyma.\n\n<!-- overview -->\n\nThis hands-on guide provides an end-to-end example application implementation in Java and Spring Boot running on Kyma. In the end state, you as a developer will understand all the features Kyma delivers. To summarize, this guide teaches you how to:\n\n- Deploy the application locally to Kyma (based on minikube) or to an actual Kyma cluster \n- Connect your service to Kyma as an extension platform and run a scenario\n- Extend business applications with Kyma through event-driven, Lambda (serverless) functions\n- Bind your application to a brokered backing service\n- Add authentication and authorization\n- Leverage Kubernetes Self-Healing\n- Use tracing and logging support\n\nWe would like to hear your feedback. If you face any issues or have any comments while testing Kyma, feel free to report them on [GitHub](https://github.com/kyma-incubator/examples).  \n\nWe also invite you to join the Kyma community on [Twitter](https://twitter.com/kymaproject) and [LinkedIn](https://www.linkedin.com/company/kyma-project/). \n\nHave fun with Kyma! \n","excerpt":"Now that Kyma is out there available to the world you are most probably keen on testing and implementing your own scenarios leveraging Kyma. Well, we are happy to introduce you to a getting started guide for developers which is a sample application based on Spring Boot showing the features on Kyma.","fields":{"slug":"/blog/2018/9/24/start-with-person-service","assetsPath":"/assets/blog-posts/2018-09-24-start-with-person-service/","date":"September 24, 2018","postInfo":{"fileName":"start-with-person-service","year":2018,"month":9,"day":24}},"frontmatter":{"title":"Get started guide for developers on Kyma","author":{"name":"Andreas Krause, Kyma Cloud Software Enablement"},"tags":["kyma","cloud","native","application","extension","example","integration"],"type":null,"releaseTag":null,"redirectFrom":["/blog/start-with-person-service"]}},{"id":"1b2f5287-6c75-5d3b-8a55-dd619ede7731","rawMarkdownBody":"\nWhen Kyma was introduced to the public a few weeks ago at [Google Cloud Next ’18](https://cloud.withgoogle.com/next18/sf/), we talked about the strong partnership that we have with the Knative community. Kyma and Knative provide two complementary sets of building blocks, which together offer a powerful framework and a toolset to build cloud-native solutions on top of Kubernetes.\n\n<!-- overview -->\n\n![Kyma and Knative](./1-kyma-knative.png)\n\nIf you look at the Kyma source code right now, you might wonder why you are not finding many references to Knative. The answer is quite simple. In the last month and a half, the entire Kyma team has been working on restructuring the repositories, making them ready to go open source and removing all internal references and tool dependencies. We've done all of that from a stable branch.  \n\nIn parallel to those major changes, we have a fork with Kyma and Knative integrated. It was used to build some first proof-of-concept cloud-native solutions using Knative and Kyma deployed together. The fork is also the basis for our stage demo shown during [the project launch](https://www.youtube.com/watch?v=NaaGPGKyXEc&amp;t=42m50s). This was our first approach at combining the projects. As both Kyma and Knative are really young and going through a number of changes, some of our design decisions have not been optimal in retrospect. \n \nDuring the coming weeks, our plan is to refactor the current Kyma codebase and modularize it. Several functional components can then be installed optionally, which will certainly improve the experience when developing locally using for example [Minikube](https://kubernetes.io/docs/tasks/tools/install-minikube/). \n \nAs shared technologies such as [Istio](https://istio.io/) are concerned, we're going to provide needed configuration options so that Istio deployed with Knative will also support all Kyma's requirements. \n \nAnd finally, we are going to extract some components. For example, we'll extract Kyma eventing and fully integrate it with Knative eventing. We'll evaluate the possibility of contributing the Kyma eventing based on [NATS](https://nats.io/) streaming as a Knative compatible eventing implementation to the Knative project. Users of Knative and Kyma will than have the additional option of deciding which eventing implementation to use (e.g. as an alternative to the Knative provided Kafka based implementation). \n \nStay tuned for more updates! Remember! Your ideas and proposals are highly welcome. Don't be shy!  ","excerpt":"When Kyma was introduced to the public a few weeks ago at Google Cloud Next ’18, we talked about the strong partnership that we have with the Knative community. Kyma and Knative provide two complementary sets of building blocks, which together offer a powerful framework and a toolset to build cloud-native solutions on top of Kubernetes.","fields":{"slug":"/blog/2018/8/10/kyma-knative-progress-report","assetsPath":"/assets/blog-posts/2018-08-10-kyma-knative-progress-report/","date":"August 10, 2018","postInfo":{"fileName":"kyma-knative-progress-report","year":2018,"month":8,"day":10}},"frontmatter":{"title":"Kyma and Knative Integration - Progress Update","author":{"name":"Ralf Hofmann, Kyma Cloud Software Architecture"},"tags":["kyma","cloud","native","GoogleNext2018","knative","istio","kubernetes"],"type":null,"releaseTag":null,"redirectFrom":["/blog/kyma-knative-progress-report"]}},{"id":"780e2f5c-3438-5815-b6b1-085e46822a25","rawMarkdownBody":"\nAt SAP we typically deal with lots of enterprise software coming from a variety of different vendors. We've helped many of our customers and partners in all industries to model software to their needs and unique business processes. To meet the desire for flexibility, we see a growing demand for openness and modern architecture in this space. That's why we decided to spin the development of our new extension framework, Kyma, out in open source. We’d like to encourage all of you to take a look, get involved and lend a hand to expand Kyma to cover even more exciting extension scenarios.\n\n<!-- overview -->\n\nThe ideas and concepts in Kyma result out of long years of experience in customizing different SAP and SAP Hybris solutions. It lets you create serverless applications, mashups and micro services – all running on the underlying Kubernetes+Istio – both serving as the foundation of Kyma. On top we enable developers to quickly code small customization modules and extension apps, interweaved with the business logic of the extended enterprise application. \n\nAnd then [Knative](https://cloud.google.com/knative/) came into the picture. Build from the ground up to support, container-based and cloud-native applications – it provides building blocks for developers to build and deploy container-based serverless applications anywhere on Kubernetes. Sounds familiar, right? All of us at SAP were super excited to see that the Knative dev team has taken very similar technology decisions. It felt like a validation of our Kyma scenarios from one side as well as the technology vision we had in the broader SAP Hybris team from another. From that point on – it was clear that Kyma and Knative are bound to grow together. On our end – we’ve refactored Kyma to leverage Knative configuration, build and serving components already from the on-start. We dropped some of the overlapping components, making Kyma leaner and more streamlined. We got as well all-in involved in Knative, having the opportunity to work with the incredible Google Cloud team.\n\nA quote coming from the discussions, that stuck and made the whole Kyma team at SAP incredibly proud was:\n\n> \"SAP's extensive enterprise expertise and far-reaching commercial experience made for an ideal partnership as we developed Knative. SAP brought informed customer-driven use-cases to the table, helping us collectively shape the capabilities of Knative to meet the needs of real-world businesses. Knative and SAP Kyma make a perfect fit, and we look forward to the ongoing technical collaboration.” -DeWitt Clinton, Google Cloud\n\nThis collaboration gives us the chance to focus Kyma on the higher-level enterprise application connectivity and service consumption scenarios, relying on Knative for all the low-level infrastructure and development scenarios. \n\nWe strongly believe in open technologies and open collaboration. Our goal is to join forces with interested parties out there and to build the most flexible extension framework for any SaaS applications to be customized and extended.  \n\nGot you interested? Want to get involved? Get in touch with us via [Twitter](https://twitter.com/kymaproject), [GitHub](https://github.com/kyma-project) or our [Slack](http://slack.kyma-project.io) channel. We would also be very happy if you simply let us know your take on this!\n\nStay tuned for more updates... and have a great #GoogleNext2018!\n","excerpt":"At SAP we typically deal with lots of enterprise software coming from a variety of different vendors. We've helped many of our customers and partners in all industries to model software to their needs and unique business processes. To meet the desire for flexibility, we see a growing demand for openness and modern architecture in this space. That's why we decided to spin the development of our new extension framework, Kyma, out in open source. We’d like to encourage all of you to take a look, get involved and lend a hand to expand Kyma to cover even more exciting extension scenarios.","fields":{"slug":"/blog/2018/7/24/introduction-project-kyma","assetsPath":"/assets/blog-posts/2018-07-24-introduction-project-kyma/","date":"July 24, 2018","postInfo":{"fileName":"introduction-project-kyma","year":2018,"month":7,"day":24}},"frontmatter":{"title":"Introducing project Kyma","author":{"name":"Krasimir Semerdzhiev, Kyma Open Source Strategist"},"tags":["kyma","cloud","native","GoogleNext2018","knative","istio","kubernetes"],"type":null,"releaseTag":null,"redirectFrom":["/blog/introducing-project-kyma"]}}],"slidesBanner":{"bannerDuration":5000,"slides":[{"text":"Don't miss the session by Piotr Kopczynski at Helm Summit on September 11 at 15:47.","url":"https://helmsummit2019.sched.com/event/S8sS","startDate":"09/09/2019","endDate":"12/09/2019"}]},"locale":"en"}}}