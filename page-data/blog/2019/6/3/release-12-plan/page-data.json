{"componentChunkName":"component---src-views-blog-single-index-tsx","path":"/blog/2019/6/3/release-12-plan","webpackCompilationHash":"aefb7e842b40c338951f","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/2019/6/3/release-12-plan","post":{"id":"f2c2aac7-9f39-540d-b83e-81cc64f75fb0","rawMarkdownBody":"\nJust as we initially promised, the developers are working hard to deliver new features and improvements every four weeks. Our last release is already available for 3 weeks, which means that the next Kyma version will be available in about a week. This time around, the release gets its codename from a city with an incredibly rich history, one that bridges the gap (literally!) between the East and the West. Kyma 1.2 Istanbul has a very rich history of improvements and new features and continues to aid the users in bridging the gap between different pieces of software. What's in store for the 1.2 release? \n<!-- overview -->\n\nFirst, let's have a look at the new features. We received a lot of feedback about writing and testing lambdas in the Console UI. It is quite easy to copy and paste the code from the examples over to the UI, the developers complained that testing their own code requires more effort than that. They wanted an easy way to check how their functions work with the message data they will get from the triggering event. To help the developers check that, we will introduce a single UI view which allows to prepare a sample event payload based on the message schema, send it directly to a lambda function, and check the result. This new feature should significantly speed up the developers' feedback loop.\n\nAnother new feature we're working on is the possibility to make only the selected Service Classes of an Application registered in Kyma bindable. Let's say that your Application exposes many APIs with different permission levels, such as a view-only API and an admin API. With the new feature, the system administrator can decide what services and APIs are available in a given Namespace.\n\nInstallation is an area where we also plan to make several improvements. Our Kyma CLI graduated from Kyma Incubator and allows for a quick, simple, and platform-agnostic local installation of Kyma. Our local installation instructions are going to be updated to use this convenient tool. \n\nWe want to prepare better default configurations to limit the number of steps required to install Kyma. For example, we will remove `sed` commands from the installation manual. Our goal is to have a very streamlined installation process but at the same time keep the possibility to configure and adjust every tiny setting in Kyma components, which is made possible by our powerful Kyma operator - the Kyma Installer.\n\nAnother improvement for Kyma users working with Google Cloud Platform is a possibility to install Kyma directly from [GCP Marketplace](https://console.cloud.google.com/marketplace/details/sap-public/kyma) with just a few clicks. This cool feature is already available and allows you to install Kyma 1.1. Because of its limited configuration options, treat it more like a preview than a polished deployment option but also know that we're continuing our work on this topic.\n\nHere are some other things that will come in Kyma 1.2 Istanbul:\n- Defining limits and resource quotas when a Namespace is created through the UI.\n- Easily navigating to the external URL of your services exposed through API management.\n- Passing custom headers through eventing.\n- Configuration for replacing built-in NATS with external messaging middleware.\n\nYou can find all the items planned for the 1.2 release in our [Zenhub](https://app.zenhub.com/workspaces/kyma---all-repositories-5b6d5985084045741e744dea/reports/release?release=5cb59383709ee87123145468).\n\nKyma 1.2 Istanbul is scheduled for release on 13.06.2019. Keep an eye out for more Kyma news and updates on our blog. See you around! \n","excerpt":"Just as we initially promised, the developers are working hard to deliver new features and improvements every four weeks. Our last release is already available for 3 weeks, which means that the next Kyma version will be available in about a week. This time around, the release gets its codename from a city with an incredibly rich history, one that bridges the gap (literally!) between the East and the West. Kyma 1.2 Istanbul has a very rich history of improvements and new features and continues to aid the users in bridging the gap between different pieces of software. What's in store for the 1.2 release?","fields":{"slug":"/blog/2019/6/3/release-12-plan","assetsPath":"/assets/blog-posts/2019-06-03-release-1.2-plan/","date":"June 03, 2019","postInfo":{"fileName":"release-12-plan","year":2019,"month":6,"day":3}},"frontmatter":{"title":"Kyma 1.2 Istanbul scheduled for release on 13.06.2019","author":{"name":"Piotr Bochynski, Product Owner @Kyma"},"tags":["release"],"type":null,"releaseTag":null,"redirectFrom":["/blog/release-12-plan"]}},"assetsPath":"/assets/blog-posts/2019-06-03-release-1.2-plan/","previous":{"id":"082cc87f-9803-546a-a08c-4102706d71e8","rawMarkdownBody":"\nRecently, on our website, we released a new view called [Roadmap](https://kyma-project.io/roadmap/). Its main purpose is to raise the transparency of the project direction and enable features contribution.\n\n<!-- overview -->\n\n## Tough choice\n\nIt is not easy to choose the right open source tool. There are many different factors you need to take into account before you make the decision. Luckily, the Internet is full of ideas and suggestions on how to make that choice. For example, you can read the article [How to Choose the Best Open Source Software](https://towardsdatascience.com/how-to-choose-the-best-open-source-software-b1cbbe4f6398) to get some help.\n\n> Remember that the amount of commits, issues, and pull-requests (PRs) can be a signal of investment and commitment to a project.\n\nThese kind of articles are very helpful. When I started using open source projects as my dependencies, I quickly realized that not all of them are trustworthy and deserve investment. Unfortunately, these guides and articles always focus on me, on the person that performs research. It is always me who needs to do the review, search for information, check out contributors and review projects' backlog. This is relatively easy if you have to choose a small library for parsing `.yaml` files in a browser. Things get more complicated when you have to decide upon a solution on which you will run or extend your business applications. The size and complexity prevent you from good research. The number of PRs and issues clearly indicates a huge investment in the project, but you can only guess what will come next and how it will evolve. If you have to take a strategic decision, you need to know what the direction, vision and future development plans of a given solution are.\n\nWe wanted to improve in this area and make things easier for the Kyma community. We identified in Kyma different capabilities and shared our goal and vision for each of them. The capabilities have their own roadmaps which are in sync with one another and all together constitute an overview of what is going to happen in Kyma in the short and long term. We combined them all in one view called [Roadmap](https://kyma-project.io/roadmap/).\n\nThanks to this view you can clearly identify the areas of Kyma that are the most important for you, and see if the planned development goes in the direction you expect. If something is not the way you wanted, you can always share your opinion with us at our [Core SIG meetings](https://github.com/kyma-project/community/blob/master/collaboration/02-sig-core.md). Contact us especially if you notice that we are not fully transparent regarding a specific capability, and its roadmap is not properly maintained. Another way to make things better is to join us, and contribute.\n\n## Easier contribution\n\nBeing an open source user for a few years now, I noticed on many different channels that people want to start a contribution to a project, but they do not know what they could contribute. There is a common question: `I want to contribute to this project, what feature would be the most interesting for others?` This is yet another reason why we worked on this new view on our website. We don't want you to search and invent ideas for contribution. All you need is already there, in our Roadmap. You can just pick a feature that is planned for development, and go forward with a proposal and implementation. This way you know that you contribute to something that is important for Kyma and its future.\n","excerpt":"Recently, on our website, we released a new view called Roadmap. Its main purpose is to raise the transparency of the project direction and enable features contribution.","fields":{"slug":"/blog/2019/5/20/transparency-through-roadmap","assetsPath":"/assets/blog-posts/2019-05-20-transparency-through-roadmap/","date":"May 20, 2019","postInfo":{"fileName":"transparency-through-roadmap","year":2019,"month":5,"day":20}},"frontmatter":{"title":"Transparency and openness through a clear vision and roadmap","author":{"name":"Lukasz Gornicki, Community Manager and Core&Supporting Capability Owner"},"tags":["community"],"type":null,"releaseTag":null,"redirectFrom":null}},"next":{"id":"8563db8c-49cd-5fa4-ab83-eafbcc5b04e8","rawMarkdownBody":"\nIt's about time to sail our ship to Istanbul and see all of the new features and tweaks that come with the 1.2 release. This time around we focused on streamlining the installation flow, providing a simpler way of testing lambda functions, giving more power and flexibility to Kyma Eventing, migrating to a new version of Istio, and providing even more useful documentation.\n\n<!-- overview -->\n\nThe highlights of Kyma 1.2 Istanbul include:\n\n- [Streamlined installation](#installation) - We enabled platform-agnostic local installation with the Kyma CLI, enabled Kyma installation through GCP Marketplace, and simplified all cluster installation flows.\n- [Testing lambda functions in the UI](#testing-lambda-functions-in-the-ui) - We added an option to test lambda functions through the Console UI.\n- [Migration to Istio 1.1.6](#service-mesh) - We migrated to a new, more secure and stable version of Istio.\n- [Migration to Istio in the Application Connector](#migration-to-istio) - We moved from NGINX Ingress to Istio in the Application Connector.\n- [Configuration for using different messaging middleware](#choose-and-configure-a-custom-messaging-middleware) - We added configuration that allows using different messaging middleware in Kyma Eventing.\n\nSee the overview of all changes in this release:\n\n- [Application Connector](#application-connector) - Migration to Istio, support for custom headers and query parameters in authentication requests\n- [Console](#console) - Testing lambda functions through the UI, more configuration options available at the moment of Namespace creation\n- [Installation](#installation) - Local installation with Kyma CLI, Kyma available trough GCP Marketplace, streamlined cluster installation flows\n- [Documentation](#documentation) - New configuration, troubleshooting, and Headless CMS metadata documents, tutorial for customizing the Documentation view in the Console UI, testing bundle with sample documentation\n- [Eventing](#eventing) - Choosing and configuring a custom messaging middleware, sending custom metadata with published Events, an example for triggering microservices with Events\n- [Observability](#observability) - Early version of Kiali added to Istio\n- [Service Mesh](#service-mesh) - Istio update to version 1.1.6\n\nRead about a known issue for [Observability](#known-issues).\n\n> **CAUTION:** Before you upgrade to Kyma 1.2, read the [Migration Guide](https://github.com/kyma-project/kyma/blob/release-1.2/docs/migration-guides/1.1-1.2.md) which describes necessary manual actions required by the Event Bus, the Asset Store, and the Application Connector.\n\n---\n\n## Application Connector\n\n### Migration to Istio\n\nFrom the very beginning of the Kyma project, the Application Connector has been exposed using the NGINX Ingress. After the recent changes in Istio 1.x which included support for client certificates, we decided to migrate to Istio as did the rest of Kyma components. We are proud to announce that the migration is complete and we are already benefiting from a number of advantages including easier maintenance and a smaller number of components in the implementation.\n\nRead [this](/docs/1.2/components/application-connector/#architecture-architecture) document to learn more about the role Istio plays in the Application Connector.\n\n### Custom headers and query parameters in authentication requests\n\nTo facilitate the integration of APIs that require sending additional headers and query parameters with every request to an external system, we allow the developers to provide a custom list of the headers and query parameters when registering an API in the Application Registry. The Proxy service reads this configuration and enriches each call from an API to an external service with the required items.\n\nRead [this](/docs/1.2/components/application-connector/#tutorials-register-a-secured-api-specify-custom-headers-and-query-parameters-for-authentication-requests) document to learn more.\n\n## Console\n\n### Testing lambda functions in the UI\n\nNow you can test your lambda functions directly in the Console UI. Use any of the Event samples available in your Namespace or any custom payload to dry–run a function before connecting it to your live system's business events.\n\n### More configuration options at the moment of Namespace creation\n\nUsers can now configure more of the important Namespace options when they create it using the UI. The available options include setting memory consumption limits and choosing whether Istio should handle all of the communication between Pods in the Namespace.\n\n## Installation\n\n### Kyma available on GCP Marketplace\n\nDeploying on GKE is now easier than ever as you can get a fully functional Kyma deployment with `http://xip.io/` straight from the GCP Marketplace. Follow [this link](https://console.cloud.google.com/marketplace/details/sap-public/kyma) to find Kyma on the Marketplace, read [this](/docs/1.2/root/kyma/#installation-install-kyma-on-a-cluster) document to get detailed installation instructions, and watch [this video](https://www.youtube.com/watch?v=hxVhQqI1B5A) for a detailed walkthrough. Enjoy!\n\n### Platform-agnostic local deployments with Kyma CLI\n\nOur very own [Kyma CLI](https://github.com/kyma-project/cli) graduated from the Incubator and became an integral part of Kyma with the 1.2 release. From now on you can use simple `kyma` commands to easily deploy Kyma on your local machine, no matter what OS you're running - all you have to do is install our proprietary CLI tool. The local installation flow is now updated to use the CLI and we are retiring the old installation approach that used custom scripts.\n\nTo experience the convenience the Kyma CLI brings to the table, follow [our documentation](/docs/1.2/root/kyma/#installation-install-kyma-locally) to install Kyma on your machine.\n\n### Simpler cluster installation\n\nThe existing cluster installation flows were significantly simplified. The `sed` commands and the cluster configuration template file are now gone in favor of a set of `kubectl` calls. Now you simply set up your cluster, apply the desired configuration with `kubectl`, and wait for the magic to happen. For more details, see the [installation documentation](/docs/1.2/root/kyma/#installation-installation).\n\n## Documentation\n\n### Configuration documents for components\n\nAfter preparing a set of generic configuration documents in the last release, this time around we focused on specific Kyma components. The idea was to create configuration documents that list all configurable parameters from the `values.yaml` file of each of the components' charts and sub-charts that you can configure with overrides. Not all components have their **Configuration** documents ready, but you can expect full coverage in the near future.\n\n### Troubleshooting guides\n\nAs we interact with the community, we take note of recurring issues and misunderstandings that affect different components. We decide to gather these cases under the **Troubleshooting** documentation type to help the users deal with the most common issues easily. The troubleshooting documents are now available for the [Service Mesh](/docs/1.2/components/service-mesh/#troubleshooting-troubleshooting) and the general [Kyma](/docs/1.2/root/kyma/#troubleshooting-troubleshooting-overview) topic.\n\n### Markdown documents in Headless CMS\n\nIf you've ever had any doubts regarding what the structure of a Markdown document processed by Headless CMS should look like, we come with a solution. See the [document](/docs/1.2/components/headless-cms/#details-markdown-documents) describing the required metadata and content of a Markdown file.\n\n### How to modify the Documentation view in the Console UI\n\nWe prepared a tutorial that shows how to adjust the Documentation view in the Console UI. Based on it, you create a new Prometheus documentation section that contains Concepts and Guides topics and a set of Markdown subdocuments. [Try it](/docs/1.2/components/headless-cms/#tutorial-add-new-documents-to-the-documentation-view-in-the-console-ui) on your own.\n\n### Testing bundle with sample documentation\n\nThe testing bundle is now enriched with [sample documentation](https://github.com/kyma-project/addons/tree/master/addons/testing-0.0.1/docs). There are examples of Markdown documents together with OpenAPI and AsyncAPI specifications. See the testing bundle for details on how different document types render in the Console UI.  \n\n\n## Eventing\n\n### Choose and configure a custom messaging middleware\n\nOut of the box, Kyma comes with NATS Streaming as the default messaging middleware. With this release, we're giving you the tools to choose your own messaging middleware that best fits your needs from the usage, volume, and costs perspective. The only requirement is that the middleware must have Knative eventing-based [ClusterChannelProvisioner](https://knative.dev/docs/eventing/channels/) available. Compatible solutions include Google PubSub, Kafka, and NATSS.\n\n### Sending custom metadata with published Events\n\nThe applications sending Events to Kyma can now send additional context or metadata by sending headers with the `ce-` prefix, for example, `ce-correlation-id`. These headers are delivered to the lambda function.\n\n### Example for triggering microservices with Events\n\nWe prepared a self-contained example that shows how to configure an Event trigger for a microservice deployed in Kyma. This is extremely useful for applications written in Java which want to use Events as a trigger.\n\n\n## Observability\n\n### Early integration of Kiali\n\nEarly integration of Kiali is available as part of Istio. To enable Kiali, ensure that the monitoring module is installed and set the **kiali.enabled** parameter to `true`. The Kiali UI will be accessible under the `kiali` subdomain. The early integration is based on static user security. To learn how to get the Kiali UI password, see [this](https://github.com/kyma-project/kyma/tree/master/resources/istio) document.\n\n### Known issues\n\nKiali is not accessible after installation when enabled as part of the Installer configuration. It should be accessible on Minikube at `https://kiali.kyma.local`.\nTo access it this way, use the workaround for now and add the `kiali` prefix to the **hosts** attribute in the `kiali-virtualservice` resource:\n```\nkubectl -n istio-system edit virtualservices kiali-virtualservice\n```\n```\nhosts:\n- kiali.kyma.local\n```\n\n## Service Mesh\n\n### Istio updated to 1.1.6\n\nThe new release comes with Istio updated to 1.1.6. Previously Kyma used version 1.1.0, but due to a security issue and problems with the Ingress Gateway, we moved to a newer version. The update makes the Service Mesh more secure and stable - the Ingress Gateway issues seen in the previous version that caused port configurations not being applied properly are now resolved.\n","excerpt":"It's about time to sail our ship to Istanbul and see all of the new features and tweaks that come with the 1.2 release. This time around we focused on streamlining the installation flow, providing a simpler way of testing lambda functions, giving more power and flexibility to Kyma Eventing, migrating to a new version of Istio, and providing even more useful documentation.","fields":{"slug":"/blog/2019/6/13/release-notes-12","assetsPath":"/assets/blog-posts/2019-06-13-release-notes-1.2/","date":"June 13, 2019","postInfo":{"fileName":"release-notes-12","year":2019,"month":6,"day":13}},"frontmatter":{"title":"Kyma 1.2 Istanbul","author":{"name":"Tomasz Papiernik, Technical Writer @Kyma"},"tags":["release-notes"],"type":"release","releaseTag":"1.2.0","redirectFrom":["/blog/release-notes-12"]}},"slidesBanner":{"bannerDuration":5000,"slides":[{"text":"Don't miss the session by Piotr Kopczynski at Helm Summit on September 11 at 15:47.","url":"https://helmsummit2019.sched.com/event/S8sS","startDate":"09/09/2019","endDate":"12/09/2019"}]},"locale":"en"}}}