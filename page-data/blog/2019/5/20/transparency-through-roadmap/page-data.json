{"componentChunkName":"component---src-views-blog-single-index-tsx","path":"/blog/2019/5/20/transparency-through-roadmap","webpackCompilationHash":"aefb7e842b40c338951f","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/2019/5/20/transparency-through-roadmap","post":{"id":"082cc87f-9803-546a-a08c-4102706d71e8","rawMarkdownBody":"\nRecently, on our website, we released a new view called [Roadmap](https://kyma-project.io/roadmap/). Its main purpose is to raise the transparency of the project direction and enable features contribution.\n\n<!-- overview -->\n\n## Tough choice\n\nIt is not easy to choose the right open source tool. There are many different factors you need to take into account before you make the decision. Luckily, the Internet is full of ideas and suggestions on how to make that choice. For example, you can read the article [How to Choose the Best Open Source Software](https://towardsdatascience.com/how-to-choose-the-best-open-source-software-b1cbbe4f6398) to get some help.\n\n> Remember that the amount of commits, issues, and pull-requests (PRs) can be a signal of investment and commitment to a project.\n\nThese kind of articles are very helpful. When I started using open source projects as my dependencies, I quickly realized that not all of them are trustworthy and deserve investment. Unfortunately, these guides and articles always focus on me, on the person that performs research. It is always me who needs to do the review, search for information, check out contributors and review projects' backlog. This is relatively easy if you have to choose a small library for parsing `.yaml` files in a browser. Things get more complicated when you have to decide upon a solution on which you will run or extend your business applications. The size and complexity prevent you from good research. The number of PRs and issues clearly indicates a huge investment in the project, but you can only guess what will come next and how it will evolve. If you have to take a strategic decision, you need to know what the direction, vision and future development plans of a given solution are.\n\nWe wanted to improve in this area and make things easier for the Kyma community. We identified in Kyma different capabilities and shared our goal and vision for each of them. The capabilities have their own roadmaps which are in sync with one another and all together constitute an overview of what is going to happen in Kyma in the short and long term. We combined them all in one view called [Roadmap](https://kyma-project.io/roadmap/).\n\nThanks to this view you can clearly identify the areas of Kyma that are the most important for you, and see if the planned development goes in the direction you expect. If something is not the way you wanted, you can always share your opinion with us at our [Core SIG meetings](https://github.com/kyma-project/community/blob/master/collaboration/02-sig-core.md). Contact us especially if you notice that we are not fully transparent regarding a specific capability, and its roadmap is not properly maintained. Another way to make things better is to join us, and contribute.\n\n## Easier contribution\n\nBeing an open source user for a few years now, I noticed on many different channels that people want to start a contribution to a project, but they do not know what they could contribute. There is a common question: `I want to contribute to this project, what feature would be the most interesting for others?` This is yet another reason why we worked on this new view on our website. We don't want you to search and invent ideas for contribution. All you need is already there, in our Roadmap. You can just pick a feature that is planned for development, and go forward with a proposal and implementation. This way you know that you contribute to something that is important for Kyma and its future.\n","excerpt":"Recently, on our website, we released a new view called Roadmap. Its main purpose is to raise the transparency of the project direction and enable features contribution.","fields":{"slug":"/blog/2019/5/20/transparency-through-roadmap","assetsPath":"/assets/blog-posts/2019-05-20-transparency-through-roadmap/","date":"May 20, 2019","postInfo":{"fileName":"transparency-through-roadmap","year":2019,"month":5,"day":20}},"frontmatter":{"title":"Transparency and openness through a clear vision and roadmap","author":{"name":"Lukasz Gornicki, Community Manager and Core&Supporting Capability Owner"},"tags":["community"],"type":null,"releaseTag":null,"redirectFrom":null}},"assetsPath":"/assets/blog-posts/2019-05-20-transparency-through-roadmap/","previous":{"id":"c1edb43f-5587-5956-b39e-b9dfe4f013a6","rawMarkdownBody":"\nAfter the long-awaited 1.0 Gliwice release, we focused mainly on putting the polishing touches to the current setup, including improvements in the Console UI performance and usability, Asset Store and Service Catalog extensions, Application Operator optimization, and documentation-related tweaks. Still, we are proud to communicate a few new features we bring to you in 1.1 Helsinki. Read on to find out what has changed in Kyma since 1.0.\n\n<!-- overview -->\n\nThe highlights of Kyma 1.1 Helsinki include:\n\n- [Add-ons in the Catalog UI](#add-ons-in-the-catalog-ui) - We enabled a new way to share add-ons by combining the concepts of Service Catalog bundles with Helm charts.\n- [AWS Service Broker](#aws-service-broker-add-on) - We extended our third-party services by adding the AWS service offerings.\n- [Minio Gateway](#minio-gateway-mode) - We improved the Asset Store configuration to let you use Google Cloud Storage.\n- [Octopus](#octopus-in-kyma) - We introduced a new testing tool that replaced Helm tests.\n\nSee the overview of all changes in this release:\n\n- [Application Connector](#application-connector) - Application Operator optimization, OData support in documentation, new Event Service endpoint\n- [Console](#console) - Performance improvements, usability improvements\n- [Core and Supporting](#core-and-supporting) - Minio Gateway mode\n- [Documentation](#documentation) - Configuration and installation document improvements\n- [Eventing](#eventing) - Subscription CR status change, improved upgradability, new dashboards in Grafana\n- [Productivity](#productivity) - Octopus in Kyma\n- [Service Management](#service-management) - Add-ons in the Catalog UI, AWS Service Broker add-on, documentation support for add-ons, \"provision only once\" APIs and Events\n\nRead about a known issue for [Tracing](#known-issues).\n\n---\n\n## Application Connector\n\n### Application Operator optimization\n\nIn this release, we optimized the memory consumption for the Application Operator. The component is now much more stable and reliable, even under the high cluster load.\n\n### OData support in documentation\n\nYou can now read the updated Application Connector documentation that includes information on the supported APIs, including the support for [OData API registration](/docs/1.1/components/application-connector/#overview-overview-supported-apis).\n\n### New Event Service endpoint\n\nWe enriched the Event Service with the new `/{application}/v1/events/subscribed` endpoint that only returns information on the subscribed Events. This endpoint is perfect for your system optimization as the connected application no longer needs to send Events that are not used by any lambda or service. [Read more](/docs/1.1/components/application-connector/#api-event-service) about the endpoint and learn how you can use it to fetch Events.\n\n\n## Console\n\n### Performance improvements  \n\nAs a result of aggregating several calls into one, we reduced the initial loading time of the Console UI navigation.\n\n### Usability improvements\n\nWe added the `SYSTEM` badge to the system Namespaces. Thanks to it, you can easily distinguish them from the user-created ones on the Namespace overview page in the Console UI.\n\n![Namespace overview](./namespaces-overview.png)\n\n\n## Core and Supporting\n\n### Minio Gateway mode\n\nThe [Asset Store](/docs/1.1/components/asset-store) that ensures asset management in Kyma uses [Minio](https://min.io/) as a back-end solution. As stated in our documentation, we recommend that you use Minio in its Gateway mode for your production environment. This means you should use Minio as a gateway to Google Cloud Storage (GCS).\n\nIn this release, we focused on preparing an easy switch from the standalone mode to the Gateway mode by:\n- Making sure your data is seamlessly recreated after the switch.\n- Improving the stability of the Asset Store with Minio in the Gateway mode.\n- Providing clear documentation on how to [switch to GCS](/docs/1.1/components/asset-store/#tutorials-set-minio-to-the-google-cloud-storage-gateway-mode).\n- Integrating the Minio Gateway mode with our testing pipeline. This way, we can now test any new functionality against the Minio Gateway mode pointing to GCS.\n\n\n## Documentation\n\n### Configuration and installation document improvements\n\nIn 1.1, we focused on creating configuration documents and simplifying the existing installation documents.\n\nConfiguration improvements:\n- An [overview](/docs/1.1/root/kyma/#configuration-overview) document explaining what you can configure in Kyma and how you can do it before and after installation\n- Improved documents on selected [component installation](/docs/1.1/root/kyma/#configuration-custom-component-installation) and chart values [overrides](/docs/1.1/root/kyma/#configuration-helm-overrides-for-kyma-installation)\n- A [template](https://github.com/kyma-project/community/blob/master/guidelines/templates/resources/configuration.md) for the **Configuration** document type that provides technical details about configuration of a Kyma component's chart or sub-chart\n- A set of configuration documents for the [Asset Store](/docs/1.1/components/asset-store/#configuration-configuration) specifying the configurable parameters from the `values.yaml` charts and sub-charts that you can override. You can expect more of such documents for other Kyma components to come in the upcoming releases\n\nInstallation improvements:\n- A simplified [cluster installation](/docs/1.1/root/kyma/#installation-install-kyma-on-a-cluster) document explaining how you can quickly deploy Kyma on a cluster with a wildcard DNS provided by `xip.io`\n- A unified [local installation](/docs/1.1/root/kyma/#installation-install-kyma-locally) flow\n\n\n## Eventing\n\n### Subscription CR status change\n\nWe moved the status of a given resource from the `spec` section of the Subscription custom resource definition (CRD) to a sub-resource. This enables direct status interactions and recreating it without modifying the specification.\n\n### Improved upgradability\n\nWe added new tests for verifying the upgradability of Kyma Eventing. The tests ensure that a subscription created before an upgrade continues to work after the upgrade.\n\n### New dashboards in Grafana\n\nThere are two new dashboards available in Grafana:\n- **Ignored events** with Events for which there are no subscriptions\n- **Subscription details** to check if there are any issues with a given subscription\n\n> **CAUTION:** Currently, if the subscription name contains a dot (`.`), the dashboard charts will display the `NOT READY` status even if the subscription is `READY`.\n\n## Productivity\n\n### Octopus in Kyma\n\nAs part of productivity improvements in Kyma, we replaced Helm tests with the Octopus test runner. Kyma components now use Octopus as a testing framework to run tests defined as Docker images on a running cluster.\nRead more about [testing](/docs/1.1/root/kyma/#details-testing-kyma) in Kyma, [Octopus](https://github.com/kyma-incubator/octopus/blob/master/README.md) itself, and the benefits it brings to the Kyma testing process.\n\n\n## Service Management\n\n### Add-ons in the Catalog UI\n\nAiming to improve your user experience, we split the Catalog UI view into **Add-Ons** and **Services** tabs. This way, we separated the Helm Broker add-on configuration and installation inside the cluster from the third-party services. The Kyma cluster-wide integration UI also has a new **Add-ons Config** view where you can manage add-ons that are available in your Namespaced **Add-Ons** Catalog view. In the near future, we are also planning to rename bundles to add-ons.\n\n![Add-ons 1](./add-ons-1.png)\n\n![Add-ons 2](./add-ons-2.png)\n\n### AWS Service Broker add-on\n\nAs part of our constant efforts to improve your experience on third-party Service Brokers in Kyma, we extended our Service Catalog with Amazon offerings. The new [AWS Service Broker](/docs/1.1/components/service-catalog/#service-brokers-aws-service-broker) is available for you as an add-on, extending the existing GCP and Azure Service Brokers add-on family.\n\n### Documentation support for add-ons\n\nThe Helm Broker creates Service Class documentation from an add-on which appears in the **Add-Ons** Catalog UI view. [Read](https://kyma-project.io/docs/1.1/components/helm-broker#details-create-a-bundle-docs-directory) how to add documentation to your add-on. If your add-on extends the Service Catalog UI, [read](/docs/1.1/components/helm-broker#details-service-classes-documentation-provided-by-bundles) how to provide documentation for those new Service Classes.\n\n### \"Provision only once\" APIs and Events\n\nAPIs and Events of the Application Broker Service Classes now have a new \"provision only once\" feature that shows they are already available in a given Namespace.\n\n![Provision only once](./provision-only-once.png)\n\n\n## Tracing\n\n### Known issues\n\nBy default, the trace sampling rate for Istio is configured to 1%. With that rate, only a small ratio of all requests will be available in Jaeger for the trace analysis. We are planning to optimize that setting in next releases, including recommendations for specific usage scenarios.\nAs a workaround, adjust the setting manually using the official [Istio documentation](https://istio.io/docs/tasks/telemetry/distributed-tracing/overview/) if you require a higher sampling rate.\n","excerpt":"After the long-awaited 1.0 Gliwice release, we focused mainly on putting the polishing touches to the current setup, including improvements in the Console UI performance and usability, Asset Store and Service Catalog extensions, Application Operator optimization, and documentation-related tweaks. Still, we are proud to communicate a few new features we bring to you in 1.1 Helsinki. Read on to find out what has changed in Kyma since 1.0.","fields":{"slug":"/blog/2019/5/17/release-notes-11","assetsPath":"/assets/blog-posts/2019-05-17-release-notes-1.1/","date":"May 17, 2019","postInfo":{"fileName":"release-notes-11","year":2019,"month":5,"day":17}},"frontmatter":{"title":"Kyma 1.1 Helsinki","author":{"name":"Karolina Zydek, Technical Writer @Kyma"},"tags":["release-notes"],"type":"release","releaseTag":"1.1.0","redirectFrom":["/blog/release-notes-11"]}},"next":{"id":"f2c2aac7-9f39-540d-b83e-81cc64f75fb0","rawMarkdownBody":"\nJust as we initially promised, the developers are working hard to deliver new features and improvements every four weeks. Our last release is already available for 3 weeks, which means that the next Kyma version will be available in about a week. This time around, the release gets its codename from a city with an incredibly rich history, one that bridges the gap (literally!) between the East and the West. Kyma 1.2 Istanbul has a very rich history of improvements and new features and continues to aid the users in bridging the gap between different pieces of software. What's in store for the 1.2 release? \n<!-- overview -->\n\nFirst, let's have a look at the new features. We received a lot of feedback about writing and testing lambdas in the Console UI. It is quite easy to copy and paste the code from the examples over to the UI, the developers complained that testing their own code requires more effort than that. They wanted an easy way to check how their functions work with the message data they will get from the triggering event. To help the developers check that, we will introduce a single UI view which allows to prepare a sample event payload based on the message schema, send it directly to a lambda function, and check the result. This new feature should significantly speed up the developers' feedback loop.\n\nAnother new feature we're working on is the possibility to make only the selected Service Classes of an Application registered in Kyma bindable. Let's say that your Application exposes many APIs with different permission levels, such as a view-only API and an admin API. With the new feature, the system administrator can decide what services and APIs are available in a given Namespace.\n\nInstallation is an area where we also plan to make several improvements. Our Kyma CLI graduated from Kyma Incubator and allows for a quick, simple, and platform-agnostic local installation of Kyma. Our local installation instructions are going to be updated to use this convenient tool. \n\nWe want to prepare better default configurations to limit the number of steps required to install Kyma. For example, we will remove `sed` commands from the installation manual. Our goal is to have a very streamlined installation process but at the same time keep the possibility to configure and adjust every tiny setting in Kyma components, which is made possible by our powerful Kyma operator - the Kyma Installer.\n\nAnother improvement for Kyma users working with Google Cloud Platform is a possibility to install Kyma directly from [GCP Marketplace](https://console.cloud.google.com/marketplace/details/sap-public/kyma) with just a few clicks. This cool feature is already available and allows you to install Kyma 1.1. Because of its limited configuration options, treat it more like a preview than a polished deployment option but also know that we're continuing our work on this topic.\n\nHere are some other things that will come in Kyma 1.2 Istanbul:\n- Defining limits and resource quotas when a Namespace is created through the UI.\n- Easily navigating to the external URL of your services exposed through API management.\n- Passing custom headers through eventing.\n- Configuration for replacing built-in NATS with external messaging middleware.\n\nYou can find all the items planned for the 1.2 release in our [Zenhub](https://app.zenhub.com/workspaces/kyma---all-repositories-5b6d5985084045741e744dea/reports/release?release=5cb59383709ee87123145468).\n\nKyma 1.2 Istanbul is scheduled for release on 13.06.2019. Keep an eye out for more Kyma news and updates on our blog. See you around! \n","excerpt":"Just as we initially promised, the developers are working hard to deliver new features and improvements every four weeks. Our last release is already available for 3 weeks, which means that the next Kyma version will be available in about a week. This time around, the release gets its codename from a city with an incredibly rich history, one that bridges the gap (literally!) between the East and the West. Kyma 1.2 Istanbul has a very rich history of improvements and new features and continues to aid the users in bridging the gap between different pieces of software. What's in store for the 1.2 release?","fields":{"slug":"/blog/2019/6/3/release-12-plan","assetsPath":"/assets/blog-posts/2019-06-03-release-1.2-plan/","date":"June 03, 2019","postInfo":{"fileName":"release-12-plan","year":2019,"month":6,"day":3}},"frontmatter":{"title":"Kyma 1.2 Istanbul scheduled for release on 13.06.2019","author":{"name":"Piotr Bochynski, Product Owner @Kyma"},"tags":["release"],"type":null,"releaseTag":null,"redirectFrom":["/blog/release-12-plan"]}},"slidesBanner":{"bannerDuration":5000,"slides":[{"text":"Don't miss the session by Piotr Kopczynski at Helm Summit on September 11 at 15:47.","url":"https://helmsummit2019.sched.com/event/S8sS","startDate":"09/09/2019","endDate":"12/09/2019"}]},"locale":"en"}}}