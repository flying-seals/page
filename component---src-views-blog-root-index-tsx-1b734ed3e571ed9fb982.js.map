{"version":3,"sources":["webpack:///./src/views/blog/root/styled.ts","webpack:///./src/views/blog/root/index.tsx","webpack:///./src/views/blog/components/styled.ts","webpack:///./src/views/blog/components/Wrapper.tsx","webpack:///./src/views/blog/components/PostHeader.tsx","webpack:///./src/views/blog/components/content/templates/Default.tsx","webpack:///./src/views/blog/components/content/styled.ts","webpack:///./src/views/blog/components/content/templates/Release.tsx","webpack:///./src/views/blog/components/content/PostContent.tsx","webpack:///./src/types/blog.ts","webpack:///./src/views/blog/components/PostFooter.tsx","webpack:///./src/views/blog/components/Post.tsx"],"names":["StyledLink","styled","a","media","tablet","RSSIcon","div","phone","BlogView","posts","pageContext","rel","type","href","config","siteMetadata","siteUrl","feedUrl","Icon","iconName","iconPrefix","map","post","Post","markdown","excerpt","rawMarkdownBody","readMore","Wrapper","PostWrapper","article","PostHeaderWrapper","header","PostMetadata","p","PostContentWrapper","main","PostFooterWrapper","footer","PostTagsWrapper","ul","PostTag","li","h4","BlogPageWrapper","children","Container","Row","Unit","df","md","gt","getTranslation","injectIntl","title","name","author","postInfo","year","month","day","path","date","formatMessage","id","metadata","values","Link","Internal","to","H","as","DefaultTemplatePost","assetsPath","ReactMarkdown","source","escapeHtml","ReleaseButtonsWrapper","ReleaseTemplatePost","releaseTag","External","links","KYMA_REPOSITORY_LINK","Button","Normal","version","PostContent","Release","Default","PostFooter","tags","data","tag","key","PostPage","frontmatter","fields","slug","previous","next","Emphasized","size"],"mappings":"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","file":"component---src-views-blog-root-index-tsx-1b734ed3e571ed9fb982.js","sourcesContent":["import styled, { media } from \"@styled\";\n\nexport const StyledLink = styled.a`\n  align-self: flex-end;\n\n  ${media.tablet`\n    position: relative;\n    top: 10px;\n  `};\n`;\n\nexport const RSSIcon = styled.div`\n  position: relative;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 100%;\n  box-shadow: 0 1px 26px 0 rgba(137, 165, 199, 0.42);\n  background: #fff;\n  transition: all 0.2s linear, opacity 0.2s linear;\n\n  &:hover {\n    cursor: pointer;\n    background: #0b74de;\n\n    > svg {\n      color: #fff;\n    }\n  }\n\n  > svg {\n    color: #0b74de;\n    font-size: 24px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin-right: -50%;\n    transform: translate(-50%, -50%);\n    transition: color 0.2s linear, opacity 0.2s linear;\n\n    ${media.phone`\n      font-size: 28px;\n    `};\n  }\n`;\n","import React from \"react\";\n\nimport Icon from \"@components/shared/Icon\";\n\nimport { PostPage } from \"@views/blog/components/Post\";\nimport { BlogPageWrapper } from \"@views/blog/components/Wrapper\";\n\nimport { PageContext } from \"@typings/common\";\nimport { BlogPageContext, Post } from \"@typings/blog\";\n\nimport { StyledLink, RSSIcon } from \"./styled\";\n\nimport config from \"@config\";\n\nconst BlogView: React.FunctionComponent<PageContext<BlogPageContext>> = ({\n  pageContext: { posts },\n}) => (\n  <BlogPageWrapper>\n    <link\n      rel=\"alternate\"\n      type=\"application/rss+xml\"\n      href={`${config.siteMetadata.siteUrl}${config.siteMetadata.feedUrl}`}\n    />\n    <StyledLink\n      href={`/${config.siteMetadata.feedUrl}`}\n      rel=\"alternate\"\n      type=\"application/rss+xml\"\n    >\n      <RSSIcon>\n        <Icon iconName=\"rss\" iconPrefix=\"fas\" />\n      </RSSIcon>\n    </StyledLink>\n    {posts.map((post: Post) => (\n      <PostPage\n        {...post}\n        markdown={post.excerpt || post.rawMarkdownBody}\n        readMore={true}\n      />\n    ))}\n  </BlogPageWrapper>\n);\n\nexport default BlogView;\n","import styled, { media } from \"@styled\";\n\nexport const Wrapper = styled.div`\n  margin: 75px 0 0 0;\n  display: flex;\n  flex-direction: column;\n\n  ${media.phone`\n    margin-top: 25px;\n  `};\n`;\n\n/* Post */\nexport const PostWrapper = styled.article`\n  margin-bottom: 20px;\n  padding: 40px 0px;\n  border-bottom: 1px solid #e5e5e5;\n\n  &:last-child {\n    border-bottom: none;\n  }\n\n  ${media.tablet`\n    &:last-child {\n      padding-bottom: 0;\n    }\n    margin-bottom: 0;\n  `};\n`;\n\n/* Post Header */\nexport const PostHeaderWrapper = styled.header`\n  margin: 0 0 50px 0;\n\n  h2 {\n    font-size: 36px;\n    margin-bottom: 16px;\n    color: rgb(72, 87, 102);\n    transition: color 0.2s ease-in-out;\n\n    &:hover {\n      color: rgb(11, 116, 222);\n    }\n  }\n`;\n\nexport const PostMetadata = styled.p`\n  margin-bottom: 0;\n  display: inline-block;\n  text-align: left;\n  font-size: 18px;\n`;\n\n/* Post Content */\nexport const PostContentWrapper = styled.main`\n  iframe {\n    display: block;\n    margin: 0 auto;\n    margin-top: 24px;\n    margin-bottom: 24px;\n  }\n`;\n\n/* Post Footer */\nexport const PostFooterWrapper = styled.footer`\n  margin-top: 30px;\n`;\n\nexport const PostTagsWrapper = styled.ul`\n  list-style-type: none;\n  display: inline-block;\n  margin: 0;\n  margin-top: 0;\n`;\n\nexport const PostTag = styled.li`\n  display: inline-block;\n  margin-bottom: 15px;\n  margin-left: 15px;\n  font-size: 14px;\n\n  &:first-child {\n    margin-left: 0;\n    font-weight: 600;\n    font-size: 16px;\n\n    > svg {\n      margin-right: 6px;\n    }\n  }\n`;\n\n/* PrevNextSectionWrapper */\nexport const PrevNextSectionWrapper = styled.div`\n  margin-top: 75px;\n\n  a {\n    display: inline-block;\n\n    &:hover {\n      h4 {\n        color: rgb(11, 116, 222);\n      }\n    }\n  }\n\n  span {\n    font-size: 18px;\n    color: rgb(72, 87, 102);\n  }\n\n  svg {\n    position: absolute;\n    color: rgb(72, 87, 102);\n    top: 7px;\n  }\n`;\n\nexport const PrevWrapper = styled.div`\n  position: relative;\n  text-align: left;\n  min-width: 100%;\n\n  svg {\n    left: -18px;\n  }\n`;\n\nexport const NextWrapper = styled.div`\n  position: relative;\n  text-align: right;\n\n  svg {\n    right: -18px;\n  }\n`;\n\nexport const PrevNextSectionPostTitle = styled.h4`\n  transition: all 0.2s ease-in-out;\n  color: rgb(72, 87, 102);\n`;\n","import React from \"react\";\n\nimport Grid from \"@styled/Grid\";\n\nimport { Wrapper } from \"./styled\";\n\nexport const BlogPageWrapper: React.FunctionComponent = ({ children }) => (\n  <Grid.Container>\n    <Grid.Row>\n      <Grid.Unit df={1} md={0} />\n      <Grid.Unit df={10} md={12}>\n        <Wrapper>{children}</Wrapper>\n      </Grid.Unit>\n      <Grid.Unit df={1} md={0} />\n    </Grid.Row>\n  </Grid.Container>\n);\n","import React from \"react\";\n\nimport Link from \"@components/shared/Link\";\nimport H from \"@components/shared/H\";\n\nimport {\n  FormattedMessage,\n  getTranslation,\n  injectIntl,\n  IntlInterface,\n} from \"@common/i18n\";\n\nimport { PostMetaDataAuthor, PostFieldsInfo } from \"@typings/blog\";\n\nimport { PostHeaderWrapper, PostMetadata } from \"./styled\";\n\ninterface PostHeaderProps extends IntlInterface {\n  title: string;\n  author: PostMetaDataAuthor;\n  postInfo: PostFieldsInfo;\n  path: string;\n}\n\nconst gt = getTranslation(\"blog\");\n\nconst PostHeader: React.FunctionComponent<PostHeaderProps> = ({\n  title,\n  author: { name },\n  postInfo: { year, month, day },\n  path,\n  formatMessage,\n}) => {\n  const date = `${formatMessage({\n    id: `months.${month}.name`,\n  })} ${day}, ${year}`;\n\n  const metadata = (\n    <FormattedMessage\n      id={gt(\"postMetadata\")}\n      values={{\n        author: name,\n        date,\n      }}\n    />\n  );\n\n  return (\n    <PostHeaderWrapper>\n      <Link.Internal to={path}>\n        <H as=\"h2\">{title}</H>\n      </Link.Internal>\n      <PostMetadata>{metadata}</PostMetadata>\n    </PostHeaderWrapper>\n  );\n};\n\nexport default injectIntl(\"utils\")(PostHeader);\n","import React from \"react\";\n\nimport ReactMarkdown from \"@components/shared/ReactMarkdown\";\n\ninterface DefaultTemplatePostProps {\n  markdown: string;\n  assetsPath: string;\n}\n\nconst DefaultTemplatePost: React.FunctionComponent<\n  DefaultTemplatePostProps\n> = ({ markdown, assetsPath }) => (\n  <ReactMarkdown source={markdown} escapeHtml={false} assetsPath={assetsPath} />\n);\n\nexport default DefaultTemplatePost;\n","import styled from \"@styled\";\n\n/* Release Template */\nexport const ReleaseButtonsWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 50px;\n`;\n","import React from \"react\";\n\nimport { FormattedMessage } from \"@common/i18n\";\n\nimport ReactMarkdown from \"@components/shared/ReactMarkdown\";\nimport Button from \"@components/shared/Button\";\nimport Link from \"@components/shared/Link\";\n\nimport config from \"@config\";\n\nimport { ReleaseButtonsWrapper } from \"../styled\";\n\ninterface ReleaseTemplatePostProps {\n  markdown: string;\n  assetsPath: string;\n  releaseTag?: string;\n}\n\nconst ReleaseTemplatePost: React.FunctionComponent<\n  ReleaseTemplatePostProps\n> = ({ markdown, assetsPath, releaseTag }) => (\n  <>\n    {releaseTag && (\n      <ReleaseButtonsWrapper>\n        <Link.External\n          to={`${config.links.KYMA_REPOSITORY_LINK}/releases/${releaseTag}`}\n        >\n          <Button.Normal iconName=\"cloud-download-alt\" iconPrefix=\"fas\">\n            <FormattedMessage\n              id=\"blog.downloadButton\"\n              values={{\n                version: releaseTag,\n              }}\n            />\n          </Button.Normal>\n        </Link.External>\n      </ReleaseButtonsWrapper>\n    )}\n    <ReactMarkdown\n      source={markdown}\n      escapeHtml={false}\n      assetsPath={assetsPath}\n    />\n  </>\n);\n\nexport default ReleaseTemplatePost;\n","import React from \"react\";\n\nimport DefaultTemplate from \"@views/blog/components/content/templates/Default\";\nimport ReleaseTemplate from \"@views/blog/components/content/templates/Release\";\n\nimport {\n  PostMetaData,\n  PostTypeRelease,\n} from \"@typings/blog\";\n\ninterface PostContentProps {\n  markdown: string;\n  assetsPath?: string;\n  metadata: PostMetaData;\n}\n\nexport const PostContent: React.FunctionComponent<PostContentProps> = ({\n  markdown,\n  assetsPath = \"\",\n  metadata,\n}) => {\n  if (metadata.type) {\n    if (metadata.type === PostTypeRelease) {\n      return (\n        <ReleaseTemplate\n          markdown={markdown}\n          releaseTag={metadata.releaseTag}\n          assetsPath={assetsPath}\n        />\n      );\n    }\n  }\n\n  return <DefaultTemplate markdown={markdown} assetsPath={assetsPath} />;\n};\n","export interface BlogPageContext {\n  posts: Post[];\n}\n\nexport interface Post {\n  id: string;\n  excerpt?: string;\n  rawMarkdownBody: string;\n  fields: PostFields;\n  frontmatter: PostMetaData;\n}\n\nexport interface PostPageContext {\n  post: Post;\n  previous?: Post;\n  next?: Post;\n  assetsPath?: string;\n}\n\nexport interface PostFields {\n  slug: string;\n  date: string;\n  postInfo: PostFieldsInfo;\n}\n\nexport interface PostFieldsInfo {\n  year: string;\n  month: string;\n  day: string;\n}\n\nexport interface PostMetaData extends PostTypeMetadata {\n  title: string;\n  author: PostMetaDataAuthor;\n  tags?: string[];\n}\n\nexport interface PostMetaDataAuthor {\n  name: string;\n  socialMedia?: {\n    github?: string;\n    twitter?: string;\n  };\n}\n\nexport type PostType = \"release\" | \"event\";\nexport const PostTypeRelease = \"release\";\nexport const PostTypeEvent = \"event\";\n\nexport interface PostTypeMetadata {\n  type?: PostType;\n  releaseTag?: string;\n}\n","import React from \"react\";\n\nimport Icon from \"@components/shared/Icon\";\n\nimport { FormattedMessage, getTranslation } from \"@common/i18n\";\n\nimport { PostFooterWrapper, PostTagsWrapper, PostTag } from \"./styled\";\n\ninterface PostFooterProps {\n  tags: string[];\n}\n\nconst gt = getTranslation(\"blog\");\n\nexport const PostFooter: React.FunctionComponent<PostFooterProps> = ({\n  tags = [],\n}) => (\n  <PostFooterWrapper>\n    <PostTagsWrapper>\n      <FormattedMessage id={gt(\"tags\")}>\n        {data => (\n          <PostTag>\n            <Icon iconName=\"tags\" iconPrefix=\"fas\" />\n            {data}:\n          </PostTag>\n        )}\n      </FormattedMessage>\n      {tags.map((tag: string) => (\n        <PostTag key={tag}>#{tag}</PostTag>\n      ))}\n    </PostTagsWrapper>\n  </PostFooterWrapper>\n);\n","import React from \"react\";\n\nimport { FormattedMessage } from \"@common/i18n\";\n\nimport Link from \"@components/shared/Link\";\nimport Button from \"@components/shared/Button\";\n\nimport PostHeader from \"@views/blog/components/PostHeader\";\nimport { PostContent } from \"@views/blog/components/content/PostContent\";\nimport { PostFooter } from \"@views/blog/components/PostFooter\";\n\nimport { PostPageContext, Post } from \"@typings/blog\";\n\nimport { PostWrapper, PostContentWrapper } from \"./styled\";\n\ninterface PostPageProps extends Post, Omit<PostPageContext, \"post\"> {\n  markdown: string;\n  readMore?: boolean;\n}\n\nexport const PostPage: React.FunctionComponent<PostPageProps> = ({\n  frontmatter: { title, author, tags = [] },\n  frontmatter,\n  fields: { slug, postInfo },\n  markdown,\n  assetsPath = \"\",\n  previous,\n  next,\n  readMore = false,\n}) => (\n  <PostWrapper>\n    <PostHeader title={title} author={author} path={slug} postInfo={postInfo} />\n    <PostContentWrapper>\n      <PostContent\n        markdown={markdown}\n        metadata={frontmatter}\n        assetsPath={assetsPath}\n      />\n    </PostContentWrapper>\n    {readMore && (\n      <Link.Internal to={slug}>\n        <Button.Emphasized size=\"sm\">\n          <FormattedMessage id=\"blog.readMoreButton\" />\n        </Button.Emphasized>\n      </Link.Internal>\n    )}\n    <PostFooter tags={tags} />\n    {/* {!readMore && (\n        <PrevNextSection next={next} previous={previous} />\n      )} */}\n  </PostWrapper>\n);\n"],"sourceRoot":""}